@Library('conservify') _

timestamps {
    node () {
        try {
            slackSend channel: '#automation', color: 'good', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Starting... (<${env.BUILD_URL}|Open>)"

            stage ('deploy') {
                sshagent (credentials: ['ssh-fkdev-deploy']) {
					sh "ssh-keygen -f '/var/jenkins_home/.ssh/known_hosts' -R ${params.DeployFrom}"
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@${params.DeployFrom} wget -nv --auth-no-challenge 'https://jlewallen:11dd13d93bef23cdc97a57fcfa500ddb17@code.conservify.org/jenkins/job/fk/job/aws-build-stacks/lastSuccessfulBuild/artifact/dev-ops/amis/build/fk-cloud-stack.tar'"
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@${params.DeployFrom} sudo mv fk-cloud-stack.tar /tmp/incoming-stacks"
                }

				def isDev = params.DeployFrom.indexOf("fkdev.org") >= 0
				def statusUrl = isDev ? "https://api.fkdev.org/status" : "https://api.fieldkit.org/status"

				if (watchDeployment(url: statusUrl, seconds: 60)) {
					slackSend channel: '#automation', color: 'good', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Deployed And Ready (<${env.BUILD_URL}|Open>)"
				}
				else {
					slackSend channel: '#automation', color: 'danger', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Oh, no. Deploy took too long (<${env.BUILD_URL}|Open>)"
				}
            }
        }
        catch (Exception e) {
            notifyFailure()
            throw e
        }
    }
}
