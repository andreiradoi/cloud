// Code generated by goa v3.1.1, DO NOT EDIT.
//
// following service
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package following

import (
	"context"

	"goa.design/goa/v3/security"
)

// Service is the following service interface.
type Service interface {
	// Follow implements follow.
	Follow(context.Context, *FollowPayload) (err error)
	// Unfollow implements unfollow.
	Unfollow(context.Context, *UnfollowPayload) (err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "following"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"follow", "unfollow"}

// FollowPayload is the payload type of the following service follow method.
type FollowPayload struct {
	Auth *string
	ID   *int64
}

// UnfollowPayload is the payload type of the following service unfollow method.
type UnfollowPayload struct {
	Auth *string
	ID   *int64
}

// credentials are invalid
type Unauthorized string

// Error returns an error description.
func (e Unauthorized) Error() string {
	return "credentials are invalid"
}

// ErrorName returns "unauthorized".
func (e Unauthorized) ErrorName() string {
	return "unauthorized"
}
