// Code generated by goa v3.1.2, DO NOT EDIT.
//
// ingestion HTTP server types
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package server

import (
	ingestion "github.com/fieldkit/cloud/server/api/gen/ingestion"
	goa "goa.design/goa/v3/pkg"
)

// ProcessStationRequestBody is the type of the "ingestion" service "process
// station" endpoint HTTP request body.
type ProcessStationRequestBody struct {
	StationID *int32 `form:"stationId,omitempty" json:"stationId,omitempty" xml:"stationId,omitempty"`
}

// ProcessIngestionRequestBody is the type of the "ingestion" service "process
// ingestion" endpoint HTTP request body.
type ProcessIngestionRequestBody struct {
	IngestionID *int64 `form:"ingestionId,omitempty" json:"ingestionId,omitempty" xml:"ingestionId,omitempty"`
}

// DeleteRequestBody is the type of the "ingestion" service "delete" endpoint
// HTTP request body.
type DeleteRequestBody struct {
	IngestionID *int64 `form:"ingestionId,omitempty" json:"ingestionId,omitempty" xml:"ingestionId,omitempty"`
}

// ProcessPendingBadRequestResponseBody is the type of the "ingestion" service
// "process pending" endpoint HTTP response body for the "bad-request" error.
type ProcessPendingBadRequestResponseBody string

// ProcessPendingForbiddenResponseBody is the type of the "ingestion" service
// "process pending" endpoint HTTP response body for the "forbidden" error.
type ProcessPendingForbiddenResponseBody string

// ProcessPendingNotFoundResponseBody is the type of the "ingestion" service
// "process pending" endpoint HTTP response body for the "not-found" error.
type ProcessPendingNotFoundResponseBody string

// ProcessPendingUnauthorizedResponseBody is the type of the "ingestion"
// service "process pending" endpoint HTTP response body for the "unauthorized"
// error.
type ProcessPendingUnauthorizedResponseBody string

// ProcessStationBadRequestResponseBody is the type of the "ingestion" service
// "process station" endpoint HTTP response body for the "bad-request" error.
type ProcessStationBadRequestResponseBody string

// ProcessStationForbiddenResponseBody is the type of the "ingestion" service
// "process station" endpoint HTTP response body for the "forbidden" error.
type ProcessStationForbiddenResponseBody string

// ProcessStationNotFoundResponseBody is the type of the "ingestion" service
// "process station" endpoint HTTP response body for the "not-found" error.
type ProcessStationNotFoundResponseBody string

// ProcessStationUnauthorizedResponseBody is the type of the "ingestion"
// service "process station" endpoint HTTP response body for the "unauthorized"
// error.
type ProcessStationUnauthorizedResponseBody string

// ProcessIngestionBadRequestResponseBody is the type of the "ingestion"
// service "process ingestion" endpoint HTTP response body for the
// "bad-request" error.
type ProcessIngestionBadRequestResponseBody string

// ProcessIngestionForbiddenResponseBody is the type of the "ingestion" service
// "process ingestion" endpoint HTTP response body for the "forbidden" error.
type ProcessIngestionForbiddenResponseBody string

// ProcessIngestionNotFoundResponseBody is the type of the "ingestion" service
// "process ingestion" endpoint HTTP response body for the "not-found" error.
type ProcessIngestionNotFoundResponseBody string

// ProcessIngestionUnauthorizedResponseBody is the type of the "ingestion"
// service "process ingestion" endpoint HTTP response body for the
// "unauthorized" error.
type ProcessIngestionUnauthorizedResponseBody string

// DeleteBadRequestResponseBody is the type of the "ingestion" service "delete"
// endpoint HTTP response body for the "bad-request" error.
type DeleteBadRequestResponseBody string

// DeleteForbiddenResponseBody is the type of the "ingestion" service "delete"
// endpoint HTTP response body for the "forbidden" error.
type DeleteForbiddenResponseBody string

// DeleteNotFoundResponseBody is the type of the "ingestion" service "delete"
// endpoint HTTP response body for the "not-found" error.
type DeleteNotFoundResponseBody string

// DeleteUnauthorizedResponseBody is the type of the "ingestion" service
// "delete" endpoint HTTP response body for the "unauthorized" error.
type DeleteUnauthorizedResponseBody string

// NewProcessPendingBadRequestResponseBody builds the HTTP response body from
// the result of the "process pending" endpoint of the "ingestion" service.
func NewProcessPendingBadRequestResponseBody(res ingestion.BadRequest) ProcessPendingBadRequestResponseBody {
	body := ProcessPendingBadRequestResponseBody(res)
	return body
}

// NewProcessPendingForbiddenResponseBody builds the HTTP response body from
// the result of the "process pending" endpoint of the "ingestion" service.
func NewProcessPendingForbiddenResponseBody(res ingestion.Forbidden) ProcessPendingForbiddenResponseBody {
	body := ProcessPendingForbiddenResponseBody(res)
	return body
}

// NewProcessPendingNotFoundResponseBody builds the HTTP response body from the
// result of the "process pending" endpoint of the "ingestion" service.
func NewProcessPendingNotFoundResponseBody(res ingestion.NotFound) ProcessPendingNotFoundResponseBody {
	body := ProcessPendingNotFoundResponseBody(res)
	return body
}

// NewProcessPendingUnauthorizedResponseBody builds the HTTP response body from
// the result of the "process pending" endpoint of the "ingestion" service.
func NewProcessPendingUnauthorizedResponseBody(res ingestion.Unauthorized) ProcessPendingUnauthorizedResponseBody {
	body := ProcessPendingUnauthorizedResponseBody(res)
	return body
}

// NewProcessStationBadRequestResponseBody builds the HTTP response body from
// the result of the "process station" endpoint of the "ingestion" service.
func NewProcessStationBadRequestResponseBody(res ingestion.BadRequest) ProcessStationBadRequestResponseBody {
	body := ProcessStationBadRequestResponseBody(res)
	return body
}

// NewProcessStationForbiddenResponseBody builds the HTTP response body from
// the result of the "process station" endpoint of the "ingestion" service.
func NewProcessStationForbiddenResponseBody(res ingestion.Forbidden) ProcessStationForbiddenResponseBody {
	body := ProcessStationForbiddenResponseBody(res)
	return body
}

// NewProcessStationNotFoundResponseBody builds the HTTP response body from the
// result of the "process station" endpoint of the "ingestion" service.
func NewProcessStationNotFoundResponseBody(res ingestion.NotFound) ProcessStationNotFoundResponseBody {
	body := ProcessStationNotFoundResponseBody(res)
	return body
}

// NewProcessStationUnauthorizedResponseBody builds the HTTP response body from
// the result of the "process station" endpoint of the "ingestion" service.
func NewProcessStationUnauthorizedResponseBody(res ingestion.Unauthorized) ProcessStationUnauthorizedResponseBody {
	body := ProcessStationUnauthorizedResponseBody(res)
	return body
}

// NewProcessIngestionBadRequestResponseBody builds the HTTP response body from
// the result of the "process ingestion" endpoint of the "ingestion" service.
func NewProcessIngestionBadRequestResponseBody(res ingestion.BadRequest) ProcessIngestionBadRequestResponseBody {
	body := ProcessIngestionBadRequestResponseBody(res)
	return body
}

// NewProcessIngestionForbiddenResponseBody builds the HTTP response body from
// the result of the "process ingestion" endpoint of the "ingestion" service.
func NewProcessIngestionForbiddenResponseBody(res ingestion.Forbidden) ProcessIngestionForbiddenResponseBody {
	body := ProcessIngestionForbiddenResponseBody(res)
	return body
}

// NewProcessIngestionNotFoundResponseBody builds the HTTP response body from
// the result of the "process ingestion" endpoint of the "ingestion" service.
func NewProcessIngestionNotFoundResponseBody(res ingestion.NotFound) ProcessIngestionNotFoundResponseBody {
	body := ProcessIngestionNotFoundResponseBody(res)
	return body
}

// NewProcessIngestionUnauthorizedResponseBody builds the HTTP response body
// from the result of the "process ingestion" endpoint of the "ingestion"
// service.
func NewProcessIngestionUnauthorizedResponseBody(res ingestion.Unauthorized) ProcessIngestionUnauthorizedResponseBody {
	body := ProcessIngestionUnauthorizedResponseBody(res)
	return body
}

// NewDeleteBadRequestResponseBody builds the HTTP response body from the
// result of the "delete" endpoint of the "ingestion" service.
func NewDeleteBadRequestResponseBody(res ingestion.BadRequest) DeleteBadRequestResponseBody {
	body := DeleteBadRequestResponseBody(res)
	return body
}

// NewDeleteForbiddenResponseBody builds the HTTP response body from the result
// of the "delete" endpoint of the "ingestion" service.
func NewDeleteForbiddenResponseBody(res ingestion.Forbidden) DeleteForbiddenResponseBody {
	body := DeleteForbiddenResponseBody(res)
	return body
}

// NewDeleteNotFoundResponseBody builds the HTTP response body from the result
// of the "delete" endpoint of the "ingestion" service.
func NewDeleteNotFoundResponseBody(res ingestion.NotFound) DeleteNotFoundResponseBody {
	body := DeleteNotFoundResponseBody(res)
	return body
}

// NewDeleteUnauthorizedResponseBody builds the HTTP response body from the
// result of the "delete" endpoint of the "ingestion" service.
func NewDeleteUnauthorizedResponseBody(res ingestion.Unauthorized) DeleteUnauthorizedResponseBody {
	body := DeleteUnauthorizedResponseBody(res)
	return body
}

// NewProcessPendingPayload builds a ingestion service process pending endpoint
// payload.
func NewProcessPendingPayload(auth string) *ingestion.ProcessPendingPayload {
	v := &ingestion.ProcessPendingPayload{}
	v.Auth = auth

	return v
}

// NewProcessStationPayload builds a ingestion service process station endpoint
// payload.
func NewProcessStationPayload(body *ProcessStationRequestBody, auth string) *ingestion.ProcessStationPayload {
	v := &ingestion.ProcessStationPayload{
		StationID: *body.StationID,
	}
	v.Auth = auth

	return v
}

// NewProcessIngestionPayload builds a ingestion service process ingestion
// endpoint payload.
func NewProcessIngestionPayload(body *ProcessIngestionRequestBody, auth string) *ingestion.ProcessIngestionPayload {
	v := &ingestion.ProcessIngestionPayload{
		IngestionID: *body.IngestionID,
	}
	v.Auth = auth

	return v
}

// NewDeletePayload builds a ingestion service delete endpoint payload.
func NewDeletePayload(body *DeleteRequestBody, auth string) *ingestion.DeletePayload {
	v := &ingestion.DeletePayload{
		IngestionID: *body.IngestionID,
	}
	v.Auth = auth

	return v
}

// ValidateProcessStationRequestBody runs the validations defined on Process
// StationRequestBody
func ValidateProcessStationRequestBody(body *ProcessStationRequestBody) (err error) {
	if body.StationID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("stationId", "body"))
	}
	return
}

// ValidateProcessIngestionRequestBody runs the validations defined on Process
// IngestionRequestBody
func ValidateProcessIngestionRequestBody(body *ProcessIngestionRequestBody) (err error) {
	if body.IngestionID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("ingestionId", "body"))
	}
	return
}

// ValidateDeleteRequestBody runs the validations defined on DeleteRequestBody
func ValidateDeleteRequestBody(body *DeleteRequestBody) (err error) {
	if body.IngestionID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("ingestionId", "body"))
	}
	return
}
