// Code generated by goa v3.1.2, DO NOT EDIT.
//
// sensor HTTP server types
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package server

import (
	sensor "github.com/fieldkit/cloud/server/api/gen/sensor"
)

// MetaBadRequestResponseBody is the type of the "sensor" service "meta"
// endpoint HTTP response body for the "bad-request" error.
type MetaBadRequestResponseBody string

// MetaForbiddenResponseBody is the type of the "sensor" service "meta"
// endpoint HTTP response body for the "forbidden" error.
type MetaForbiddenResponseBody string

// MetaNotFoundResponseBody is the type of the "sensor" service "meta" endpoint
// HTTP response body for the "not-found" error.
type MetaNotFoundResponseBody string

// MetaUnauthorizedResponseBody is the type of the "sensor" service "meta"
// endpoint HTTP response body for the "unauthorized" error.
type MetaUnauthorizedResponseBody string

// DataBadRequestResponseBody is the type of the "sensor" service "data"
// endpoint HTTP response body for the "bad-request" error.
type DataBadRequestResponseBody string

// DataForbiddenResponseBody is the type of the "sensor" service "data"
// endpoint HTTP response body for the "forbidden" error.
type DataForbiddenResponseBody string

// DataNotFoundResponseBody is the type of the "sensor" service "data" endpoint
// HTTP response body for the "not-found" error.
type DataNotFoundResponseBody string

// DataUnauthorizedResponseBody is the type of the "sensor" service "data"
// endpoint HTTP response body for the "unauthorized" error.
type DataUnauthorizedResponseBody string

// NewMetaBadRequestResponseBody builds the HTTP response body from the result
// of the "meta" endpoint of the "sensor" service.
func NewMetaBadRequestResponseBody(res sensor.BadRequest) MetaBadRequestResponseBody {
	body := MetaBadRequestResponseBody(res)
	return body
}

// NewMetaForbiddenResponseBody builds the HTTP response body from the result
// of the "meta" endpoint of the "sensor" service.
func NewMetaForbiddenResponseBody(res sensor.Forbidden) MetaForbiddenResponseBody {
	body := MetaForbiddenResponseBody(res)
	return body
}

// NewMetaNotFoundResponseBody builds the HTTP response body from the result of
// the "meta" endpoint of the "sensor" service.
func NewMetaNotFoundResponseBody(res sensor.NotFound) MetaNotFoundResponseBody {
	body := MetaNotFoundResponseBody(res)
	return body
}

// NewMetaUnauthorizedResponseBody builds the HTTP response body from the
// result of the "meta" endpoint of the "sensor" service.
func NewMetaUnauthorizedResponseBody(res sensor.Unauthorized) MetaUnauthorizedResponseBody {
	body := MetaUnauthorizedResponseBody(res)
	return body
}

// NewDataBadRequestResponseBody builds the HTTP response body from the result
// of the "data" endpoint of the "sensor" service.
func NewDataBadRequestResponseBody(res sensor.BadRequest) DataBadRequestResponseBody {
	body := DataBadRequestResponseBody(res)
	return body
}

// NewDataForbiddenResponseBody builds the HTTP response body from the result
// of the "data" endpoint of the "sensor" service.
func NewDataForbiddenResponseBody(res sensor.Forbidden) DataForbiddenResponseBody {
	body := DataForbiddenResponseBody(res)
	return body
}

// NewDataNotFoundResponseBody builds the HTTP response body from the result of
// the "data" endpoint of the "sensor" service.
func NewDataNotFoundResponseBody(res sensor.NotFound) DataNotFoundResponseBody {
	body := DataNotFoundResponseBody(res)
	return body
}

// NewDataUnauthorizedResponseBody builds the HTTP response body from the
// result of the "data" endpoint of the "sensor" service.
func NewDataUnauthorizedResponseBody(res sensor.Unauthorized) DataUnauthorizedResponseBody {
	body := DataUnauthorizedResponseBody(res)
	return body
}

// NewDataPayload builds a sensor service data endpoint payload.
func NewDataPayload(auth string) *sensor.DataPayload {
	v := &sensor.DataPayload{}
	v.Auth = auth

	return v
}
