swagger: "2.0"
info:
  title: ""
  version: ""
host: localhost:80
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /modules/meta:
    get:
      tags:
      - modules
      summary: meta modules
      operationId: modules#meta
      responses:
        "200":
          description: OK response.
          schema: {}
      schemes:
      - http
  /projects/{id}/follow:
    post:
      tags:
      - following
      summary: follow following
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: following#follow
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/FollowingFollowUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/{id}/followers:
    get:
      tags:
      - following
      summary: followers following
      operationId: following#followers
      parameters:
      - name: page
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/FollowingFollowersResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/FollowingFollowersUnauthorizedResponseBody'
      schemes:
      - http
  /projects/{id}/unfollow:
    post:
      tags:
      - following
      summary: unfollow following
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: following#unfollow
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/FollowingUnfollowUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /tasks/devices/{deviceId}/refresh:
    post:
      tags:
      - tasks
      summary: refresh device tasks
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: tasks#refresh device
      parameters:
      - name: deviceId
        in: path
        required: true
        type: string
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TasksRefreshDeviceUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /tasks/five:
    get:
      tags:
      - tasks
      summary: five tasks
      operationId: tasks#five
      responses:
        "204":
          description: No Content response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TasksFiveUnauthorizedResponseBody'
      schemes:
      - http
  /test/{id}:
    get:
      tags:
      - test
      summary: get test
      operationId: test#get
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TestGetUnauthorizedResponseBody'
      schemes:
      - http
  /test/email:
    get:
      tags:
      - test
      summary: email test
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: test#email
      parameters:
      - name: address
        in: query
        required: true
        type: string
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TestEmailUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /test/error:
    get:
      tags:
      - test
      summary: error test
      operationId: test#error
      responses:
        "204":
          description: No Content response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TestErrorUnauthorizedResponseBody'
      schemes:
      - http
definitions:
  AvatarResponseBody:
    title: AvatarResponseBody
    type: object
    properties:
      url:
        type: string
        example: Suscipit magni eaque rerum occaecati ut sunt.
    example:
      url: Ut sed qui facilis quaerat.
    required:
    - url
  FollowerResponseBody:
    title: 'Mediatype identifier: application/vnd.app.follower; view=default'
    type: object
    properties:
      avatar:
        $ref: '#/definitions/AvatarResponseBody'
      id:
        type: integer
        example: 5169825133928420987
        format: int64
      name:
        type: string
        example: Repellendus omnis sit accusamus occaecati soluta.
    description: FollowerResponseBody result type (default view)
    example:
      avatar:
        url: Eligendi dolorem accusantium reiciendis.
      id: 2451232622494328044
      name: Rem laudantium molestias.
    required:
    - id
    - name
  FollowerResponseBodyCollection:
    title: 'Mediatype identifier: application/vnd.app.follower; type=collection; view=default'
    type: array
    items:
      $ref: '#/definitions/FollowerResponseBody'
    description: FollowerCollectionResponseBody is the result type for an array of
      FollowerResponseBody (default view)
    example:
    - avatar:
        url: Eligendi dolorem accusantium reiciendis.
      id: 3221783665047566580
      name: Ea ut alias dignissimos sit dignissimos.
    - avatar:
        url: Eligendi dolorem accusantium reiciendis.
      id: 3221783665047566580
      name: Ea ut alias dignissimos sit dignissimos.
  FollowingFollowUnauthorizedResponseBody:
    title: FollowingFollowUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Aut qui quae et et atque.
  FollowingFollowersResponseBody:
    title: 'Mediatype identifier: application/vnd.app.followers; view=default'
    type: object
    properties:
      followers:
        $ref: '#/definitions/FollowerResponseBodyCollection'
      page:
        type: integer
        example: 480033006
        format: int32
      total:
        type: integer
        example: 836681448
        format: int32
    description: FollowersResponseBody result type (default view)
    example:
      followers:
      - avatar:
          url: Eligendi dolorem accusantium reiciendis.
        id: 3221783665047566580
        name: Ea ut alias dignissimos sit dignissimos.
      - avatar:
          url: Eligendi dolorem accusantium reiciendis.
        id: 3221783665047566580
        name: Ea ut alias dignissimos sit dignissimos.
      page: 1397462597
      total: 925637298
    required:
    - followers
    - total
    - page
  FollowingFollowersUnauthorizedResponseBody:
    title: FollowingFollowersUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Adipisci excepturi aliquid sequi.
  FollowingUnfollowUnauthorizedResponseBody:
    title: FollowingUnfollowUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Tempora repudiandae voluptatibus sed.
  TasksFiveUnauthorizedResponseBody:
    title: TasksFiveUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Perspiciatis aut recusandae.
  TasksRefreshDeviceUnauthorizedResponseBody:
    title: TasksRefreshDeviceUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Dolorem voluptatibus nisi mollitia ad ut.
  TestEmailUnauthorizedResponseBody:
    title: TestEmailUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Corrupti nesciunt beatae sed consequuntur.
  TestErrorUnauthorizedResponseBody:
    title: TestErrorUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Consequatur esse libero.
  TestGetUnauthorizedResponseBody:
    title: TestGetUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Quis quo iusto saepe et.
securityDefinitions:
  jwt_header_Authorization:
    type: apiKey
    description: |2-

      **Security Scopes**:
        * `api:access`: API access
        * `api:admin`: API admin access
        * `api:ingestion`: Ingestion access
    name: Authorization
    in: header
