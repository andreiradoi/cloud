swagger: "2.0"
info:
  title: ""
  version: ""
host: localhost:80
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /modules/meta:
    get:
      tags:
      - modules
      summary: meta modules
      operationId: modules#meta
      responses:
        "200":
          description: OK response.
          schema: {}
      schemes:
      - http
  /projects/{id}/activity:
    get:
      tags:
      - activity
      summary: project activity
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: activity#project
      parameters:
      - name: page
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ActivityProjectResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/{id}/follow:
    post:
      tags:
      - following
      summary: follow following
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: following#follow
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/FollowingFollowUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/{id}/followers:
    get:
      tags:
      - following
      summary: followers following
      operationId: following#followers
      parameters:
      - name: page
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/FollowingFollowersResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/FollowingFollowersUnauthorizedResponseBody'
      schemes:
      - http
  /projects/{id}/unfollow:
    post:
      tags:
      - following
      summary: unfollow following
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: following#unfollow
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/FollowingUnfollowUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/{id}/update:
    post:
      tags:
      - project
      summary: update project
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: project#update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      - name: UpdateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectUpdateRequestBody'
          required:
          - body
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ProjectUpdateUnauthorizedResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/ProjectUpdateNotFoundResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/invites/{id}/accept:
    post:
      tags:
      - project
      summary: accept invite project
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: project#accept invite
      parameters:
      - name: token
        in: query
        required: false
        type: string
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ProjectAcceptInviteUnauthorizedResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/ProjectAcceptInviteNotFoundResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/invites/{id}/reject:
    post:
      tags:
      - project
      summary: reject invite project
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: project#reject invite
      parameters:
      - name: token
        in: query
        required: false
        type: string
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ProjectRejectInviteUnauthorizedResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/ProjectRejectInviteNotFoundResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/invites/{token}:
    get:
      tags:
      - project
      summary: lookup invite project
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: project#lookup invite
      parameters:
      - name: token
        in: path
        required: true
        type: string
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ProjectLookupInviteResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ProjectLookupInviteUnauthorizedResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/ProjectLookupInviteNotFoundResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /projects/invites/pending:
    get:
      tags:
      - project
      summary: invites project
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: project#invites
      parameters:
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ProjectInvitesResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ProjectInvitesUnauthorizedResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/ProjectInvitesNotFoundResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /stations/{id}/activity:
    get:
      tags:
      - activity
      summary: station activity
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: activity#station
      parameters:
      - name: page
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - name: Authorization
        in: header
        description: authentication token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ActivityStationResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /tasks/devices/{deviceId}/refresh:
    post:
      tags:
      - tasks
      summary: refresh device tasks
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: tasks#refresh device
      parameters:
      - name: deviceId
        in: path
        required: true
        type: string
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TasksRefreshDeviceUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /tasks/five:
    get:
      tags:
      - tasks
      summary: five tasks
      operationId: tasks#five
      responses:
        "204":
          description: No Content response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TasksFiveUnauthorizedResponseBody'
      schemes:
      - http
  /test/{id}:
    get:
      tags:
      - test
      summary: get test
      operationId: test#get
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TestGetUnauthorizedResponseBody'
      schemes:
      - http
  /test/email:
    get:
      tags:
      - test
      summary: email test
      description: |2-

        **Required security scopes for jwt**:
          * `api:access`
      operationId: test#email
      parameters:
      - name: address
        in: query
        required: true
        type: string
      - name: Authorization
        in: header
        description: authentication token
        required: true
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TestEmailUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /test/error:
    get:
      tags:
      - test
      summary: error test
      operationId: test#error
      responses:
        "204":
          description: No Content response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/TestErrorUnauthorizedResponseBody'
      schemes:
      - http
definitions:
  ActivityEntryResponseBody:
    title: 'Mediatype identifier: application/vnd.app.activity.entry; view=default'
    type: object
    properties:
      created_at:
        type: integer
        example: 6719994661863109356
        format: int64
      id:
        type: integer
        example: 7219371916175828053
        format: int64
      key:
        type: string
        example: Cupiditate corrupti.
      meta:
        example: Ab aliquam in assumenda magni tenetur deleniti.
      project:
        $ref: '#/definitions/ProjectSummaryResponseBody'
      station:
        $ref: '#/definitions/StationSummaryResponseBody'
      type:
        type: string
        example: Aut nam et similique qui aperiam atque.
    description: ActivityEntryResponseBody result type (default view)
    example:
      created_at: 8299627002827774540
      id: 7134918490231707556
      key: Sit nisi laborum laboriosam.
      meta: Debitis beatae.
      project:
        id: 3447383911419632806
        name: Quia laboriosam assumenda nisi consequatur vel.
      station:
        id: 4777539563246704252
        name: Sed hic non sed a.
      type: Ut quasi nihil.
    required:
    - id
    - key
    - project
    - station
    - created_at
    - type
    - meta
  ActivityEntryResponseBodyCollection:
    title: 'Mediatype identifier: application/vnd.app.activity.entry; type=collection;
      view=default'
    type: array
    items:
      $ref: '#/definitions/ActivityEntryResponseBody'
    description: ActivityEntryCollectionResponseBody is the result type for an array
      of ActivityEntryResponseBody (default view)
    example:
    - created_at: 6175829186511380616
      id: 5461354606995255224
      key: Corporis minima aut amet nam.
      meta: Ut quam aut quod eum.
      project:
        id: 3447383911419632806
        name: Quia laboriosam assumenda nisi consequatur vel.
      station:
        id: 4777539563246704252
        name: Sed hic non sed a.
      type: Qui odio quis earum nulla assumenda.
    - created_at: 6175829186511380616
      id: 5461354606995255224
      key: Corporis minima aut amet nam.
      meta: Ut quam aut quod eum.
      project:
        id: 3447383911419632806
        name: Quia laboriosam assumenda nisi consequatur vel.
      station:
        id: 4777539563246704252
        name: Sed hic non sed a.
      type: Qui odio quis earum nulla assumenda.
    - created_at: 6175829186511380616
      id: 5461354606995255224
      key: Corporis minima aut amet nam.
      meta: Ut quam aut quod eum.
      project:
        id: 3447383911419632806
        name: Quia laboriosam assumenda nisi consequatur vel.
      station:
        id: 4777539563246704252
        name: Sed hic non sed a.
      type: Qui odio quis earum nulla assumenda.
  ActivityProjectResponseBody:
    title: 'Mediatype identifier: application/vnd.app.project.activity.page; view=default'
    type: object
    properties:
      activities:
        $ref: '#/definitions/ActivityEntryResponseBodyCollection'
      page:
        type: integer
        example: 1242414396
        format: int32
      total:
        type: integer
        example: 1108454175
        format: int32
    description: ProjectResponseBody result type (default view)
    example:
      activities:
      - created_at: 6175829186511380616
        id: 5461354606995255224
        key: Corporis minima aut amet nam.
        meta: Ut quam aut quod eum.
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        station:
          id: 4777539563246704252
          name: Sed hic non sed a.
        type: Qui odio quis earum nulla assumenda.
      - created_at: 6175829186511380616
        id: 5461354606995255224
        key: Corporis minima aut amet nam.
        meta: Ut quam aut quod eum.
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        station:
          id: 4777539563246704252
          name: Sed hic non sed a.
        type: Qui odio quis earum nulla assumenda.
      page: 404753865
      total: 1687406487
    required:
    - activities
    - total
    - page
  ActivityStationResponseBody:
    title: 'Mediatype identifier: application/vnd.app.station.activity.page; view=default'
    type: object
    properties:
      activities:
        $ref: '#/definitions/ActivityEntryResponseBodyCollection'
      page:
        type: integer
        example: 202898600
        format: int32
      total:
        type: integer
        example: 1001199697
        format: int32
    description: StationResponseBody result type (default view)
    example:
      activities:
      - created_at: 6175829186511380616
        id: 5461354606995255224
        key: Corporis minima aut amet nam.
        meta: Ut quam aut quod eum.
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        station:
          id: 4777539563246704252
          name: Sed hic non sed a.
        type: Qui odio quis earum nulla assumenda.
      - created_at: 6175829186511380616
        id: 5461354606995255224
        key: Corporis minima aut amet nam.
        meta: Ut quam aut quod eum.
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        station:
          id: 4777539563246704252
          name: Sed hic non sed a.
        type: Qui odio quis earum nulla assumenda.
      page: 1455037517
      total: 1520197130
    required:
    - activities
    - total
    - page
  AvatarResponseBody:
    title: AvatarResponseBody
    type: object
    properties:
      url:
        type: string
        example: Mollitia totam id quibusdam autem reprehenderit aliquam.
    example:
      url: Id repellat iusto tenetur dolorem nam.
    required:
    - url
  FollowerResponseBody:
    title: 'Mediatype identifier: application/vnd.app.follower; view=default'
    type: object
    properties:
      avatar:
        $ref: '#/definitions/AvatarResponseBody'
      id:
        type: integer
        example: 9179457146160618455
        format: int64
      name:
        type: string
        example: Distinctio repellat dolorem ipsa sit nam.
    description: FollowerResponseBody result type (default view)
    example:
      avatar:
        url: Quia nobis libero quia.
      id: 2442527037873298499
      name: Qui est sequi.
    required:
    - id
    - name
  FollowerResponseBodyCollection:
    title: 'Mediatype identifier: application/vnd.app.follower; type=collection; view=default'
    type: array
    items:
      $ref: '#/definitions/FollowerResponseBody'
    description: FollowerCollectionResponseBody is the result type for an array of
      FollowerResponseBody (default view)
    example:
    - avatar:
        url: Quia nobis libero quia.
      id: 7609268779910630430
      name: Quam fugit dolor consequatur aliquam.
    - avatar:
        url: Quia nobis libero quia.
      id: 7609268779910630430
      name: Quam fugit dolor consequatur aliquam.
    - avatar:
        url: Quia nobis libero quia.
      id: 7609268779910630430
      name: Quam fugit dolor consequatur aliquam.
    - avatar:
        url: Quia nobis libero quia.
      id: 7609268779910630430
      name: Quam fugit dolor consequatur aliquam.
  FollowingFollowUnauthorizedResponseBody:
    title: FollowingFollowUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Iusto dolores.
  FollowingFollowersResponseBody:
    title: 'Mediatype identifier: application/vnd.app.followers; view=default'
    type: object
    properties:
      followers:
        $ref: '#/definitions/FollowerResponseBodyCollection'
      page:
        type: integer
        example: 591928225
        format: int32
      total:
        type: integer
        example: 1979983755
        format: int32
    description: FollowersResponseBody result type (default view)
    example:
      followers:
      - avatar:
          url: Quia nobis libero quia.
        id: 7609268779910630430
        name: Quam fugit dolor consequatur aliquam.
      - avatar:
          url: Quia nobis libero quia.
        id: 7609268779910630430
        name: Quam fugit dolor consequatur aliquam.
      page: 1395122474
      total: 2054671489
    required:
    - followers
    - total
    - page
  FollowingFollowersUnauthorizedResponseBody:
    title: FollowingFollowersUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Nemo voluptatem.
  FollowingUnfollowUnauthorizedResponseBody:
    title: FollowingUnfollowUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Sapiente nobis quaerat nesciunt ut dicta laudantium.
  PendingInviteResponseBody:
    title: PendingInviteResponseBody
    type: object
    properties:
      id:
        type: integer
        example: 2332802505764138602
        format: int64
      project:
        $ref: '#/definitions/ProjectSummaryResponseBody'
      time:
        type: integer
        example: 8548087274381729518
        format: int64
    example:
      id: 1996835851892515123
      project:
        id: 3447383911419632806
        name: Quia laboriosam assumenda nisi consequatur vel.
      time: 8136271461735829520
    required:
    - id
    - project
    - time
  ProjectAcceptInviteNotFoundResponseBody:
    title: ProjectAcceptInviteNotFoundResponseBody
    type: string
    description: not found
    example: Quidem repellendus atque perspiciatis.
  ProjectAcceptInviteUnauthorizedResponseBody:
    title: ProjectAcceptInviteUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Est quidem deleniti necessitatibus fugiat velit sed.
  ProjectInvitesNotFoundResponseBody:
    title: ProjectInvitesNotFoundResponseBody
    type: string
    description: not found
    example: Omnis sed consequatur.
  ProjectInvitesResponseBody:
    title: 'Mediatype identifier: application/vnd.app.invites.pending; view=default'
    type: object
    properties:
      pending:
        type: array
        items:
          $ref: '#/definitions/PendingInviteResponseBody'
        example:
        - id: 1551477806904876671
          project:
            id: 3447383911419632806
            name: Quia laboriosam assumenda nisi consequatur vel.
          time: 2932066668171088077
        - id: 1551477806904876671
          project:
            id: 3447383911419632806
            name: Quia laboriosam assumenda nisi consequatur vel.
          time: 2932066668171088077
        - id: 1551477806904876671
          project:
            id: 3447383911419632806
            name: Quia laboriosam assumenda nisi consequatur vel.
          time: 2932066668171088077
    description: InvitesResponseBody result type (default view)
    example:
      pending:
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
    required:
    - pending
  ProjectInvitesUnauthorizedResponseBody:
    title: ProjectInvitesUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Expedita consequuntur voluptatum tenetur ut dolor iusto.
  ProjectLookupInviteNotFoundResponseBody:
    title: ProjectLookupInviteNotFoundResponseBody
    type: string
    description: not found
    example: Ea fugiat quas ex natus eaque.
  ProjectLookupInviteResponseBody:
    title: 'Mediatype identifier: application/vnd.app.invites.pending; view=default'
    type: object
    properties:
      pending:
        type: array
        items:
          $ref: '#/definitions/PendingInviteResponseBody'
        example:
        - id: 1551477806904876671
          project:
            id: 3447383911419632806
            name: Quia laboriosam assumenda nisi consequatur vel.
          time: 2932066668171088077
        - id: 1551477806904876671
          project:
            id: 3447383911419632806
            name: Quia laboriosam assumenda nisi consequatur vel.
          time: 2932066668171088077
        - id: 1551477806904876671
          project:
            id: 3447383911419632806
            name: Quia laboriosam assumenda nisi consequatur vel.
          time: 2932066668171088077
    description: Lookup InviteResponseBody result type (default view)
    example:
      pending:
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
      - id: 1551477806904876671
        project:
          id: 3447383911419632806
          name: Quia laboriosam assumenda nisi consequatur vel.
        time: 2932066668171088077
    required:
    - pending
  ProjectLookupInviteUnauthorizedResponseBody:
    title: ProjectLookupInviteUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Quia velit.
  ProjectRejectInviteNotFoundResponseBody:
    title: ProjectRejectInviteNotFoundResponseBody
    type: string
    description: not found
    example: Voluptatem possimus sint sint aut.
  ProjectRejectInviteUnauthorizedResponseBody:
    title: ProjectRejectInviteUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Beatae magnam et tempora exercitationem.
  ProjectSummaryResponseBody:
    title: ProjectSummaryResponseBody
    type: object
    properties:
      id:
        type: integer
        example: 9155692648436913183
        format: int64
      name:
        type: string
        example: Est aut temporibus.
    example:
      id: 6025190543071451924
      name: Quis exercitationem autem cumque velit enim.
    required:
    - id
    - name
  ProjectUpdateNotFoundResponseBody:
    title: ProjectUpdateNotFoundResponseBody
    type: string
    description: not found
    example: Vitae qui ad.
  ProjectUpdateRequestBody:
    title: ProjectUpdateRequestBody
    type: object
    properties:
      body:
        type: string
        example: Molestias cumque.
    example:
      body: Labore quaerat saepe.
    required:
    - body
  ProjectUpdateUnauthorizedResponseBody:
    title: ProjectUpdateUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Possimus eum sed iusto porro.
  StationSummaryResponseBody:
    title: StationSummaryResponseBody
    type: object
    properties:
      id:
        type: integer
        example: 2198464512681848529
        format: int64
      name:
        type: string
        example: Dolorem et enim ipsum.
    example:
      id: 4157611018174479128
      name: Consequatur qui consequatur.
    required:
    - id
    - name
  TasksFiveUnauthorizedResponseBody:
    title: TasksFiveUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Accusantium quisquam qui ut explicabo.
  TasksRefreshDeviceUnauthorizedResponseBody:
    title: TasksRefreshDeviceUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Dignissimos sit consequuntur.
  TestEmailUnauthorizedResponseBody:
    title: TestEmailUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Odio quod quis.
  TestErrorUnauthorizedResponseBody:
    title: TestErrorUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Laborum modi distinctio ea et dolor iure.
  TestGetUnauthorizedResponseBody:
    title: TestGetUnauthorizedResponseBody
    type: string
    description: credentials are invalid
    example: Voluptas quo sit voluptas deleniti.
securityDefinitions:
  jwt_header_Authorization:
    type: apiKey
    description: |2-

      **Security Scopes**:
        * `api:access`: API access
        * `api:admin`: API admin access
        * `api:ingestion`: Ingestion access
    name: Authorization
    in: header
