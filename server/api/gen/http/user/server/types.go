// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user HTTP server types
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package server

import (
	user "github.com/fieldkit/cloud/server/api/gen/user"
	userviews "github.com/fieldkit/cloud/server/api/gen/user/views"
)

// RolesResponseBody is the type of the "user" service "roles" endpoint HTTP
// response body.
type RolesResponseBody struct {
	Roles []*AvailableRoleResponseBody `form:"roles" json:"roles" xml:"roles"`
}

// RolesBadRequestResponseBody is the type of the "user" service "roles"
// endpoint HTTP response body for the "bad-request" error.
type RolesBadRequestResponseBody string

// RolesForbiddenResponseBody is the type of the "user" service "roles"
// endpoint HTTP response body for the "forbidden" error.
type RolesForbiddenResponseBody string

// RolesNotFoundResponseBody is the type of the "user" service "roles" endpoint
// HTTP response body for the "not-found" error.
type RolesNotFoundResponseBody string

// RolesUnauthorizedResponseBody is the type of the "user" service "roles"
// endpoint HTTP response body for the "unauthorized" error.
type RolesUnauthorizedResponseBody string

// DeleteBadRequestResponseBody is the type of the "user" service "delete"
// endpoint HTTP response body for the "bad-request" error.
type DeleteBadRequestResponseBody string

// DeleteForbiddenResponseBody is the type of the "user" service "delete"
// endpoint HTTP response body for the "forbidden" error.
type DeleteForbiddenResponseBody string

// DeleteNotFoundResponseBody is the type of the "user" service "delete"
// endpoint HTTP response body for the "not-found" error.
type DeleteNotFoundResponseBody string

// DeleteUnauthorizedResponseBody is the type of the "user" service "delete"
// endpoint HTTP response body for the "unauthorized" error.
type DeleteUnauthorizedResponseBody string

// UploadPhotoBadRequestResponseBody is the type of the "user" service "upload
// photo" endpoint HTTP response body for the "bad-request" error.
type UploadPhotoBadRequestResponseBody string

// UploadPhotoForbiddenResponseBody is the type of the "user" service "upload
// photo" endpoint HTTP response body for the "forbidden" error.
type UploadPhotoForbiddenResponseBody string

// UploadPhotoNotFoundResponseBody is the type of the "user" service "upload
// photo" endpoint HTTP response body for the "not-found" error.
type UploadPhotoNotFoundResponseBody string

// UploadPhotoUnauthorizedResponseBody is the type of the "user" service
// "upload photo" endpoint HTTP response body for the "unauthorized" error.
type UploadPhotoUnauthorizedResponseBody string

// DownloadPhotoBadRequestResponseBody is the type of the "user" service
// "download photo" endpoint HTTP response body for the "bad-request" error.
type DownloadPhotoBadRequestResponseBody string

// DownloadPhotoForbiddenResponseBody is the type of the "user" service
// "download photo" endpoint HTTP response body for the "forbidden" error.
type DownloadPhotoForbiddenResponseBody string

// DownloadPhotoNotFoundResponseBody is the type of the "user" service
// "download photo" endpoint HTTP response body for the "not-found" error.
type DownloadPhotoNotFoundResponseBody string

// DownloadPhotoUnauthorizedResponseBody is the type of the "user" service
// "download photo" endpoint HTTP response body for the "unauthorized" error.
type DownloadPhotoUnauthorizedResponseBody string

// AvailableRoleResponseBody is used to define fields on response body types.
type AvailableRoleResponseBody struct {
	ID   int32  `form:"id" json:"id" xml:"id"`
	Name string `form:"name" json:"name" xml:"name"`
}

// NewRolesResponseBody builds the HTTP response body from the result of the
// "roles" endpoint of the "user" service.
func NewRolesResponseBody(res *userviews.AvailableRolesView) *RolesResponseBody {
	body := &RolesResponseBody{}
	if res.Roles != nil {
		body.Roles = make([]*AvailableRoleResponseBody, len(res.Roles))
		for i, val := range res.Roles {
			body.Roles[i] = marshalUserviewsAvailableRoleViewToAvailableRoleResponseBody(val)
		}
	}
	return body
}

// NewRolesBadRequestResponseBody builds the HTTP response body from the result
// of the "roles" endpoint of the "user" service.
func NewRolesBadRequestResponseBody(res user.BadRequest) RolesBadRequestResponseBody {
	body := RolesBadRequestResponseBody(res)
	return body
}

// NewRolesForbiddenResponseBody builds the HTTP response body from the result
// of the "roles" endpoint of the "user" service.
func NewRolesForbiddenResponseBody(res user.Forbidden) RolesForbiddenResponseBody {
	body := RolesForbiddenResponseBody(res)
	return body
}

// NewRolesNotFoundResponseBody builds the HTTP response body from the result
// of the "roles" endpoint of the "user" service.
func NewRolesNotFoundResponseBody(res user.NotFound) RolesNotFoundResponseBody {
	body := RolesNotFoundResponseBody(res)
	return body
}

// NewRolesUnauthorizedResponseBody builds the HTTP response body from the
// result of the "roles" endpoint of the "user" service.
func NewRolesUnauthorizedResponseBody(res user.Unauthorized) RolesUnauthorizedResponseBody {
	body := RolesUnauthorizedResponseBody(res)
	return body
}

// NewDeleteBadRequestResponseBody builds the HTTP response body from the
// result of the "delete" endpoint of the "user" service.
func NewDeleteBadRequestResponseBody(res user.BadRequest) DeleteBadRequestResponseBody {
	body := DeleteBadRequestResponseBody(res)
	return body
}

// NewDeleteForbiddenResponseBody builds the HTTP response body from the result
// of the "delete" endpoint of the "user" service.
func NewDeleteForbiddenResponseBody(res user.Forbidden) DeleteForbiddenResponseBody {
	body := DeleteForbiddenResponseBody(res)
	return body
}

// NewDeleteNotFoundResponseBody builds the HTTP response body from the result
// of the "delete" endpoint of the "user" service.
func NewDeleteNotFoundResponseBody(res user.NotFound) DeleteNotFoundResponseBody {
	body := DeleteNotFoundResponseBody(res)
	return body
}

// NewDeleteUnauthorizedResponseBody builds the HTTP response body from the
// result of the "delete" endpoint of the "user" service.
func NewDeleteUnauthorizedResponseBody(res user.Unauthorized) DeleteUnauthorizedResponseBody {
	body := DeleteUnauthorizedResponseBody(res)
	return body
}

// NewUploadPhotoBadRequestResponseBody builds the HTTP response body from the
// result of the "upload photo" endpoint of the "user" service.
func NewUploadPhotoBadRequestResponseBody(res user.BadRequest) UploadPhotoBadRequestResponseBody {
	body := UploadPhotoBadRequestResponseBody(res)
	return body
}

// NewUploadPhotoForbiddenResponseBody builds the HTTP response body from the
// result of the "upload photo" endpoint of the "user" service.
func NewUploadPhotoForbiddenResponseBody(res user.Forbidden) UploadPhotoForbiddenResponseBody {
	body := UploadPhotoForbiddenResponseBody(res)
	return body
}

// NewUploadPhotoNotFoundResponseBody builds the HTTP response body from the
// result of the "upload photo" endpoint of the "user" service.
func NewUploadPhotoNotFoundResponseBody(res user.NotFound) UploadPhotoNotFoundResponseBody {
	body := UploadPhotoNotFoundResponseBody(res)
	return body
}

// NewUploadPhotoUnauthorizedResponseBody builds the HTTP response body from
// the result of the "upload photo" endpoint of the "user" service.
func NewUploadPhotoUnauthorizedResponseBody(res user.Unauthorized) UploadPhotoUnauthorizedResponseBody {
	body := UploadPhotoUnauthorizedResponseBody(res)
	return body
}

// NewDownloadPhotoBadRequestResponseBody builds the HTTP response body from
// the result of the "download photo" endpoint of the "user" service.
func NewDownloadPhotoBadRequestResponseBody(res user.BadRequest) DownloadPhotoBadRequestResponseBody {
	body := DownloadPhotoBadRequestResponseBody(res)
	return body
}

// NewDownloadPhotoForbiddenResponseBody builds the HTTP response body from the
// result of the "download photo" endpoint of the "user" service.
func NewDownloadPhotoForbiddenResponseBody(res user.Forbidden) DownloadPhotoForbiddenResponseBody {
	body := DownloadPhotoForbiddenResponseBody(res)
	return body
}

// NewDownloadPhotoNotFoundResponseBody builds the HTTP response body from the
// result of the "download photo" endpoint of the "user" service.
func NewDownloadPhotoNotFoundResponseBody(res user.NotFound) DownloadPhotoNotFoundResponseBody {
	body := DownloadPhotoNotFoundResponseBody(res)
	return body
}

// NewDownloadPhotoUnauthorizedResponseBody builds the HTTP response body from
// the result of the "download photo" endpoint of the "user" service.
func NewDownloadPhotoUnauthorizedResponseBody(res user.Unauthorized) DownloadPhotoUnauthorizedResponseBody {
	body := DownloadPhotoUnauthorizedResponseBody(res)
	return body
}

// NewRolesPayload builds a user service roles endpoint payload.
func NewRolesPayload(auth string) *user.RolesPayload {
	v := &user.RolesPayload{}
	v.Auth = auth

	return v
}

// NewDeletePayload builds a user service delete endpoint payload.
func NewDeletePayload(userID int32, auth string) *user.DeletePayload {
	v := &user.DeletePayload{}
	v.UserID = userID
	v.Auth = auth

	return v
}

// NewUploadPhotoPayload builds a user service upload photo endpoint payload.
func NewUploadPhotoPayload(contentType string, contentLength int64, auth string) *user.UploadPhotoPayload {
	v := &user.UploadPhotoPayload{}
	v.ContentType = contentType
	v.ContentLength = contentLength
	v.Auth = auth

	return v
}

// NewDownloadPhotoPayload builds a user service download photo endpoint
// payload.
func NewDownloadPhotoPayload(userID int32) *user.DownloadPhotoPayload {
	v := &user.DownloadPhotoPayload{}
	v.UserID = userID

	return v
}
