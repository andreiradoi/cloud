// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user HTTP server types
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package server

import (
	user "github.com/fieldkit/cloud/server/api/gen/user"
	userviews "github.com/fieldkit/cloud/server/api/gen/user/views"
)

// RolesResponseBody is the type of the "user" service "roles" endpoint HTTP
// response body.
type RolesResponseBody struct {
	Roles []*AvailableRoleResponseBody `form:"roles" json:"roles" xml:"roles"`
}

// RolesBadRequestResponseBody is the type of the "user" service "roles"
// endpoint HTTP response body for the "bad-request" error.
type RolesBadRequestResponseBody string

// RolesNotFoundResponseBody is the type of the "user" service "roles" endpoint
// HTTP response body for the "not-found" error.
type RolesNotFoundResponseBody string

// RolesUnauthorizedResponseBody is the type of the "user" service "roles"
// endpoint HTTP response body for the "unauthorized" error.
type RolesUnauthorizedResponseBody string

// AvailableRoleResponseBody is used to define fields on response body types.
type AvailableRoleResponseBody struct {
	ID   int32  `form:"id" json:"id" xml:"id"`
	Name string `form:"name" json:"name" xml:"name"`
}

// NewRolesResponseBody builds the HTTP response body from the result of the
// "roles" endpoint of the "user" service.
func NewRolesResponseBody(res *userviews.AvailableRolesView) *RolesResponseBody {
	body := &RolesResponseBody{}
	if res.Roles != nil {
		body.Roles = make([]*AvailableRoleResponseBody, len(res.Roles))
		for i, val := range res.Roles {
			body.Roles[i] = marshalUserviewsAvailableRoleViewToAvailableRoleResponseBody(val)
		}
	}
	return body
}

// NewRolesBadRequestResponseBody builds the HTTP response body from the result
// of the "roles" endpoint of the "user" service.
func NewRolesBadRequestResponseBody(res user.BadRequest) RolesBadRequestResponseBody {
	body := RolesBadRequestResponseBody(res)
	return body
}

// NewRolesNotFoundResponseBody builds the HTTP response body from the result
// of the "roles" endpoint of the "user" service.
func NewRolesNotFoundResponseBody(res user.NotFound) RolesNotFoundResponseBody {
	body := RolesNotFoundResponseBody(res)
	return body
}

// NewRolesUnauthorizedResponseBody builds the HTTP response body from the
// result of the "roles" endpoint of the "user" service.
func NewRolesUnauthorizedResponseBody(res user.Unauthorized) RolesUnauthorizedResponseBody {
	body := RolesUnauthorizedResponseBody(res)
	return body
}

// NewRolesPayload builds a user service roles endpoint payload.
func NewRolesPayload(auth string) *user.RolesPayload {
	v := &user.RolesPayload{}
	v.Auth = auth

	return v
}
