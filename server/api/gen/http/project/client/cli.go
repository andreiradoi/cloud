// Code generated by goa v3.1.1, DO NOT EDIT.
//
// project HTTP client CLI support package
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package client

import (
	"encoding/json"
	"fmt"
	"strconv"

	project "github.com/fieldkit/cloud/server/api/gen/project"
)

// BuildUpdatePayload builds the payload for the project update endpoint from
// CLI flags.
func BuildUpdatePayload(projectUpdateBody string, projectUpdateID string, projectUpdateAuth string) (*project.UpdatePayload, error) {
	var err error
	var body UpdateRequestBody
	{
		err = json.Unmarshal([]byte(projectUpdateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"body\": \"Quam aut quod.\"\n   }'")
		}
	}
	var id int64
	{
		id, err = strconv.ParseInt(projectUpdateID, 10, 64)
		if err != nil {
			return nil, fmt.Errorf("invalid value for id, must be INT64")
		}
	}
	var auth *string
	{
		if projectUpdateAuth != "" {
			auth = &projectUpdateAuth
		}
	}
	v := &project.UpdatePayload{
		Body: body.Body,
	}
	v.ID = id
	v.Auth = auth

	return v, nil
}
