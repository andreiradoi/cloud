// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user client
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package user

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "user" service client.
type Client struct {
	RolesEndpoint         goa.Endpoint
	DeleteEndpoint        goa.Endpoint
	UploadPhotoEndpoint   goa.Endpoint
	DownloadPhotoEndpoint goa.Endpoint
}

// NewClient initializes a "user" service client given the endpoints.
func NewClient(roles, delete_, uploadPhoto, downloadPhoto goa.Endpoint) *Client {
	return &Client{
		RolesEndpoint:         roles,
		DeleteEndpoint:        delete_,
		UploadPhotoEndpoint:   uploadPhoto,
		DownloadPhotoEndpoint: downloadPhoto,
	}
}

// Roles calls the "roles" endpoint of the "user" service.
func (c *Client) Roles(ctx context.Context, p *RolesPayload) (res *AvailableRoles, err error) {
	var ires interface{}
	ires, err = c.RolesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AvailableRoles), nil
}

// Delete calls the "delete" endpoint of the "user" service.
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}

// UploadPhoto calls the "upload photo" endpoint of the "user" service.
func (c *Client) UploadPhoto(ctx context.Context, p *UploadPhotoPayload, req io.ReadCloser) (err error) {
	_, err = c.UploadPhotoEndpoint(ctx, &UploadPhotoRequestData{Payload: p, Body: req})
	return
}

// DownloadPhoto calls the "download photo" endpoint of the "user" service.
func (c *Client) DownloadPhoto(ctx context.Context, p *DownloadPhotoPayload) (res *DownloadPhotoResult, resp io.ReadCloser, err error) {
	var ires interface{}
	ires, err = c.DownloadPhotoEndpoint(ctx, p)
	if err != nil {
		return
	}
	o := ires.(*DownloadPhotoResponseData)
	return o.Result, o.Body, nil
}
