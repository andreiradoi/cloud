consumes:
- application/json
definitions:
  AddAdministratorPayload:
    example:
      userId: 8.610176902796946e+18
    properties:
      userId:
        example: 8.610176902796946e+18
        format: int64
        type: integer
    required:
    - userId
    title: AddAdministratorPayload
    type: object
  AddDeviceSourcePayload:
    example:
      key: Esse sapiente.
      name: Neque itaque tempora voluptatem sed unde vel.
    properties:
      key:
        example: Esse sapiente.
        type: string
      name:
        example: Neque itaque tempora voluptatem sed unde vel.
        type: string
    required:
    - name
    - key
    title: AddDeviceSourcePayload
    type: object
  AddExpeditionPayload:
    example:
      description: Est expedita et quae omnis.
      name: Molestiae rerum ut officiis vitae.
      slug: bnqpv56hnk
    properties:
      description:
        example: Est expedita et quae omnis.
        type: string
      name:
        example: Molestiae rerum ut officiis vitae.
        type: string
      slug:
        example: bnqpv56hnk
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddExpeditionPayload
    type: object
  AddFieldNotePayload:
    example:
      category_id: 2.6743573036799e+18
      created: "1995-10-06T13:03:49Z"
      media_id: 1.3983250519153526e+18
      note: Vel ut quod ad quisquam nihil.
    properties:
      category_id:
        example: 2.6743573036799e+18
        format: int64
        type: integer
      created:
        example: "1995-10-06T13:03:49Z"
        format: date-time
        type: string
      media_id:
        example: 1.3983250519153526e+18
        format: int64
        type: integer
      note:
        example: Vel ut quod ad quisquam nihil.
        type: string
    required:
    - created
    title: AddFieldNotePayload
    type: object
  AddFirmwarePayload:
    example:
      etag: Quo qui laboriosam voluptatum.
      meta: Odio voluptatibus omnis recusandae omnis perferendis illo.
      module: Officia dolores facere veritatis quod voluptas.
      profile: Sit id officia ipsa quam consectetur rerum.
      url: Ducimus assumenda quod nesciunt.
    properties:
      etag:
        example: Quo qui laboriosam voluptatum.
        type: string
      meta:
        example: Odio voluptatibus omnis recusandae omnis perferendis illo.
        type: string
      module:
        example: Officia dolores facere veritatis quod voluptas.
        type: string
      profile:
        example: Sit id officia ipsa quam consectetur rerum.
        type: string
      url:
        example: Ducimus assumenda quod nesciunt.
        type: string
    required:
    - etag
    - module
    - profile
    - url
    - meta
    title: AddFirmwarePayload
    type: object
  AddMemberPayload:
    example:
      role: Quo vitae deleniti consequatur ipsa quae.
      userId: 5.613766134748833e+18
    properties:
      role:
        example: Quo vitae deleniti consequatur ipsa quae.
        type: string
      userId:
        example: 5.613766134748833e+18
        format: int64
        type: integer
    required:
    - userId
    - role
    title: AddMemberPayload
    type: object
  AddProjectPayload:
    example:
      description: Distinctio omnis.
      end_time: "1986-07-13T22:51:05Z"
      goal: Ex alias sunt repellendus.
      location: Explicabo distinctio commodi repellendus.
      name: Eos ratione quis repellendus incidunt reprehenderit dolore.
      private: false
      slug: pzc2lt4s3k
      start_time: "2005-12-11T03:09:29Z"
      tags: Et id fugiat est.
    properties:
      description:
        example: Distinctio omnis.
        type: string
      end_time:
        example: "1986-07-13T22:51:05Z"
        format: date-time
        type: string
      goal:
        example: Ex alias sunt repellendus.
        type: string
      location:
        example: Explicabo distinctio commodi repellendus.
        type: string
      name:
        example: Eos ratione quis repellendus incidunt reprehenderit dolore.
        type: string
      private:
        example: false
        type: boolean
      slug:
        example: pzc2lt4s3k
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
      start_time:
        example: "2005-12-11T03:09:29Z"
        format: date-time
        type: string
      tags:
        example: Et id fugiat est.
        type: string
    required:
    - name
    - slug
    - description
    title: AddProjectPayload
    type: object
  AddStationLogPayload:
    example:
      ID: 4.0733307154989286e+18
      body: In veritatis.
      station_id: 6.563052110498473e+18
      timestamp: Molestias nulla consequatur.
    properties:
      ID:
        example: 4.0733307154989286e+18
        format: int64
        type: integer
      body:
        example: In veritatis.
        type: string
      station_id:
        example: 6.563052110498473e+18
        format: int64
        type: integer
      timestamp:
        example: Molestias nulla consequatur.
        type: string
    required:
    - ID
    - station_id
    - body
    - timestamp
    title: AddStationLogPayload
    type: object
  AddStationLogsPayload:
    example:
      station_logs:
      - ID: 4.0733307154989286e+18
        body: In veritatis.
        station_id: 6.563052110498473e+18
        timestamp: Molestias nulla consequatur.
      - ID: 4.0733307154989286e+18
        body: In veritatis.
        station_id: 6.563052110498473e+18
        timestamp: Molestias nulla consequatur.
    properties:
      station_logs:
        example:
        - ID: 4.0733307154989286e+18
          body: In veritatis.
          station_id: 6.563052110498473e+18
          timestamp: Molestias nulla consequatur.
        - ID: 4.0733307154989286e+18
          body: In veritatis.
          station_id: 6.563052110498473e+18
          timestamp: Molestias nulla consequatur.
        items:
          $ref: '#/definitions/AddStationLogPayload'
        type: array
    required:
    - station_logs
    title: AddStationLogsPayload
    type: object
  AddStationPayload:
    example:
      device_id: Nihil suscipit vitae repellendus consequuntur sint quidem.
      name: Dolor recusandae suscipit.
      status_json:
        Possimus eveniet tenetur numquam.: 0.7269551706969736
    properties:
      device_id:
        example: Nihil suscipit vitae repellendus consequuntur sint quidem.
        type: string
      name:
        example: Dolor recusandae suscipit.
        type: string
      status_json:
        additionalProperties: true
        example:
          Possimus eveniet tenetur numquam.: 0.7269551706969736
        type: object
    required:
    - name
    - device_id
    - status_json
    title: AddStationPayload
    type: object
  AddTeamPayload:
    example:
      description: Non distinctio optio perspiciatis explicabo ullam ea.
      name: 0nn1f09iai
      slug: 9nu9zoszx1
    properties:
      description:
        example: Non distinctio optio perspiciatis explicabo ullam ea.
        type: string
      name:
        example: 0nn1f09iai
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: 9nu9zoszx1
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddTeamPayload
    type: object
  AddTwitterAccountSourcePayload:
    example:
      name: Ipsam esse officiis recusandae.
    properties:
      name:
        example: Ipsam esse officiis recusandae.
        type: string
    required:
    - name
    title: AddTwitterAccountSourcePayload
    type: object
  AddUserPayload:
    example:
      email: kenton_jewess@hamill.com
      invite_token: Dignissimos consequatur eius corrupti voluptates ullam.
      name: junefawgtw
      password: fxuinqctbd
    properties:
      email:
        example: kenton_jewess@hamill.com
        format: email
        type: string
      invite_token:
        example: Dignissimos consequatur eius corrupti voluptates ullam.
        type: string
      name:
        example: junefawgtw
        maxLength: 256
        pattern: \S
        type: string
      password:
        example: fxuinqctbd
        minLength: 10
        type: string
    required:
    - name
    - email
    - password
    title: AddUserPayload
    type: object
  BadRequestResponse:
    description: BadRequestResponse media type (default view)
    example:
      key: Corrupti laudantium nam.
      message: Consectetur molestiae.
    properties:
      key:
        example: Corrupti laudantium nam.
        type: string
      message:
        example: Consectetur molestiae.
        type: string
    required:
    - key
    - message
    title: 'Mediatype identifier: application/vnd.brr+json; view=default'
    type: object
  ClusterGeometrySummary:
    description: ClusterGeometrySummary media type (default view)
    example:
      geometry:
      - - 0.9682483955411658
      - - 0.9682483955411658
      - - 0.9682483955411658
      id: 5.41219004578842e+18
      sourceId: 1.6901081034442964e+18
    properties:
      geometry:
        example:
        - - 0.9682483955411658
        - - 0.9682483955411658
        - - 0.9682483955411658
        items:
          example:
          - 0.9682483955411658
          items:
            example: 0.9682483955411658
            format: double
            type: number
          type: array
        type: array
      id:
        example: 5.41219004578842e+18
        format: int64
        type: integer
      sourceId:
        example: 1.6901081034442964e+18
        format: int64
        type: integer
    required:
    - id
    - sourceId
    - geometry
    title: 'Mediatype identifier: application/vnd.app.cluster_geometry_summary+json;
      view=default'
    type: object
  ClusterSummary:
    description: ClusterSummary media type (default view)
    example:
      centroid:
      - 0.19551792542314236
      - 0.19551792542314236
      endTime: "1981-01-02T04:14:04Z"
      envelope:
      - - 0.32708305505896723
        - 0.32708305505896723
        - 0.32708305505896723
      - - 0.32708305505896723
        - 0.32708305505896723
        - 0.32708305505896723
      id: 4.3098637098340296e+18
      numberOfFeatures: 5.946389483332132e+18
      radius: 0.9346663439787433
      sourceId: 1.6792677370275564e+18
      startTime: "2010-04-11T23:37:15Z"
    properties:
      centroid:
        example:
        - 0.19551792542314236
        - 0.19551792542314236
        items:
          example: 0.19551792542314236
          format: double
          type: number
        type: array
      endTime:
        example: "1981-01-02T04:14:04Z"
        format: date-time
        type: string
      envelope:
        example:
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        items:
          example:
          - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
          items:
            example: 0.32708305505896723
            format: double
            type: number
          type: array
        type: array
      id:
        example: 4.3098637098340296e+18
        format: int64
        type: integer
      numberOfFeatures:
        example: 5.946389483332132e+18
        format: int64
        type: integer
      radius:
        example: 0.9346663439787433
        format: double
        type: number
      sourceId:
        example: 1.6792677370275564e+18
        format: int64
        type: integer
      startTime:
        example: "2010-04-11T23:37:15Z"
        format: date-time
        type: string
    required:
    - id
    - sourceId
    - startTime
    - endTime
    - numberOfFeatures
    - centroid
    - radius
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      view=default'
    type: object
  ClusterSummaryCollection:
    description: ClusterSummaryCollection is the media type for an array of ClusterSummary
      (default view)
    example:
    - centroid:
      - 0.19551792542314236
      - 0.19551792542314236
      endTime: "1981-01-02T04:14:04Z"
      envelope:
      - - 0.32708305505896723
        - 0.32708305505896723
        - 0.32708305505896723
      - - 0.32708305505896723
        - 0.32708305505896723
        - 0.32708305505896723
      id: 4.3098637098340296e+18
      numberOfFeatures: 5.946389483332132e+18
      radius: 0.9346663439787433
      sourceId: 1.6792677370275564e+18
      startTime: "2010-04-11T23:37:15Z"
    items:
      $ref: '#/definitions/ClusterSummary'
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      type=collection; view=default'
    type: array
  DeviceDataRecord:
    description: DeviceDataRecord media type (default view)
    example:
      data:
        Facilis quis blanditiis recusandae est.: true
      id: 4.96580577271105e+18
      location:
      - 0.8522260143236732
      meta: 2.827138534810339e+18
      record: 1.2626736114732598e+18
      time: "2000-09-09T05:59:52Z"
    properties:
      data:
        additionalProperties: true
        example:
          Facilis quis blanditiis recusandae est.: true
        type: object
      id:
        example: 4.96580577271105e+18
        format: int64
        type: integer
      location:
        example:
        - 0.8522260143236732
        items:
          example: 0.8522260143236732
          format: double
          type: number
        type: array
      meta:
        example: 2.827138534810339e+18
        format: int64
        type: integer
      record:
        example: 1.2626736114732598e+18
        format: int64
        type: integer
      time:
        example: "2000-09-09T05:59:52Z"
        format: date-time
        type: string
    required:
    - id
    - time
    - record
    - meta
    - location
    - data
    title: 'Mediatype identifier: application/vnd.app.device.data.record+json; view=default'
    type: object
  DeviceDataRecordCollection:
    description: DeviceDataRecordCollection is the media type for an array of DeviceDataRecord
      (default view)
    example:
    - data:
        Facilis quis blanditiis recusandae est.: true
      id: 4.96580577271105e+18
      location:
      - 0.8522260143236732
      meta: 2.827138534810339e+18
      record: 1.2626736114732598e+18
      time: "2000-09-09T05:59:52Z"
    - data:
        Facilis quis blanditiis recusandae est.: true
      id: 4.96580577271105e+18
      location:
      - 0.8522260143236732
      meta: 2.827138534810339e+18
      record: 1.2626736114732598e+18
      time: "2000-09-09T05:59:52Z"
    - data:
        Facilis quis blanditiis recusandae est.: true
      id: 4.96580577271105e+18
      location:
      - 0.8522260143236732
      meta: 2.827138534810339e+18
      record: 1.2626736114732598e+18
      time: "2000-09-09T05:59:52Z"
    items:
      $ref: '#/definitions/DeviceDataRecord'
    title: 'Mediatype identifier: application/vnd.app.device.data.record+json; type=collection;
      view=default'
    type: array
  DeviceDataRecordsResponse:
    description: DeviceDataRecordsResponse media type (default view)
    example:
      data:
      - data:
          Facilis quis blanditiis recusandae est.: true
        id: 4.96580577271105e+18
        location:
        - 0.8522260143236732
        meta: 2.827138534810339e+18
        record: 1.2626736114732598e+18
        time: "2000-09-09T05:59:52Z"
      meta:
      - data:
          Cumque nihil.: 6b16f45f-a984-46d9-b672-d4ef899c52bc
        id: 4.464267130479644e+18
        record: 3.682513715611599e+17
        time: "1984-12-27T14:09:02Z"
      - data:
          Cumque nihil.: 6b16f45f-a984-46d9-b672-d4ef899c52bc
        id: 4.464267130479644e+18
        record: 3.682513715611599e+17
        time: "1984-12-27T14:09:02Z"
    properties:
      data:
        $ref: '#/definitions/DeviceDataRecordCollection'
      meta:
        $ref: '#/definitions/DeviceMetaRecordCollection'
    required:
    - meta
    - data
    title: 'Mediatype identifier: application/vnd.app.device.data+json; view=default'
    type: object
  DeviceDataSummary:
    description: DeviceDataSummary media type (default view)
    example:
      first: 5.950820709492612e+18
      last: 1.4511460751907422e+16
      size: 8.241352239231275e+18
    properties:
      first:
        example: 5.950820709492612e+18
        format: int64
        type: integer
      last:
        example: 1.4511460751907422e+16
        format: int64
        type: integer
      size:
        example: 8.241352239231275e+18
        format: int64
        type: integer
    required:
    - size
    - first
    - last
    title: 'Mediatype identifier: application/vnd.app.device.data.summary+json; view=default'
    type: object
  DeviceDataSummaryResponse:
    description: DeviceDataSummaryResponse media type (default view)
    example:
      provisions:
      - created: "1978-01-02T21:38:58Z"
        data:
          first: 5.950820709492612e+18
          last: 1.4511460751907422e+16
          size: 8.241352239231275e+18
        generation: Quaerat ea.
        meta:
          first: 3.0665300593033313e+18
          last: 4.5246624049845043e+18
          size: 1.1058285241412735e+18
        updated: "1994-05-20T07:02:03Z"
      - created: "1978-01-02T21:38:58Z"
        data:
          first: 5.950820709492612e+18
          last: 1.4511460751907422e+16
          size: 8.241352239231275e+18
        generation: Quaerat ea.
        meta:
          first: 3.0665300593033313e+18
          last: 4.5246624049845043e+18
          size: 1.1058285241412735e+18
        updated: "1994-05-20T07:02:03Z"
      - created: "1978-01-02T21:38:58Z"
        data:
          first: 5.950820709492612e+18
          last: 1.4511460751907422e+16
          size: 8.241352239231275e+18
        generation: Quaerat ea.
        meta:
          first: 3.0665300593033313e+18
          last: 4.5246624049845043e+18
          size: 1.1058285241412735e+18
        updated: "1994-05-20T07:02:03Z"
    properties:
      provisions:
        $ref: '#/definitions/DeviceProvisionSummaryCollection'
    required:
    - provisions
    title: 'Mediatype identifier: application/vnd.app.device.summary+json; view=default'
    type: object
  DeviceMetaRecord:
    description: DeviceMetaRecord media type (default view)
    example:
      data:
        Cumque nihil.: 6b16f45f-a984-46d9-b672-d4ef899c52bc
      id: 4.464267130479644e+18
      record: 3.682513715611599e+17
      time: "1984-12-27T14:09:02Z"
    properties:
      data:
        additionalProperties: true
        example:
          Cumque nihil.: 6b16f45f-a984-46d9-b672-d4ef899c52bc
        type: object
      id:
        example: 4.464267130479644e+18
        format: int64
        type: integer
      record:
        example: 3.682513715611599e+17
        format: int64
        type: integer
      time:
        example: "1984-12-27T14:09:02Z"
        format: date-time
        type: string
    required:
    - id
    - time
    - record
    - data
    title: 'Mediatype identifier: application/vnd.app.device.meta.record+json; view=default'
    type: object
  DeviceMetaRecordCollection:
    description: DeviceMetaRecordCollection is the media type for an array of DeviceMetaRecord
      (default view)
    example:
    - data:
        Cumque nihil.: 6b16f45f-a984-46d9-b672-d4ef899c52bc
      id: 4.464267130479644e+18
      record: 3.682513715611599e+17
      time: "1984-12-27T14:09:02Z"
    - data:
        Cumque nihil.: 6b16f45f-a984-46d9-b672-d4ef899c52bc
      id: 4.464267130479644e+18
      record: 3.682513715611599e+17
      time: "1984-12-27T14:09:02Z"
    - data:
        Cumque nihil.: 6b16f45f-a984-46d9-b672-d4ef899c52bc
      id: 4.464267130479644e+18
      record: 3.682513715611599e+17
      time: "1984-12-27T14:09:02Z"
    items:
      $ref: '#/definitions/DeviceMetaRecord'
    title: 'Mediatype identifier: application/vnd.app.device.meta.record+json; type=collection;
      view=default'
    type: array
  DeviceMetaSummary:
    description: DeviceMetaSummary media type (default view)
    example:
      first: 3.0665300593033313e+18
      last: 4.5246624049845043e+18
      size: 1.1058285241412735e+18
    properties:
      first:
        example: 3.0665300593033313e+18
        format: int64
        type: integer
      last:
        example: 4.5246624049845043e+18
        format: int64
        type: integer
      size:
        example: 1.1058285241412735e+18
        format: int64
        type: integer
    required:
    - size
    - first
    - last
    title: 'Mediatype identifier: application/vnd.app.device.meta.summary+json; view=default'
    type: object
  DeviceProvisionSummary:
    description: DeviceProvisionSummary media type (default view)
    example:
      created: "1978-01-02T21:38:58Z"
      data:
        first: 5.950820709492612e+18
        last: 1.4511460751907422e+16
        size: 8.241352239231275e+18
      generation: Quaerat ea.
      meta:
        first: 3.0665300593033313e+18
        last: 4.5246624049845043e+18
        size: 1.1058285241412735e+18
      updated: "1994-05-20T07:02:03Z"
    properties:
      created:
        example: "1978-01-02T21:38:58Z"
        format: date-time
        type: string
      data:
        $ref: '#/definitions/DeviceDataSummary'
      generation:
        example: Quaerat ea.
        type: string
      meta:
        $ref: '#/definitions/DeviceMetaSummary'
      updated:
        example: "1994-05-20T07:02:03Z"
        format: date-time
        type: string
    required:
    - generation
    - created
    - updated
    - meta
    - data
    title: 'Mediatype identifier: application/vnd.app.device.provision.summary+json;
      view=default'
    type: object
  DeviceProvisionSummaryCollection:
    description: DeviceProvisionSummaryCollection is the media type for an array of
      DeviceProvisionSummary (default view)
    example:
    - created: "1978-01-02T21:38:58Z"
      data:
        first: 5.950820709492612e+18
        last: 1.4511460751907422e+16
        size: 8.241352239231275e+18
      generation: Quaerat ea.
      meta:
        first: 3.0665300593033313e+18
        last: 4.5246624049845043e+18
        size: 1.1058285241412735e+18
      updated: "1994-05-20T07:02:03Z"
    - created: "1978-01-02T21:38:58Z"
      data:
        first: 5.950820709492612e+18
        last: 1.4511460751907422e+16
        size: 8.241352239231275e+18
      generation: Quaerat ea.
      meta:
        first: 3.0665300593033313e+18
        last: 4.5246624049845043e+18
        size: 1.1058285241412735e+18
      updated: "1994-05-20T07:02:03Z"
    - created: "1978-01-02T21:38:58Z"
      data:
        first: 5.950820709492612e+18
        last: 1.4511460751907422e+16
        size: 8.241352239231275e+18
      generation: Quaerat ea.
      meta:
        first: 3.0665300593033313e+18
        last: 4.5246624049845043e+18
        size: 1.1058285241412735e+18
      updated: "1994-05-20T07:02:03Z"
    items:
      $ref: '#/definitions/DeviceProvisionSummary'
    title: 'Mediatype identifier: application/vnd.app.device.provision.summary+json;
      type=collection; view=default'
    type: array
  DeviceSchema:
    description: DeviceSchema media type (default view)
    example:
      active: true
      deviceId: 7.363128553600023e+18
      jsonSchema: Voluptate natus dolores quo suscipit.
      key: Magni in ipsam asperiores nostrum facere dignissimos.
      projectId: 3.9715236247427896e+18
      schemaId: 2.6168848932501427e+18
    properties:
      active:
        example: true
        type: boolean
      deviceId:
        example: 7.363128553600023e+18
        format: int64
        type: integer
      jsonSchema:
        example: Voluptate natus dolores quo suscipit.
        type: string
      key:
        example: Magni in ipsam asperiores nostrum facere dignissimos.
        type: string
      projectId:
        example: 3.9715236247427896e+18
        format: int64
        type: integer
      schemaId:
        example: 2.6168848932501427e+18
        format: int64
        type: integer
    required:
    - deviceId
    - schemaId
    - projectId
    - active
    - jsonSchema
    - key
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; view=default'
    type: object
  DeviceSchemaCollection:
    description: DeviceSchemaCollection is the media type for an array of DeviceSchema
      (default view)
    example:
    - active: true
      deviceId: 7.363128553600023e+18
      jsonSchema: Voluptate natus dolores quo suscipit.
      key: Magni in ipsam asperiores nostrum facere dignissimos.
      projectId: 3.9715236247427896e+18
      schemaId: 2.6168848932501427e+18
    items:
      $ref: '#/definitions/DeviceSchema'
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; type=collection;
      view=default'
    type: array
  DeviceSchemas:
    description: DeviceSchemas media type (default view)
    example:
      schemas:
      - active: true
        deviceId: 7.363128553600023e+18
        jsonSchema: Voluptate natus dolores quo suscipit.
        key: Magni in ipsam asperiores nostrum facere dignissimos.
        projectId: 3.9715236247427896e+18
        schemaId: 2.6168848932501427e+18
      - active: true
        deviceId: 7.363128553600023e+18
        jsonSchema: Voluptate natus dolores quo suscipit.
        key: Magni in ipsam asperiores nostrum facere dignissimos.
        projectId: 3.9715236247427896e+18
        schemaId: 2.6168848932501427e+18
      - active: true
        deviceId: 7.363128553600023e+18
        jsonSchema: Voluptate natus dolores quo suscipit.
        key: Magni in ipsam asperiores nostrum facere dignissimos.
        projectId: 3.9715236247427896e+18
        schemaId: 2.6168848932501427e+18
    properties:
      schemas:
        $ref: '#/definitions/DeviceSchemaCollection'
    required:
    - schemas
    title: 'Mediatype identifier: application/vnd.app.device_schemas+json; view=default'
    type: object
  DeviceSource:
    description: DeviceSource media type (default view)
    example:
      active: false
      expeditionId: 9.878813567339238e+17
      id: 4.0345309212590444e+18
      key: Ratione et.
      name: A voluptas.
      teamId: 4.505075706230494e+18
      token: Corrupti laudantium quo eos.
      userId: 1.4339898754461952e+18
    properties:
      active:
        example: false
        type: boolean
      expeditionId:
        example: 9.878813567339238e+17
        format: int64
        type: integer
      id:
        example: 4.0345309212590444e+18
        format: int64
        type: integer
      key:
        example: Ratione et.
        type: string
      name:
        example: A voluptas.
        type: string
      teamId:
        example: 4.505075706230494e+18
        format: int64
        type: integer
      token:
        example: Corrupti laudantium quo eos.
        type: string
      userId:
        example: 1.4339898754461952e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - active
    - name
    - token
    - key
    title: 'Mediatype identifier: application/vnd.app.device_source+json; view=default'
    type: object
  DeviceSourceCollection:
    description: DeviceSourceCollection is the media type for an array of DeviceSource
      (default view)
    example:
    - active: false
      expeditionId: 9.878813567339238e+17
      id: 4.0345309212590444e+18
      key: Ratione et.
      name: A voluptas.
      teamId: 4.505075706230494e+18
      token: Corrupti laudantium quo eos.
      userId: 1.4339898754461952e+18
    - active: false
      expeditionId: 9.878813567339238e+17
      id: 4.0345309212590444e+18
      key: Ratione et.
      name: A voluptas.
      teamId: 4.505075706230494e+18
      token: Corrupti laudantium quo eos.
      userId: 1.4339898754461952e+18
    items:
      $ref: '#/definitions/DeviceSource'
    title: 'Mediatype identifier: application/vnd.app.device_source+json; type=collection;
      view=default'
    type: array
  DeviceSources:
    description: DeviceSources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 9.878813567339238e+17
        id: 4.0345309212590444e+18
        key: Ratione et.
        name: A voluptas.
        teamId: 4.505075706230494e+18
        token: Corrupti laudantium quo eos.
        userId: 1.4339898754461952e+18
      - active: false
        expeditionId: 9.878813567339238e+17
        id: 4.0345309212590444e+18
        key: Ratione et.
        name: A voluptas.
        teamId: 4.505075706230494e+18
        token: Corrupti laudantium quo eos.
        userId: 1.4339898754461952e+18
      - active: false
        expeditionId: 9.878813567339238e+17
        id: 4.0345309212590444e+18
        key: Ratione et.
        name: A voluptas.
        teamId: 4.505075706230494e+18
        token: Corrupti laudantium quo eos.
        userId: 1.4339898754461952e+18
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
    required:
    - deviceSources
    title: 'Mediatype identifier: application/vnd.app.device_sources+json; view=default'
    type: object
  Expedition:
    description: Expedition media type (default view)
    example:
      description: Nihil et.
      id: 1.576519638086125e+18
      name: Itaque ipsa soluta minus consequatur ullam.
      slug: o5qmtbwjv7
    properties:
      description:
        example: Nihil et.
        type: string
      id:
        example: 1.576519638086125e+18
        format: int64
        type: integer
      name:
        example: Itaque ipsa soluta minus consequatur ullam.
        type: string
      slug:
        example: o5qmtbwjv7
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.expedition+json; view=default'
    type: object
  ExpeditionCollection:
    description: ExpeditionCollection is the media type for an array of Expedition
      (default view)
    example:
    - description: Nihil et.
      id: 1.576519638086125e+18
      name: Itaque ipsa soluta minus consequatur ullam.
      slug: o5qmtbwjv7
    items:
      $ref: '#/definitions/Expedition'
    title: 'Mediatype identifier: application/vnd.app.expedition+json; type=collection;
      view=default'
    type: array
  Expeditions:
    description: Expeditions media type (default view)
    example:
      expeditions:
      - description: Nihil et.
        id: 1.576519638086125e+18
        name: Itaque ipsa soluta minus consequatur ullam.
        slug: o5qmtbwjv7
      - description: Nihil et.
        id: 1.576519638086125e+18
        name: Itaque ipsa soluta minus consequatur ullam.
        slug: o5qmtbwjv7
    properties:
      expeditions:
        $ref: '#/definitions/ExpeditionCollection'
    required:
    - expeditions
    title: 'Mediatype identifier: application/vnd.app.expeditions+json; view=default'
    type: object
  FieldNoteMedia:
    description: FieldNoteMedia media type (default view)
    example:
      content_type: Hic sunt ut fugit nobis ea dolores.
      created: "1970-08-26T14:08:10Z"
      id: 7.982984006461535e+18
      url: Adipisci aut ducimus autem et.
      user_id: 5.23996271352083e+18
    properties:
      content_type:
        example: Hic sunt ut fugit nobis ea dolores.
        type: string
      created:
        example: "1970-08-26T14:08:10Z"
        format: date-time
        type: string
      id:
        example: 7.982984006461535e+18
        format: int64
        type: integer
      url:
        example: Adipisci aut ducimus autem et.
        type: string
      user_id:
        example: 5.23996271352083e+18
        format: int64
        type: integer
    required:
    - id
    - created
    - user_id
    - url
    - content_type
    title: 'Mediatype identifier: application/vnd.app.field_note_media+json; view=default'
    type: object
  FieldNoteQueryResult:
    description: FieldNoteQueryResult media type (default view)
    example:
      category_key: Iste expedita libero.
      created: "1972-08-16T09:30:39Z"
      creator: Praesentium ut cum iusto iusto quia officia.
      id: 2.1539757199087585e+18
      media_content_type: Nobis omnis.
      media_id: 3.581489287797375e+18
      media_url: Id exercitationem aliquam.
      note: Et asperiores qui quas voluptates ad consectetur.
      user_id: 5.738166860930587e+18
    properties:
      category_key:
        example: Iste expedita libero.
        type: string
      created:
        example: "1972-08-16T09:30:39Z"
        format: date-time
        type: string
      creator:
        example: Praesentium ut cum iusto iusto quia officia.
        type: string
      id:
        example: 2.1539757199087585e+18
        format: int64
        type: integer
      media_content_type:
        example: Nobis omnis.
        type: string
      media_id:
        example: 3.581489287797375e+18
        format: int64
        type: integer
      media_url:
        example: Id exercitationem aliquam.
        type: string
      note:
        example: Et asperiores qui quas voluptates ad consectetur.
        type: string
      user_id:
        example: 5.738166860930587e+18
        format: int64
        type: integer
    required:
    - id
    - created
    - user_id
    - category_key
    - creator
    title: 'Mediatype identifier: application/vnd.app.field_note_result+json; view=default'
    type: object
  FieldNoteQueryResultCollection:
    description: FieldNoteQueryResultCollection is the media type for an array of
      FieldNoteQueryResult (default view)
    example:
    - category_key: Iste expedita libero.
      created: "1972-08-16T09:30:39Z"
      creator: Praesentium ut cum iusto iusto quia officia.
      id: 2.1539757199087585e+18
      media_content_type: Nobis omnis.
      media_id: 3.581489287797375e+18
      media_url: Id exercitationem aliquam.
      note: Et asperiores qui quas voluptates ad consectetur.
      user_id: 5.738166860930587e+18
    - category_key: Iste expedita libero.
      created: "1972-08-16T09:30:39Z"
      creator: Praesentium ut cum iusto iusto quia officia.
      id: 2.1539757199087585e+18
      media_content_type: Nobis omnis.
      media_id: 3.581489287797375e+18
      media_url: Id exercitationem aliquam.
      note: Et asperiores qui quas voluptates ad consectetur.
      user_id: 5.738166860930587e+18
    items:
      $ref: '#/definitions/FieldNoteQueryResult'
    title: 'Mediatype identifier: application/vnd.app.field_note_result+json; type=collection;
      view=default'
    type: array
  FieldNotes:
    description: FieldNotes media type (default view)
    example:
      notes:
      - category_key: Iste expedita libero.
        created: "1972-08-16T09:30:39Z"
        creator: Praesentium ut cum iusto iusto quia officia.
        id: 2.1539757199087585e+18
        media_content_type: Nobis omnis.
        media_id: 3.581489287797375e+18
        media_url: Id exercitationem aliquam.
        note: Et asperiores qui quas voluptates ad consectetur.
        user_id: 5.738166860930587e+18
      - category_key: Iste expedita libero.
        created: "1972-08-16T09:30:39Z"
        creator: Praesentium ut cum iusto iusto quia officia.
        id: 2.1539757199087585e+18
        media_content_type: Nobis omnis.
        media_id: 3.581489287797375e+18
        media_url: Id exercitationem aliquam.
        note: Et asperiores qui quas voluptates ad consectetur.
        user_id: 5.738166860930587e+18
    properties:
      notes:
        $ref: '#/definitions/FieldNoteQueryResultCollection'
    required:
    - notes
    title: 'Mediatype identifier: application/vnd.app.field_notes+json; view=default'
    type: object
  FirmwareSummary:
    description: FirmwareSummary media type (default view)
    example:
      etag: Excepturi rerum deleniti rem sint velit ad.
      id: 3.008084869957272e+18
      module: Explicabo magnam sunt debitis rerum rerum et.
      profile: Ut incidunt consequatur magni et.
      time: "1994-04-18T13:29:54Z"
      url: Consequatur non nisi dolor autem sint vitae.
    properties:
      etag:
        example: Excepturi rerum deleniti rem sint velit ad.
        type: string
      id:
        example: 3.008084869957272e+18
        format: int64
        type: integer
      module:
        example: Explicabo magnam sunt debitis rerum rerum et.
        type: string
      profile:
        example: Ut incidunt consequatur magni et.
        type: string
      time:
        example: "1994-04-18T13:29:54Z"
        format: date-time
        type: string
      url:
        example: Consequatur non nisi dolor autem sint vitae.
        type: string
    required:
    - id
    - time
    - etag
    - module
    - profile
    - url
    title: 'Mediatype identifier: application/vnd.app.firmware+json; view=default'
    type: object
  FirmwareSummaryCollection:
    description: FirmwareSummaryCollection is the media type for an array of FirmwareSummary
      (default view)
    example:
    - etag: Excepturi rerum deleniti rem sint velit ad.
      id: 3.008084869957272e+18
      module: Explicabo magnam sunt debitis rerum rerum et.
      profile: Ut incidunt consequatur magni et.
      time: "1994-04-18T13:29:54Z"
      url: Consequatur non nisi dolor autem sint vitae.
    - etag: Excepturi rerum deleniti rem sint velit ad.
      id: 3.008084869957272e+18
      module: Explicabo magnam sunt debitis rerum rerum et.
      profile: Ut incidunt consequatur magni et.
      time: "1994-04-18T13:29:54Z"
      url: Consequatur non nisi dolor autem sint vitae.
    items:
      $ref: '#/definitions/FirmwareSummary'
    title: 'Mediatype identifier: application/vnd.app.firmware+json; type=collection;
      view=default'
    type: array
  Firmwares:
    description: Firmwares media type (default view)
    example:
      firmwares:
      - etag: Excepturi rerum deleniti rem sint velit ad.
        id: 3.008084869957272e+18
        module: Explicabo magnam sunt debitis rerum rerum et.
        profile: Ut incidunt consequatur magni et.
        time: "1994-04-18T13:29:54Z"
        url: Consequatur non nisi dolor autem sint vitae.
      - etag: Excepturi rerum deleniti rem sint velit ad.
        id: 3.008084869957272e+18
        module: Explicabo magnam sunt debitis rerum rerum et.
        profile: Ut incidunt consequatur magni et.
        time: "1994-04-18T13:29:54Z"
        url: Consequatur non nisi dolor autem sint vitae.
      - etag: Excepturi rerum deleniti rem sint velit ad.
        id: 3.008084869957272e+18
        module: Explicabo magnam sunt debitis rerum rerum et.
        profile: Ut incidunt consequatur magni et.
        time: "1994-04-18T13:29:54Z"
        url: Consequatur non nisi dolor autem sint vitae.
    properties:
      firmwares:
        $ref: '#/definitions/FirmwareSummaryCollection'
    required:
    - firmwares
    title: 'Mediatype identifier: application/vnd.app.firmwares+json; view=default'
    type: object
  ImageRef:
    description: ImageRef media type (default view)
    example:
      url: Quisquam voluptatem doloribus.
    properties:
      url:
        example: Quisquam voluptatem doloribus.
        type: string
    required:
    - url
    title: 'Mediatype identifier: application/vnd.app.imageref+json; view=default'
    type: object
  ImageRefCollection:
    description: ImageRefCollection is the media type for an array of ImageRef (default
      view)
    example:
    - url: Quisquam voluptatem doloribus.
    items:
      $ref: '#/definitions/ImageRef'
    title: 'Mediatype identifier: application/vnd.app.imageref+json; type=collection;
      view=default'
    type: array
  InviteUserPayload:
    example:
      email: A eum quis voluptas.
    properties:
      email:
        example: A eum quis voluptas.
        type: string
    required:
    - email
    title: InviteUserPayload
    type: object
  JSONDataMeta:
    example:
      id: 6.104504195196507e+18
      station:
        firmware:
          build: Enim sapiente assumenda excepturi dolores dolores.
          hash: Molestias sit velit quo.
          number: In consequatur debitis sit ratione aut.
          timestamp: 6.95337195366582e+18
          version: Amet reiciendis odit.
        id: Ipsa expedita qui eum.
        modules:
        - id: Sint velit qui aut.
          kind: 3.5212274647530583e+18
          manufacturer: 9.930548092478253e+17
          name: Fugit commodi ut qui.
          sensors:
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          version: 6.525323513591937e+18
        - id: Sint velit qui aut.
          kind: 3.5212274647530583e+18
          manufacturer: 9.930548092478253e+17
          name: Fugit commodi ut qui.
          sensors:
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          version: 6.525323513591937e+18
        - id: Sint velit qui aut.
          kind: 3.5212274647530583e+18
          manufacturer: 9.930548092478253e+17
          name: Fugit commodi ut qui.
          sensors:
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          version: 6.525323513591937e+18
        name: Nobis in harum doloribus.
    properties:
      id:
        example: 6.104504195196507e+18
        format: int64
        type: integer
      station:
        $ref: '#/definitions/JSONDataMetaStation'
    required:
    - id
    title: JSONDataMeta
    type: object
  JSONDataMetaModule:
    example:
      id: Sint velit qui aut.
      kind: 3.5212274647530583e+18
      manufacturer: 9.930548092478253e+17
      name: Fugit commodi ut qui.
      sensors:
      - key: Amet nulla dolore laboriosam soluta quia molestias.
        name: Quam est amet ipsam reprehenderit totam.
        ranges:
        - maximum: 0.04295630096643331
          minimum: 0.869197608714674
        - maximum: 0.04295630096643331
          minimum: 0.869197608714674
        unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
      - key: Amet nulla dolore laboriosam soluta quia molestias.
        name: Quam est amet ipsam reprehenderit totam.
        ranges:
        - maximum: 0.04295630096643331
          minimum: 0.869197608714674
        - maximum: 0.04295630096643331
          minimum: 0.869197608714674
        unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
      version: 6.525323513591937e+18
    properties:
      id:
        example: Sint velit qui aut.
        type: string
      kind:
        example: 3.5212274647530583e+18
        format: int64
        type: integer
      manufacturer:
        example: 9.930548092478253e+17
        format: int64
        type: integer
      name:
        example: Fugit commodi ut qui.
        type: string
      sensors:
        example:
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        items:
          $ref: '#/definitions/JSONDataMetaSensor'
        type: array
      version:
        example: 6.525323513591937e+18
        format: int64
        type: integer
    required:
    - id
    - name
    - kind
    - version
    - manufacturer
    title: JSONDataMetaModule
    type: object
  JSONDataMetaSensor:
    example:
      key: Amet nulla dolore laboriosam soluta quia molestias.
      name: Quam est amet ipsam reprehenderit totam.
      ranges:
      - maximum: 0.04295630096643331
        minimum: 0.869197608714674
      - maximum: 0.04295630096643331
        minimum: 0.869197608714674
      unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
    properties:
      key:
        example: Amet nulla dolore laboriosam soluta quia molestias.
        type: string
      name:
        example: Quam est amet ipsam reprehenderit totam.
        type: string
      ranges:
        example:
        - maximum: 0.04295630096643331
          minimum: 0.869197608714674
        - maximum: 0.04295630096643331
          minimum: 0.869197608714674
        items:
          $ref: '#/definitions/JSONDataMetaSensorRange'
        type: array
      unitOfMeasure:
        example: Quidem repellendus cupiditate nemo doloribus recusandae.
        type: string
    required:
    - name
    - key
    - unitOfMeasure
    - ranges
    title: JSONDataMetaSensor
    type: object
  JSONDataMetaSensorRange:
    example:
      maximum: 0.04295630096643331
      minimum: 0.869197608714674
    properties:
      maximum:
        example: 0.04295630096643331
        format: double
        type: number
      minimum:
        example: 0.869197608714674
        format: double
        type: number
    required:
    - minimum
    - maximum
    title: JSONDataMetaSensorRange
    type: object
  JSONDataMetaStation:
    example:
      firmware:
        build: Enim sapiente assumenda excepturi dolores dolores.
        hash: Molestias sit velit quo.
        number: In consequatur debitis sit ratione aut.
        timestamp: 6.95337195366582e+18
        version: Amet reiciendis odit.
      id: Ipsa expedita qui eum.
      modules:
      - id: Sint velit qui aut.
        kind: 3.5212274647530583e+18
        manufacturer: 9.930548092478253e+17
        name: Fugit commodi ut qui.
        sensors:
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        version: 6.525323513591937e+18
      - id: Sint velit qui aut.
        kind: 3.5212274647530583e+18
        manufacturer: 9.930548092478253e+17
        name: Fugit commodi ut qui.
        sensors:
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        version: 6.525323513591937e+18
      - id: Sint velit qui aut.
        kind: 3.5212274647530583e+18
        manufacturer: 9.930548092478253e+17
        name: Fugit commodi ut qui.
        sensors:
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        version: 6.525323513591937e+18
      name: Nobis in harum doloribus.
    properties:
      firmware:
        $ref: '#/definitions/JSONDataMetaStationFirmware'
      id:
        example: Ipsa expedita qui eum.
        type: string
      modules:
        example:
        - id: Sint velit qui aut.
          kind: 3.5212274647530583e+18
          manufacturer: 9.930548092478253e+17
          name: Fugit commodi ut qui.
          sensors:
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          version: 6.525323513591937e+18
        - id: Sint velit qui aut.
          kind: 3.5212274647530583e+18
          manufacturer: 9.930548092478253e+17
          name: Fugit commodi ut qui.
          sensors:
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          version: 6.525323513591937e+18
        - id: Sint velit qui aut.
          kind: 3.5212274647530583e+18
          manufacturer: 9.930548092478253e+17
          name: Fugit commodi ut qui.
          sensors:
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          version: 6.525323513591937e+18
        items:
          $ref: '#/definitions/JSONDataMetaModule'
        type: array
      name:
        example: Nobis in harum doloribus.
        type: string
    required:
    - id
    - name
    - modules
    - firmware
    title: JSONDataMetaStation
    type: object
  JSONDataMetaStationFirmware:
    example:
      build: Enim sapiente assumenda excepturi dolores dolores.
      hash: Molestias sit velit quo.
      number: In consequatur debitis sit ratione aut.
      timestamp: 6.95337195366582e+18
      version: Amet reiciendis odit.
    properties:
      build:
        example: Enim sapiente assumenda excepturi dolores dolores.
        type: string
      hash:
        example: Molestias sit velit quo.
        type: string
      number:
        example: In consequatur debitis sit ratione aut.
        type: string
      timestamp:
        example: 6.95337195366582e+18
        format: int64
        type: integer
      version:
        example: Amet reiciendis odit.
        type: string
    required:
    - version
    - build
    - number
    - timestamp
    - hash
    title: JSONDataMetaStationFirmware
    type: object
  JSONDataResponse:
    description: JSONDataResponse media type (default view)
    example:
      versions:
      - data:
        - d:
            Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
          id: 5.521901130275351e+17
          location:
          - 0.7286282576931565
          metas:
          - 7.153631552386024e+18
          time: 7.53445128899346e+17
        meta:
          id: 6.104504195196507e+18
          station:
            firmware:
              build: Enim sapiente assumenda excepturi dolores dolores.
              hash: Molestias sit velit quo.
              number: In consequatur debitis sit ratione aut.
              timestamp: 6.95337195366582e+18
              version: Amet reiciendis odit.
            id: Ipsa expedita qui eum.
            modules:
            - id: Sint velit qui aut.
              kind: 3.5212274647530583e+18
              manufacturer: 9.930548092478253e+17
              name: Fugit commodi ut qui.
              sensors:
              - key: Amet nulla dolore laboriosam soluta quia molestias.
                name: Quam est amet ipsam reprehenderit totam.
                ranges:
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
              - key: Amet nulla dolore laboriosam soluta quia molestias.
                name: Quam est amet ipsam reprehenderit totam.
                ranges:
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
              version: 6.525323513591937e+18
            - id: Sint velit qui aut.
              kind: 3.5212274647530583e+18
              manufacturer: 9.930548092478253e+17
              name: Fugit commodi ut qui.
              sensors:
              - key: Amet nulla dolore laboriosam soluta quia molestias.
                name: Quam est amet ipsam reprehenderit totam.
                ranges:
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
              - key: Amet nulla dolore laboriosam soluta quia molestias.
                name: Quam est amet ipsam reprehenderit totam.
                ranges:
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
              version: 6.525323513591937e+18
            - id: Sint velit qui aut.
              kind: 3.5212274647530583e+18
              manufacturer: 9.930548092478253e+17
              name: Fugit commodi ut qui.
              sensors:
              - key: Amet nulla dolore laboriosam soluta quia molestias.
                name: Quam est amet ipsam reprehenderit totam.
                ranges:
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
              - key: Amet nulla dolore laboriosam soluta quia molestias.
                name: Quam est amet ipsam reprehenderit totam.
                ranges:
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                - maximum: 0.04295630096643331
                  minimum: 0.869197608714674
                unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
              version: 6.525323513591937e+18
            name: Nobis in harum doloribus.
    properties:
      versions:
        example:
        - data:
          - d:
              Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
            id: 5.521901130275351e+17
            location:
            - 0.7286282576931565
            metas:
            - 7.153631552386024e+18
            time: 7.53445128899346e+17
          meta:
            id: 6.104504195196507e+18
            station:
              firmware:
                build: Enim sapiente assumenda excepturi dolores dolores.
                hash: Molestias sit velit quo.
                number: In consequatur debitis sit ratione aut.
                timestamp: 6.95337195366582e+18
                version: Amet reiciendis odit.
              id: Ipsa expedita qui eum.
              modules:
              - id: Sint velit qui aut.
                kind: 3.5212274647530583e+18
                manufacturer: 9.930548092478253e+17
                name: Fugit commodi ut qui.
                sensors:
                - key: Amet nulla dolore laboriosam soluta quia molestias.
                  name: Quam est amet ipsam reprehenderit totam.
                  ranges:
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
                - key: Amet nulla dolore laboriosam soluta quia molestias.
                  name: Quam est amet ipsam reprehenderit totam.
                  ranges:
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
                version: 6.525323513591937e+18
              - id: Sint velit qui aut.
                kind: 3.5212274647530583e+18
                manufacturer: 9.930548092478253e+17
                name: Fugit commodi ut qui.
                sensors:
                - key: Amet nulla dolore laboriosam soluta quia molestias.
                  name: Quam est amet ipsam reprehenderit totam.
                  ranges:
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
                - key: Amet nulla dolore laboriosam soluta quia molestias.
                  name: Quam est amet ipsam reprehenderit totam.
                  ranges:
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
                version: 6.525323513591937e+18
              - id: Sint velit qui aut.
                kind: 3.5212274647530583e+18
                manufacturer: 9.930548092478253e+17
                name: Fugit commodi ut qui.
                sensors:
                - key: Amet nulla dolore laboriosam soluta quia molestias.
                  name: Quam est amet ipsam reprehenderit totam.
                  ranges:
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
                - key: Amet nulla dolore laboriosam soluta quia molestias.
                  name: Quam est amet ipsam reprehenderit totam.
                  ranges:
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  - maximum: 0.04295630096643331
                    minimum: 0.869197608714674
                  unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
                version: 6.525323513591937e+18
              name: Nobis in harum doloribus.
        items:
          $ref: '#/definitions/JSONDataVersion'
        type: array
    required:
    - versions
    title: 'Mediatype identifier: application/vnd.app.device.json.data+json; view=default'
    type: object
  JSONDataRow:
    example:
      d:
        Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
      id: 5.521901130275351e+17
      location:
      - 0.7286282576931565
      metas:
      - 7.153631552386024e+18
      time: 7.53445128899346e+17
    properties:
      d:
        additionalProperties: true
        example:
          Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
        type: object
      id:
        example: 5.521901130275351e+17
        format: int64
        type: integer
      location:
        example:
        - 0.7286282576931565
        items:
          example: 0.7286282576931565
          format: double
          type: number
        type: array
      metas:
        example:
        - 7.153631552386024e+18
        items:
          example: 7.153631552386024e+18
          format: int64
          type: integer
        type: array
      time:
        example: 7.53445128899346e+17
        format: int64
        type: integer
    required:
    - id
    - time
    - location
    - d
    title: JSONDataRow
    type: object
  JSONDataStatistics:
    example:
      end: "1996-09-08T18:00:07Z"
      number_of_data_records: 4.6815469900016576e+17
      number_of_meta_records: 3.5152866867021005e+17
      start: "2004-12-27T09:58:04Z"
    properties:
      end:
        example: "1996-09-08T18:00:07Z"
        format: date-time
        type: string
      number_of_data_records:
        example: 4.6815469900016576e+17
        format: int64
        type: integer
      number_of_meta_records:
        example: 3.5152866867021005e+17
        format: int64
        type: integer
      start:
        example: "2004-12-27T09:58:04Z"
        format: date-time
        type: string
    required:
    - start
    - end
    - number_of_data_records
    - number_of_meta_records
    title: JSONDataStatistics
    type: object
  JSONDataSummaryResponse:
    description: JSONDataSummaryResponse media type (default view)
    example:
      data:
      - d:
          Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
        id: 5.521901130275351e+17
        location:
        - 0.7286282576931565
        metas:
        - 7.153631552386024e+18
        time: 7.53445128899346e+17
      - d:
          Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
        id: 5.521901130275351e+17
        location:
        - 0.7286282576931565
        metas:
        - 7.153631552386024e+18
        time: 7.53445128899346e+17
      - d:
          Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
        id: 5.521901130275351e+17
        location:
        - 0.7286282576931565
        metas:
        - 7.153631552386024e+18
        time: 7.53445128899346e+17
      modules:
      - id: Sint velit qui aut.
        kind: 3.5212274647530583e+18
        manufacturer: 9.930548092478253e+17
        name: Fugit commodi ut qui.
        sensors:
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        - key: Amet nulla dolore laboriosam soluta quia molestias.
          name: Quam est amet ipsam reprehenderit totam.
          ranges:
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          - maximum: 0.04295630096643331
            minimum: 0.869197608714674
          unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
        version: 6.525323513591937e+18
      statistics:
        end: "1996-09-08T18:00:07Z"
        number_of_data_records: 4.6815469900016576e+17
        number_of_meta_records: 3.5152866867021005e+17
        start: "2004-12-27T09:58:04Z"
    properties:
      data:
        example:
        - d:
            Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
          id: 5.521901130275351e+17
          location:
          - 0.7286282576931565
          metas:
          - 7.153631552386024e+18
          time: 7.53445128899346e+17
        - d:
            Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
          id: 5.521901130275351e+17
          location:
          - 0.7286282576931565
          metas:
          - 7.153631552386024e+18
          time: 7.53445128899346e+17
        - d:
            Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
          id: 5.521901130275351e+17
          location:
          - 0.7286282576931565
          metas:
          - 7.153631552386024e+18
          time: 7.53445128899346e+17
        items:
          $ref: '#/definitions/JSONDataRow'
        type: array
      modules:
        example:
        - id: Sint velit qui aut.
          kind: 3.5212274647530583e+18
          manufacturer: 9.930548092478253e+17
          name: Fugit commodi ut qui.
          sensors:
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          - key: Amet nulla dolore laboriosam soluta quia molestias.
            name: Quam est amet ipsam reprehenderit totam.
            ranges:
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            - maximum: 0.04295630096643331
              minimum: 0.869197608714674
            unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
          version: 6.525323513591937e+18
        items:
          $ref: '#/definitions/JSONDataMetaModule'
        type: array
      statistics:
        $ref: '#/definitions/JSONDataStatistics'
    required:
    - modules
    - data
    - statistics
    title: 'Mediatype identifier: application/vnd.app.device.json.data.summary+json;
      view=default'
    type: object
  JSONDataVersion:
    example:
      data:
      - d:
          Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
        id: 5.521901130275351e+17
        location:
        - 0.7286282576931565
        metas:
        - 7.153631552386024e+18
        time: 7.53445128899346e+17
      meta:
        id: 6.104504195196507e+18
        station:
          firmware:
            build: Enim sapiente assumenda excepturi dolores dolores.
            hash: Molestias sit velit quo.
            number: In consequatur debitis sit ratione aut.
            timestamp: 6.95337195366582e+18
            version: Amet reiciendis odit.
          id: Ipsa expedita qui eum.
          modules:
          - id: Sint velit qui aut.
            kind: 3.5212274647530583e+18
            manufacturer: 9.930548092478253e+17
            name: Fugit commodi ut qui.
            sensors:
            - key: Amet nulla dolore laboriosam soluta quia molestias.
              name: Quam est amet ipsam reprehenderit totam.
              ranges:
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
            - key: Amet nulla dolore laboriosam soluta quia molestias.
              name: Quam est amet ipsam reprehenderit totam.
              ranges:
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
            version: 6.525323513591937e+18
          - id: Sint velit qui aut.
            kind: 3.5212274647530583e+18
            manufacturer: 9.930548092478253e+17
            name: Fugit commodi ut qui.
            sensors:
            - key: Amet nulla dolore laboriosam soluta quia molestias.
              name: Quam est amet ipsam reprehenderit totam.
              ranges:
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
            - key: Amet nulla dolore laboriosam soluta quia molestias.
              name: Quam est amet ipsam reprehenderit totam.
              ranges:
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
            version: 6.525323513591937e+18
          - id: Sint velit qui aut.
            kind: 3.5212274647530583e+18
            manufacturer: 9.930548092478253e+17
            name: Fugit commodi ut qui.
            sensors:
            - key: Amet nulla dolore laboriosam soluta quia molestias.
              name: Quam est amet ipsam reprehenderit totam.
              ranges:
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
            - key: Amet nulla dolore laboriosam soluta quia molestias.
              name: Quam est amet ipsam reprehenderit totam.
              ranges:
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              - maximum: 0.04295630096643331
                minimum: 0.869197608714674
              unitOfMeasure: Quidem repellendus cupiditate nemo doloribus recusandae.
            version: 6.525323513591937e+18
          name: Nobis in harum doloribus.
    properties:
      data:
        example:
        - d:
            Perspiciatis quasi error voluptatem et.: 1850b28e-fb3f-4c91-803c-d35bcf9e26a9
          id: 5.521901130275351e+17
          location:
          - 0.7286282576931565
          metas:
          - 7.153631552386024e+18
          time: 7.53445128899346e+17
        items:
          $ref: '#/definitions/JSONDataRow'
        type: array
      meta:
        $ref: '#/definitions/JSONDataMeta'
    title: JSONDataVersion
    type: object
  LastUpload:
    description: LastUpload media type (default view)
    example:
      blocks:
      - 2.600799690938069e+18
      id: 6.936376325543937e+18
      size: 8.282634339368904e+18
      time: "2009-07-07T03:41:09Z"
      type: Debitis qui.
      upload_id: Aut hic.
      url: Est rem quisquam repellat autem.
    properties:
      blocks:
        example:
        - 2.600799690938069e+18
        items:
          example: 2.600799690938069e+18
          format: int64
          type: integer
        type: array
      id:
        example: 6.936376325543937e+18
        format: int64
        type: integer
      size:
        example: 8.282634339368904e+18
        format: int64
        type: integer
      time:
        example: "2009-07-07T03:41:09Z"
        format: date-time
        type: string
      type:
        example: Debitis qui.
        type: string
      upload_id:
        example: Aut hic.
        type: string
      url:
        example: Est rem quisquam repellat autem.
        type: string
    required:
    - id
    - time
    - upload_id
    - size
    - url
    - type
    - blocks
    title: 'Mediatype identifier: application/vnd.app.upload+json; view=default'
    type: object
  LastUploadCollection:
    description: LastUploadCollection is the media type for an array of LastUpload
      (default view)
    example:
    - blocks:
      - 2.600799690938069e+18
      id: 6.936376325543937e+18
      size: 8.282634339368904e+18
      time: "2009-07-07T03:41:09Z"
      type: Debitis qui.
      upload_id: Aut hic.
      url: Est rem quisquam repellat autem.
    - blocks:
      - 2.600799690938069e+18
      id: 6.936376325543937e+18
      size: 8.282634339368904e+18
      time: "2009-07-07T03:41:09Z"
      type: Debitis qui.
      upload_id: Aut hic.
      url: Est rem quisquam repellat autem.
    items:
      $ref: '#/definitions/LastUpload'
    title: 'Mediatype identifier: application/vnd.app.upload+json; type=collection;
      view=default'
    type: array
  Location:
    description: Location media type (default view)
    example:
      location: http://grant.info/daron_crona
    properties:
      location:
        example: http://grant.info/daron_crona
        format: uri
        type: string
    required:
    - location
    title: 'Mediatype identifier: application/vnd.app.location+json; view=default'
    type: object
  LoginPayload:
    example:
      email: lexus@howe.com
      password: k4xz23qz5u
    properties:
      email:
        example: lexus@howe.com
        format: email
        type: string
      password:
        example: k4xz23qz5u
        minLength: 10
        type: string
    required:
    - email
    - password
    title: LoginPayload
    type: object
  MediaReferenceResponse:
    description: MediaReferenceResponse media type (default view)
    example:
      id: 7.204590710558903e+18
      url: Animi sit.
    properties:
      id:
        example: 7.204590710558903e+18
        format: int64
        type: integer
      url:
        example: Animi sit.
        type: string
    required:
    - id
    - url
    title: 'Mediatype identifier: application/vnd.app.media+json; view=default'
    type: object
  Project:
    description: Project media type (default view)
    example:
      description: Perferendis veritatis dolore eius.
      end_time: "1982-12-23T05:47:17Z"
      goal: Amet est accusantium et et.
      id: 6.803299593109161e+18
      location: Est soluta.
      media_content_type: Aut sunt illo.
      media_url: Odit sed id vitae est.
      name: Odit necessitatibus non veritatis velit unde reiciendis.
      private: false
      slug: 265h606arr
      start_time: "2007-05-13T01:24:11Z"
      tags: Quaerat voluptates dicta consectetur nostrum.
    properties:
      description:
        example: Perferendis veritatis dolore eius.
        type: string
      end_time:
        example: "1982-12-23T05:47:17Z"
        format: date-time
        type: string
      goal:
        example: Amet est accusantium et et.
        type: string
      id:
        example: 6.803299593109161e+18
        format: int64
        type: integer
      location:
        example: Est soluta.
        type: string
      media_content_type:
        example: Aut sunt illo.
        type: string
      media_url:
        example: Odit sed id vitae est.
        type: string
      name:
        example: Odit necessitatibus non veritatis velit unde reiciendis.
        type: string
      private:
        example: false
        type: boolean
      slug:
        example: 265h606arr
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
      start_time:
        example: "2007-05-13T01:24:11Z"
        format: date-time
        type: string
      tags:
        example: Quaerat voluptates dicta consectetur nostrum.
        type: string
    required:
    - id
    - name
    - slug
    - description
    - goal
    - location
    - private
    - tags
    title: 'Mediatype identifier: application/vnd.app.project+json; view=default'
    type: object
  ProjectAdministrator:
    description: ProjectAdministrator media type (default view)
    example:
      projectId: 1.2833427085391667e+18
      userId: 6.297057674710826e+18
    properties:
      projectId:
        example: 1.2833427085391667e+18
        format: int64
        type: integer
      userId:
        example: 6.297057674710826e+18
        format: int64
        type: integer
    required:
    - projectId
    - userId
    title: 'Mediatype identifier: application/vnd.app.administrator+json; view=default'
    type: object
  ProjectAdministratorCollection:
    description: ProjectAdministratorCollection is the media type for an array of
      ProjectAdministrator (default view)
    example:
    - projectId: 1.2833427085391667e+18
      userId: 6.297057674710826e+18
    - projectId: 1.2833427085391667e+18
      userId: 6.297057674710826e+18
    items:
      $ref: '#/definitions/ProjectAdministrator'
    title: 'Mediatype identifier: application/vnd.app.administrator+json; type=collection;
      view=default'
    type: array
  ProjectAdministrators:
    description: ProjectAdministrators media type (default view)
    example:
      administrators:
      - projectId: 1.2833427085391667e+18
        userId: 6.297057674710826e+18
      - projectId: 1.2833427085391667e+18
        userId: 6.297057674710826e+18
      - projectId: 1.2833427085391667e+18
        userId: 6.297057674710826e+18
    properties:
      administrators:
        $ref: '#/definitions/ProjectAdministratorCollection'
    required:
    - administrators
    title: 'Mediatype identifier: application/vnd.app.administrators+json; view=default'
    type: object
  ProjectCollection:
    description: ProjectCollection is the media type for an array of Project (default
      view)
    example:
    - description: Perferendis veritatis dolore eius.
      end_time: "1982-12-23T05:47:17Z"
      goal: Amet est accusantium et et.
      id: 6.803299593109161e+18
      location: Est soluta.
      media_content_type: Aut sunt illo.
      media_url: Odit sed id vitae est.
      name: Odit necessitatibus non veritatis velit unde reiciendis.
      private: false
      slug: 265h606arr
      start_time: "2007-05-13T01:24:11Z"
      tags: Quaerat voluptates dicta consectetur nostrum.
    items:
      $ref: '#/definitions/Project'
    title: 'Mediatype identifier: application/vnd.app.project+json; type=collection;
      view=default'
    type: array
  Projects:
    description: Projects media type (default view)
    example:
      projects:
      - description: Perferendis veritatis dolore eius.
        end_time: "1982-12-23T05:47:17Z"
        goal: Amet est accusantium et et.
        id: 6.803299593109161e+18
        location: Est soluta.
        media_content_type: Aut sunt illo.
        media_url: Odit sed id vitae est.
        name: Odit necessitatibus non veritatis velit unde reiciendis.
        private: false
        slug: 265h606arr
        start_time: "2007-05-13T01:24:11Z"
        tags: Quaerat voluptates dicta consectetur nostrum.
      - description: Perferendis veritatis dolore eius.
        end_time: "1982-12-23T05:47:17Z"
        goal: Amet est accusantium et et.
        id: 6.803299593109161e+18
        location: Est soluta.
        media_content_type: Aut sunt illo.
        media_url: Odit sed id vitae est.
        name: Odit necessitatibus non veritatis velit unde reiciendis.
        private: false
        slug: 265h606arr
        start_time: "2007-05-13T01:24:11Z"
        tags: Quaerat voluptates dicta consectetur nostrum.
    properties:
      projects:
        $ref: '#/definitions/ProjectCollection'
    required:
    - projects
    title: 'Mediatype identifier: application/vnd.app.projects+json; view=default'
    type: object
  QueryData:
    description: QueryData media type (default view)
    example:
      series:
      - name: Animi quisquam amet.
        rows:
        - faad1684-1327-4820-ad38-bf59bc3388f5
        - faad1684-1327-4820-ad38-bf59bc3388f5
      - name: Animi quisquam amet.
        rows:
        - faad1684-1327-4820-ad38-bf59bc3388f5
        - faad1684-1327-4820-ad38-bf59bc3388f5
    properties:
      series:
        $ref: '#/definitions/SeriesDataCollection'
    required:
    - series
    title: 'Mediatype identifier: application/vnd.app.queried+json; view=default'
    type: object
  ReadingSummary:
    description: ReadingSummary media type (default view)
    example:
      name: Aliquid in doloribus dolorum aut dolor hic.
    properties:
      name:
        example: Aliquid in doloribus dolorum aut dolor hic.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; view=default'
    type: object
  ReadingSummaryCollection:
    description: ReadingSummaryCollection is the media type for an array of ReadingSummary
      (default view)
    example:
    - name: Aliquid in doloribus dolorum aut dolor hic.
    - name: Aliquid in doloribus dolorum aut dolor hic.
    - name: Aliquid in doloribus dolorum aut dolor hic.
    items:
      $ref: '#/definitions/ReadingSummary'
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; type=collection;
      view=default'
    type: array
  RefreshUserPayload:
    example:
      refresh_token: Illo ea.
    properties:
      refresh_token:
        example: Illo ea.
        type: string
    required:
    - refresh_token
    title: RefreshUserPayload
    type: object
  RemoveUserPayload:
    example:
      email: Delectus odio voluptatem expedita sapiente nam.
    properties:
      email:
        example: Delectus odio voluptatem expedita sapiente nam.
        type: string
    required:
    - email
    title: RemoveUserPayload
    type: object
  SeriesData:
    description: SeriesData media type (default view)
    example:
      name: Animi quisquam amet.
      rows:
      - faad1684-1327-4820-ad38-bf59bc3388f5
      - faad1684-1327-4820-ad38-bf59bc3388f5
    properties:
      name:
        example: Animi quisquam amet.
        type: string
      rows:
        example:
        - faad1684-1327-4820-ad38-bf59bc3388f5
        - faad1684-1327-4820-ad38-bf59bc3388f5
        items:
          example: faad1684-1327-4820-ad38-bf59bc3388f5
        type: array
    required:
    - name
    - rows
    title: 'Mediatype identifier: application/vnd.app.series+json; view=default'
    type: object
  SeriesDataCollection:
    description: SeriesDataCollection is the media type for an array of SeriesData
      (default view)
    example:
    - name: Animi quisquam amet.
      rows:
      - faad1684-1327-4820-ad38-bf59bc3388f5
      - faad1684-1327-4820-ad38-bf59bc3388f5
    - name: Animi quisquam amet.
      rows:
      - faad1684-1327-4820-ad38-bf59bc3388f5
      - faad1684-1327-4820-ad38-bf59bc3388f5
    - name: Animi quisquam amet.
      rows:
      - faad1684-1327-4820-ad38-bf59bc3388f5
      - faad1684-1327-4820-ad38-bf59bc3388f5
    items:
      $ref: '#/definitions/SeriesData'
    title: 'Mediatype identifier: application/vnd.app.series+json; type=collection;
      view=default'
    type: array
  Source:
    description: Source media type (default view)
    example:
      active: true
      expeditionId: 1.306359989987947e+18
      id: 7.060612909901343e+18
      name: Fugiat modi quis.
      teamId: 7.079765484340422e+18
      userId: 8.307648610629747e+18
    properties:
      active:
        example: true
        type: boolean
      expeditionId:
        example: 1.306359989987947e+18
        format: int64
        type: integer
      id:
        example: 7.060612909901343e+18
        format: int64
        type: integer
      name:
        example: Fugiat modi quis.
        type: string
      teamId:
        example: 7.079765484340422e+18
        format: int64
        type: integer
      userId:
        example: 8.307648610629747e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    title: 'Mediatype identifier: application/vnd.app.source+json; view=default'
    type: object
  SourceSummary:
    description: SourceSummary media type (default view)
    example:
      id: 3.4532940728287606e+18
      name: Necessitatibus voluptatum odit eum qui.
      readings:
      - name: Aliquid in doloribus dolorum aut dolor hic.
      - name: Aliquid in doloribus dolorum aut dolor hic.
      - name: Aliquid in doloribus dolorum aut dolor hic.
      spatial:
      - centroid:
        - 0.19551792542314236
        - 0.19551792542314236
        endTime: "1981-01-02T04:14:04Z"
        envelope:
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        id: 4.3098637098340296e+18
        numberOfFeatures: 5.946389483332132e+18
        radius: 0.9346663439787433
        sourceId: 1.6792677370275564e+18
        startTime: "2010-04-11T23:37:15Z"
      - centroid:
        - 0.19551792542314236
        - 0.19551792542314236
        endTime: "1981-01-02T04:14:04Z"
        envelope:
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        id: 4.3098637098340296e+18
        numberOfFeatures: 5.946389483332132e+18
        radius: 0.9346663439787433
        sourceId: 1.6792677370275564e+18
        startTime: "2010-04-11T23:37:15Z"
      temporal:
      - centroid:
        - 0.19551792542314236
        - 0.19551792542314236
        endTime: "1981-01-02T04:14:04Z"
        envelope:
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        - - 0.32708305505896723
          - 0.32708305505896723
          - 0.32708305505896723
        id: 4.3098637098340296e+18
        numberOfFeatures: 5.946389483332132e+18
        radius: 0.9346663439787433
        sourceId: 1.6792677370275564e+18
        startTime: "2010-04-11T23:37:15Z"
    properties:
      id:
        example: 3.4532940728287606e+18
        format: int64
        type: integer
      name:
        example: Necessitatibus voluptatum odit eum qui.
        type: string
      readings:
        $ref: '#/definitions/ReadingSummaryCollection'
      spatial:
        $ref: '#/definitions/ClusterSummaryCollection'
      temporal:
        $ref: '#/definitions/ClusterSummaryCollection'
    required:
    - id
    - name
    - temporal
    - spatial
    title: 'Mediatype identifier: application/vnd.app.source_summary+json; view=default'
    type: object
  SourceToken:
    description: SourceToken media type (default view)
    example:
      expeditionId: 9.116180285587247e+18
      id: 3.198012612563036e+18
      token: Consequatur quod.
    properties:
      expeditionId:
        example: 9.116180285587247e+18
        format: int64
        type: integer
      id:
        example: 3.198012612563036e+18
        format: int64
        type: integer
      token:
        example: Consequatur quod.
        type: string
    required:
    - id
    - token
    - expeditionId
    title: 'Mediatype identifier: application/vnd.app.source_token+json; view=default'
    type: object
  SourceTokenCollection:
    description: SourceTokenCollection is the media type for an array of SourceToken
      (default view)
    example:
    - expeditionId: 9.116180285587247e+18
      id: 3.198012612563036e+18
      token: Consequatur quod.
    - expeditionId: 9.116180285587247e+18
      id: 3.198012612563036e+18
      token: Consequatur quod.
    - expeditionId: 9.116180285587247e+18
      id: 3.198012612563036e+18
      token: Consequatur quod.
    items:
      $ref: '#/definitions/SourceToken'
    title: 'Mediatype identifier: application/vnd.app.source_token+json; type=collection;
      view=default'
    type: array
  SourceTokens:
    description: SourceTokens media type (default view)
    example:
      sourceTokens:
      - expeditionId: 9.116180285587247e+18
        id: 3.198012612563036e+18
        token: Consequatur quod.
      - expeditionId: 9.116180285587247e+18
        id: 3.198012612563036e+18
        token: Consequatur quod.
    properties:
      sourceTokens:
        $ref: '#/definitions/SourceTokenCollection'
    required:
    - sourceTokens
    title: 'Mediatype identifier: application/vnd.app.source_tokens+json; view=default'
    type: object
  Sources:
    description: Sources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 9.878813567339238e+17
        id: 4.0345309212590444e+18
        key: Ratione et.
        name: A voluptas.
        teamId: 4.505075706230494e+18
        token: Corrupti laudantium quo eos.
        userId: 1.4339898754461952e+18
      twitterAccountSources:
      - expeditionId: 5.890311144076365e+17
        id: 7.457843101218369e+18
        name: Aliquam rerum esse.
        screenName: Mollitia quaerat occaecati est.
        teamId: 4.3914001203700316e+18
        twitterAccountId: 4.843979992660156e+18
        userId: 8.004287662218134e+18
      - expeditionId: 5.890311144076365e+17
        id: 7.457843101218369e+18
        name: Aliquam rerum esse.
        screenName: Mollitia quaerat occaecati est.
        teamId: 4.3914001203700316e+18
        twitterAccountId: 4.843979992660156e+18
        userId: 8.004287662218134e+18
      - expeditionId: 5.890311144076365e+17
        id: 7.457843101218369e+18
        name: Aliquam rerum esse.
        screenName: Mollitia quaerat occaecati est.
        teamId: 4.3914001203700316e+18
        twitterAccountId: 4.843979992660156e+18
        userId: 8.004287662218134e+18
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    title: 'Mediatype identifier: application/vnd.app.sources+json; view=default'
    type: object
  Station:
    description: Station media type (default view)
    example:
      device_id: Velit quod.
      id: 1.28057798377931e+18
      images:
      - url: Quisquam voluptatem doloribus.
      last_uploads:
      - blocks:
        - 2.600799690938069e+18
        id: 6.936376325543937e+18
        size: 8.282634339368904e+18
        time: "2009-07-07T03:41:09Z"
        type: Debitis qui.
        upload_id: Aut hic.
        url: Est rem quisquam repellat autem.
      - blocks:
        - 2.600799690938069e+18
        id: 6.936376325543937e+18
        size: 8.282634339368904e+18
        time: "2009-07-07T03:41:09Z"
        type: Debitis qui.
        upload_id: Aut hic.
        url: Est rem quisquam repellat autem.
      name: Unde eaque culpa unde iusto cumque ut.
      owner_id: 2.783695272769964e+18
      photos:
        small: Ea repudiandae veritatis delectus sit veritatis.
      status_json:
        Et corporis et quasi laborum et quia.: 6.375365862717534e+18
    properties:
      device_id:
        example: Velit quod.
        type: string
      id:
        example: 1.28057798377931e+18
        format: int64
        type: integer
      images:
        $ref: '#/definitions/ImageRefCollection'
      last_uploads:
        $ref: '#/definitions/LastUploadCollection'
      name:
        example: Unde eaque culpa unde iusto cumque ut.
        type: string
      owner_id:
        example: 2.783695272769964e+18
        format: int64
        type: integer
      photos:
        $ref: '#/definitions/StationPhotos'
      status_json:
        additionalProperties: true
        example:
          Et corporis et quasi laborum et quia.: 6.375365862717534e+18
        type: object
    required:
    - id
    - name
    - owner_id
    - device_id
    - status_json
    - images
    - photos
    title: 'Mediatype identifier: application/vnd.app.station+json; view=default'
    type: object
  StationCollection:
    description: StationCollection is the media type for an array of Station (default
      view)
    example:
    - device_id: Velit quod.
      id: 1.28057798377931e+18
      images:
      - url: Quisquam voluptatem doloribus.
      last_uploads:
      - blocks:
        - 2.600799690938069e+18
        id: 6.936376325543937e+18
        size: 8.282634339368904e+18
        time: "2009-07-07T03:41:09Z"
        type: Debitis qui.
        upload_id: Aut hic.
        url: Est rem quisquam repellat autem.
      - blocks:
        - 2.600799690938069e+18
        id: 6.936376325543937e+18
        size: 8.282634339368904e+18
        time: "2009-07-07T03:41:09Z"
        type: Debitis qui.
        upload_id: Aut hic.
        url: Est rem quisquam repellat autem.
      name: Unde eaque culpa unde iusto cumque ut.
      owner_id: 2.783695272769964e+18
      photos:
        small: Ea repudiandae veritatis delectus sit veritatis.
      status_json:
        Et corporis et quasi laborum et quia.: 6.375365862717534e+18
    items:
      $ref: '#/definitions/Station'
    title: 'Mediatype identifier: application/vnd.app.station+json; type=collection;
      view=default'
    type: array
  StationLog:
    description: StationLog media type (default view)
    example:
      ID: 1.1605269329734426e+18
      body: Similique ipsum qui.
      station_id: 3.4583831682355907e+18
      timestamp: Cumque repudiandae libero.
    properties:
      ID:
        example: 1.1605269329734426e+18
        format: int64
        type: integer
      body:
        example: Similique ipsum qui.
        type: string
      station_id:
        example: 3.4583831682355907e+18
        format: int64
        type: integer
      timestamp:
        example: Cumque repudiandae libero.
        type: string
    required:
    - ID
    - station_id
    - body
    - timestamp
    title: 'Mediatype identifier: application/vnd.app.stationlog+json; view=default'
    type: object
  StationPhotos:
    description: StationPhotos media type (default view)
    example:
      small: Ea repudiandae veritatis delectus sit veritatis.
    properties:
      small:
        example: Ea repudiandae veritatis delectus sit veritatis.
        type: string
    required:
    - small
    title: 'Mediatype identifier: application/vnd.app.station.photos+json; view=default'
    type: object
  Stations:
    description: Stations media type (default view)
    example:
      stations:
      - device_id: Velit quod.
        id: 1.28057798377931e+18
        images:
        - url: Quisquam voluptatem doloribus.
        last_uploads:
        - blocks:
          - 2.600799690938069e+18
          id: 6.936376325543937e+18
          size: 8.282634339368904e+18
          time: "2009-07-07T03:41:09Z"
          type: Debitis qui.
          upload_id: Aut hic.
          url: Est rem quisquam repellat autem.
        - blocks:
          - 2.600799690938069e+18
          id: 6.936376325543937e+18
          size: 8.282634339368904e+18
          time: "2009-07-07T03:41:09Z"
          type: Debitis qui.
          upload_id: Aut hic.
          url: Est rem quisquam repellat autem.
        name: Unde eaque culpa unde iusto cumque ut.
        owner_id: 2.783695272769964e+18
        photos:
          small: Ea repudiandae veritatis delectus sit veritatis.
        status_json:
          Et corporis et quasi laborum et quia.: 6.375365862717534e+18
      - device_id: Velit quod.
        id: 1.28057798377931e+18
        images:
        - url: Quisquam voluptatem doloribus.
        last_uploads:
        - blocks:
          - 2.600799690938069e+18
          id: 6.936376325543937e+18
          size: 8.282634339368904e+18
          time: "2009-07-07T03:41:09Z"
          type: Debitis qui.
          upload_id: Aut hic.
          url: Est rem quisquam repellat autem.
        - blocks:
          - 2.600799690938069e+18
          id: 6.936376325543937e+18
          size: 8.282634339368904e+18
          time: "2009-07-07T03:41:09Z"
          type: Debitis qui.
          upload_id: Aut hic.
          url: Est rem quisquam repellat autem.
        name: Unde eaque culpa unde iusto cumque ut.
        owner_id: 2.783695272769964e+18
        photos:
          small: Ea repudiandae veritatis delectus sit veritatis.
        status_json:
          Et corporis et quasi laborum et quia.: 6.375365862717534e+18
    properties:
      stations:
        $ref: '#/definitions/StationCollection'
    required:
    - stations
    title: 'Mediatype identifier: application/vnd.app.stations+json; view=default'
    type: object
  Team:
    description: Team media type (default view)
    example:
      description: Necessitatibus possimus voluptatem consequuntur officiis autem.
      id: 5.526628304292656e+18
      name: 4hqbyl3ug0
      slug: 6fckqzcr94
    properties:
      description:
        example: Necessitatibus possimus voluptatem consequuntur officiis autem.
        type: string
      id:
        example: 5.526628304292656e+18
        format: int64
        type: integer
      name:
        example: 4hqbyl3ug0
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: 6fckqzcr94
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.team+json; view=default'
    type: object
  TeamCollection:
    description: TeamCollection is the media type for an array of Team (default view)
    example:
    - description: Necessitatibus possimus voluptatem consequuntur officiis autem.
      id: 5.526628304292656e+18
      name: 4hqbyl3ug0
      slug: 6fckqzcr94
    - description: Necessitatibus possimus voluptatem consequuntur officiis autem.
      id: 5.526628304292656e+18
      name: 4hqbyl3ug0
      slug: 6fckqzcr94
    items:
      $ref: '#/definitions/Team'
    title: 'Mediatype identifier: application/vnd.app.team+json; type=collection;
      view=default'
    type: array
  TeamMember:
    description: TeamMember media type (default view)
    example:
      role: Doloremque repellendus eum qui eos.
      teamId: 7.402598576005672e+18
      userId: 8.564614893820573e+18
    properties:
      role:
        example: Doloremque repellendus eum qui eos.
        type: string
      teamId:
        example: 7.402598576005672e+18
        format: int64
        type: integer
      userId:
        example: 8.564614893820573e+18
        format: int64
        type: integer
    required:
    - teamId
    - userId
    - role
    title: 'Mediatype identifier: application/vnd.app.member+json; view=default'
    type: object
  TeamMemberCollection:
    description: TeamMemberCollection is the media type for an array of TeamMember
      (default view)
    example:
    - role: Doloremque repellendus eum qui eos.
      teamId: 7.402598576005672e+18
      userId: 8.564614893820573e+18
    - role: Doloremque repellendus eum qui eos.
      teamId: 7.402598576005672e+18
      userId: 8.564614893820573e+18
    items:
      $ref: '#/definitions/TeamMember'
    title: 'Mediatype identifier: application/vnd.app.member+json; type=collection;
      view=default'
    type: array
  TeamMembers:
    description: TeamMembers media type (default view)
    example:
      members:
      - role: Doloremque repellendus eum qui eos.
        teamId: 7.402598576005672e+18
        userId: 8.564614893820573e+18
    properties:
      members:
        $ref: '#/definitions/TeamMemberCollection'
    required:
    - members
    title: 'Mediatype identifier: application/vnd.app.members+json; view=default'
    type: object
  Teams:
    description: Teams media type (default view)
    example:
      teams:
      - description: Necessitatibus possimus voluptatem consequuntur officiis autem.
        id: 5.526628304292656e+18
        name: 4hqbyl3ug0
        slug: 6fckqzcr94
      - description: Necessitatibus possimus voluptatem consequuntur officiis autem.
        id: 5.526628304292656e+18
        name: 4hqbyl3ug0
        slug: 6fckqzcr94
    properties:
      teams:
        $ref: '#/definitions/TeamCollection'
    required:
    - teams
    title: 'Mediatype identifier: application/vnd.app.teams+json; view=default'
    type: object
  TwitterAccountSource:
    description: TwitterAccountSource media type (default view)
    example:
      expeditionId: 5.890311144076365e+17
      id: 7.457843101218369e+18
      name: Aliquam rerum esse.
      screenName: Mollitia quaerat occaecati est.
      teamId: 4.3914001203700316e+18
      twitterAccountId: 4.843979992660156e+18
      userId: 8.004287662218134e+18
    properties:
      expeditionId:
        example: 5.890311144076365e+17
        format: int64
        type: integer
      id:
        example: 7.457843101218369e+18
        format: int64
        type: integer
      name:
        example: Aliquam rerum esse.
        type: string
      screenName:
        example: Mollitia quaerat occaecati est.
        type: string
      teamId:
        example: 4.3914001203700316e+18
        format: int64
        type: integer
      twitterAccountId:
        example: 4.843979992660156e+18
        format: int64
        type: integer
      userId:
        example: 8.004287662218134e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    - twitterAccountId
    - screenName
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      view=default'
    type: object
  TwitterAccountSourceCollection:
    description: TwitterAccountSourceCollection is the media type for an array of
      TwitterAccountSource (default view)
    example:
    - expeditionId: 5.890311144076365e+17
      id: 7.457843101218369e+18
      name: Aliquam rerum esse.
      screenName: Mollitia quaerat occaecati est.
      teamId: 4.3914001203700316e+18
      twitterAccountId: 4.843979992660156e+18
      userId: 8.004287662218134e+18
    items:
      $ref: '#/definitions/TwitterAccountSource'
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      type=collection; view=default'
    type: array
  TwitterAccountSources:
    description: TwitterAccountSources media type (default view)
    example:
      twitterAccountSources:
      - expeditionId: 5.890311144076365e+17
        id: 7.457843101218369e+18
        name: Aliquam rerum esse.
        screenName: Mollitia quaerat occaecati est.
        teamId: 4.3914001203700316e+18
        twitterAccountId: 4.843979992660156e+18
        userId: 8.004287662218134e+18
    properties:
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    required:
    - twitterAccountSources
    title: 'Mediatype identifier: application/vnd.app.twitter_account_intputs+json;
      view=default'
    type: object
  UpdateDeviceFirmwarePayload:
    example:
      deviceId: 3.0177860661815076e+18
      firmwareId: 4.837974976786693e+18
    properties:
      deviceId:
        example: 3.0177860661815076e+18
        format: int64
        type: integer
      firmwareId:
        example: 4.837974976786693e+18
        format: int64
        type: integer
    required:
    - deviceId
    - firmwareId
    title: UpdateDeviceFirmwarePayload
    type: object
  UpdateDeviceSourceLocationPayload:
    example:
      key: Alias voluptates repellendus aut.
      latitude: 0.08047937576567925
      longitude: 0.8004524062038395
    properties:
      key:
        example: Alias voluptates repellendus aut.
        type: string
      latitude:
        example: 0.08047937576567925
        format: double
        type: number
      longitude:
        example: 0.8004524062038395
        format: double
        type: number
    required:
    - key
    - longitude
    - latitude
    title: UpdateDeviceSourceLocationPayload
    type: object
  UpdateDeviceSourcePayload:
    example:
      key: Aut consequuntur quasi tempore facere tempora.
      name: Eveniet alias fuga.
    properties:
      key:
        example: Aut consequuntur quasi tempore facere tempora.
        type: string
      name:
        example: Eveniet alias fuga.
        type: string
    required:
    - name
    - key
    title: UpdateDeviceSourcePayload
    type: object
  UpdateDeviceSourceSchemaPayload:
    example:
      active: true
      jsonSchema: Voluptates consequatur sed itaque dignissimos suscipit.
      key: Quae eum voluptatibus magnam non nobis nostrum.
    properties:
      active:
        example: true
        type: boolean
      jsonSchema:
        example: Voluptates consequatur sed itaque dignissimos suscipit.
        type: string
      key:
        example: Quae eum voluptatibus magnam non nobis nostrum.
        type: string
    required:
    - key
    - active
    - jsonSchema
    title: UpdateDeviceSourceSchemaPayload
    type: object
  UpdateMemberPayload:
    example:
      role: Non similique modi.
    properties:
      role:
        example: Non similique modi.
        type: string
    required:
    - role
    title: UpdateMemberPayload
    type: object
  UpdateSourcePayload:
    example:
      active: true
      name: Facilis non sed nihil aut.
      teamId: 9.15018470910022e+18
      userId: 8.169035954273615e+18
    properties:
      active:
        example: true
        type: boolean
      name:
        example: Facilis non sed nihil aut.
        type: string
      teamId:
        example: 9.15018470910022e+18
        format: int64
        type: integer
      userId:
        example: 8.169035954273615e+18
        format: int64
        type: integer
    required:
    - name
    title: UpdateSourcePayload
    type: object
  UpdateStationPayload:
    example:
      name: Voluptate eligendi repudiandae voluptas sapiente pariatur.
      status_json:
        Eos amet non.: "1976-12-04T00:27:37Z"
    properties:
      name:
        example: Voluptate eligendi repudiandae voluptas sapiente pariatur.
        type: string
      status_json:
        additionalProperties: true
        example:
          Eos amet non.: "1976-12-04T00:27:37Z"
        type: object
    required:
    - name
    - status_json
    title: UpdateStationPayload
    type: object
  UpdateUserPayload:
    example:
      bio: Fuga reiciendis temporibus et maiores ducimus.
      email: ernestine_beatty@mraz.com
      name: 462sjlb81j
    properties:
      bio:
        example: Fuga reiciendis temporibus et maiores ducimus.
        type: string
      email:
        example: ernestine_beatty@mraz.com
        format: email
        type: string
      name:
        example: 462sjlb81j
        maxLength: 256
        pattern: \S
        type: string
    required:
    - name
    - email
    - bio
    title: UpdateUserPayload
    type: object
  User:
    description: User media type (default view)
    example:
      bio: Tempore aut deleniti dolorem sunt nesciunt.
      email: raegan_sporer@witting.org
      id: 2.2518578816990794e+18
      media_content_type: Incidunt et maiores et nobis quam.
      media_url: Sunt exercitationem a dolores.
      name: tkulahvhqx
    properties:
      bio:
        example: Tempore aut deleniti dolorem sunt nesciunt.
        type: string
      email:
        example: raegan_sporer@witting.org
        format: email
        type: string
      id:
        example: 2.2518578816990794e+18
        format: int64
        type: integer
      media_content_type:
        example: Incidunt et maiores et nobis quam.
        type: string
      media_url:
        example: Sunt exercitationem a dolores.
        type: string
      name:
        example: tkulahvhqx
        maxLength: 256
        pattern: \S
        type: string
    required:
    - id
    - name
    - email
    - bio
    title: 'Mediatype identifier: application/vnd.app.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - bio: Tempore aut deleniti dolorem sunt nesciunt.
      email: raegan_sporer@witting.org
      id: 2.2518578816990794e+18
      media_content_type: Incidunt et maiores et nobis quam.
      media_url: Sunt exercitationem a dolores.
      name: tkulahvhqx
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.app.user+json; type=collection;
      view=default'
    type: array
  Users:
    description: Users media type (default view)
    example:
      users:
      - bio: Tempore aut deleniti dolorem sunt nesciunt.
        email: raegan_sporer@witting.org
        id: 2.2518578816990794e+18
        media_content_type: Incidunt et maiores et nobis quam.
        media_url: Sunt exercitationem a dolores.
        name: tkulahvhqx
      - bio: Tempore aut deleniti dolorem sunt nesciunt.
        email: raegan_sporer@witting.org
        id: 2.2518578816990794e+18
        media_content_type: Incidunt et maiores et nobis quam.
        media_url: Sunt exercitationem a dolores.
        name: tkulahvhqx
    properties:
      users:
        $ref: '#/definitions/UserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.app.users+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609066e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609066e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: api.fieldkit.org
info:
  description: A one-click open platform for field researchers and explorers.
  title: Fieldkit API
  version: ""
paths:
  /data/devices/{deviceId}/data:
    get:
      description: |-
        Retrieve data

        Required security scopes:
          * `api:access`
      operationId: data#device data
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: firstBlock
        required: false
        type: integer
      - in: query
        name: lastBlock
        required: false
        type: integer
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      produces:
      - application/vnd.app.device.data+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceDataRecordsResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: device data data
      tags:
      - data
  /data/devices/{deviceId}/data/json:
    get:
      description: |-
        Retrieve data

        Required security scopes:
          * `api:access`
      operationId: jsonData#get
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: end
        required: false
        type: integer
      - in: query
        name: internal
        required: false
        type: boolean
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: start
        required: false
        type: integer
      produces:
      - application/vnd.app.device.json.data+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONDataResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get jsonData
      tags:
      - jsonData
  /data/devices/{deviceId}/data/lines:
    get:
      description: |-
        Retrieve data

        Required security scopes:
          * `api:access`
      operationId: jsonData#get lines
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: end
        required: false
        type: integer
      - in: query
        name: internal
        required: false
        type: boolean
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: start
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get lines jsonData
      tags:
      - jsonData
  /data/devices/{deviceId}/summary:
    get:
      description: |-
        Retrieve summary

        Required security scopes:
          * `api:access`
      operationId: data#device summary
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/vnd.app.device.summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceDataSummaryResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: device summary data
      tags:
      - data
  /data/devices/{deviceId}/summary/json:
    get:
      description: |-
        Retrieve summarized data

        Required security scopes:
          * `api:access`
      operationId: jsonData#summary
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: end
        required: false
        type: integer
      - in: query
        name: internal
        required: false
        type: boolean
      - in: query
        name: interval
        required: false
        type: integer
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: resolution
        required: false
        type: integer
      - in: query
        name: start
        required: false
        type: integer
      produces:
      - application/vnd.app.device.json.data.summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONDataSummaryResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: summary jsonData
      tags:
      - jsonData
  /data/ingestions/{ingestionId}:
    delete:
      description: |-
        Delete data

        Required security scopes:
          * `api:access`
      operationId: data#delete
      parameters:
      - in: path
        name: ingestionId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete data
      tags:
      - data
  /data/ingestions/{ingestionId}/process:
    post:
      description: |-
        Process ingestion

        Required security scopes:
          * `api:access`
      operationId: data#process ingestion
      parameters:
      - in: path
        name: ingestionId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: process ingestion data
      tags:
      - data
  /data/process:
    post:
      description: |-
        Process data

        Required security scopes:
          * `api:access`
      operationId: data#process
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "503": {}
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: process data
      tags:
      - data
  /devices/{deviceId}/{module}/firmware:
    get:
      description: Return firmware for a device
      operationId: Firmware#check
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: path
        name: module
        required: true
        type: string
      - in: header
        name: Fk-Compiled
        required: false
        type: string
      - in: header
        name: If-None-Match
        required: false
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          headers:
            ETag:
              type: string
        "304":
          description: Not Modified
        "404":
          description: Not Found
      schemes:
      - https
      summary: check Firmware
      tags:
      - Firmware
  /devices/{deviceId}/firmware:
    get:
      description: List device firmware
      operationId: Firmware#list device
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/vnd.app.firmwares+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Firmwares'
      schemes:
      - https
      summary: list device Firmware
      tags:
      - Firmware
  /devices/firmware:
    patch:
      description: |-
        Update an Device firmware

        Required security scopes:
          * `api:admin`
      operationId: Firmware#update
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceFirmwarePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:admin
      summary: update Firmware
      tags:
      - Firmware
  /expeditions/{expeditionId}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id expedition
      tags:
      - expedition
    patch:
      description: |-
        Update an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#update
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update expedition
      tags:
      - expedition
  /expeditions/{expeditionId}/picture:
    get:
      description: Get a expedition's picture
      operationId: picture#expedition get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: expedition get id picture
      tags:
      - picture
  /expeditions/{expeditionId}/source-tokens:
    get:
      description: |-
        Update an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id source_token
      tags:
      - source_token
    post:
      description: |-
        Add an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceToken'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add source_token
      tags:
      - source_token
  /expeditions/{expeditionId}/sources:
    get:
      description: |-
        List an expedition's sources

        Required security scopes:
          * `api:access`
      operationId: source#list expedition id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list expedition id source
      tags:
      - source
  /expeditions/{expeditionId}/sources/devices:
    post:
      description: |-
        Add a Device source

        Required security scopes:
          * `api:access`
      operationId: device#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
        "500": {}
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add device
      tags:
      - device
  /expeditions/{expeditionId}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id twitter
      tags:
      - twitter
    post:
      description: |-
        Add a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTwitterAccountSourcePayload'
      produces:
      - application/vnd.app.location+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add twitter
      tags:
      - twitter
  /expeditions/{expeditionId}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id team
      tags:
      - team
    post:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add team
      tags:
      - team
  /firmware:
    get:
      description: List firmware
      operationId: Firmware#list
      parameters:
      - in: query
        name: module
        required: false
        type: string
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: profile
        required: false
        type: string
      produces:
      - application/vnd.app.firmwares+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Firmwares'
      schemes:
      - https
      summary: list Firmware
      tags:
      - Firmware
    patch:
      description: |-
        Add firmware

        Required security scopes:
          * `api:admin`
      operationId: Firmware#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddFirmwarePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:admin
      summary: add Firmware
      tags:
      - Firmware
  /firmware/{firmwareId}:
    delete:
      description: |-
        Delete firmware

        Required security scopes:
          * `api:admin`
      operationId: Firmware#delete
      parameters:
      - in: path
        name: firmwareId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:admin
      summary: delete Firmware
      tags:
      - Firmware
  /firmware/{firmwareId}/download:
    get:
      operationId: Firmware#download
      parameters:
      - in: path
        name: firmwareId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          headers:
            ETag:
              type: string
        "404":
          description: Not Found
      schemes:
      - https
      summary: download Firmware
      tags:
      - Firmware
  /login:
    post:
      description: Creates a valid JWT given login credentials.
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: login user
      tags:
      - user
  /logout:
    post:
      description: |-
        Creates a valid JWT given login credentials.

        Required security scopes:
          * `api:access`
      operationId: user#logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: logout user
      tags:
      - user
  /projects:
    get:
      description: |-
        List projects

        Required security scopes:
          * `api:access`
      operationId: project#list
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project
      tags:
      - project
    post:
      description: |-
        Add a project

        Required security scopes:
          * `api:access`
      operationId: project#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add project
      tags:
      - project
  /projects/@/{project}:
    get:
      description: Get a project
      operationId: project#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get project
      tags:
      - project
  /projects/@/{project}/administrators:
    get:
      description: |-
        List an project's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list administrator
      tags:
      - administrator
  /projects/@/{project}/administrators/@/{email}:
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get
      parameters:
      - in: path
        name: email
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get administrator
      tags:
      - administrator
  /projects/@/{project}/expeditions:
    get:
      description: List a project's expeditions
      operationId: expedition#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}:
    get:
      description: Add an expedition
      operationId: expedition#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}/source-tokens:
    get:
      description: |-
        List an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list source_token
      tags:
      - source_token
  /projects/@/{project}/expeditions/@/{expedition}/sources:
    get:
      description: List a project's sources
      operationId: source#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list source
      tags:
      - source
  /projects/@/{project}/expeditions/@/{expedition}/sources/devices:
    get:
      description: |-
        List an expedition's Device sources

        Required security scopes:
          * `api:access`
      operationId: device#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.device_sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list device
      tags:
      - device
  /projects/@/{project}/expeditions/@/{expedition}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list twitter
      tags:
      - twitter
  /projects/@/{project}/expeditions/@/{expedition}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members:
    get:
      description: |-
        List an team's members

        Required security scopes:
          * `api:access`
      operationId: member#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list member
      tags:
      - member
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members/@/{email}:
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get
      parameters:
      - in: path
        name: email
        required: true
        type: string
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get member
      tags:
      - member
  /projects/{projectId}:
    delete:
      description: |-
        Delete project

        Required security scopes:
          * `api:access`
      operationId: project#delete
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete project
      tags:
      - project
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id project
      tags:
      - project
    patch:
      description: |-
        Update a project

        Required security scopes:
          * `api:access`
      operationId: project#update
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update project
      tags:
      - project
  /projects/{projectId}/administrators:
    get:
      description: |-
        List an projects's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id administrator
      tags:
      - administrator
    post:
      description: |-
        Add an administrator to a project

        Required security scopes:
          * `api:access`
      operationId: administrator#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddAdministratorPayload'
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add administrator
      tags:
      - administrator
  /projects/{projectId}/administrators/{userId}:
    delete:
      description: |-
        Remove an administrator from a project

        Required security scopes:
          * `api:access`
      operationId: administrator#delete
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete administrator
      tags:
      - administrator
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id administrator
      tags:
      - administrator
  /projects/{projectId}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id expedition
      tags:
      - expedition
    post:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add expedition
      tags:
      - expedition
  /projects/{projectId}/invite:
    post:
      description: |-
        Invite a user to project

        Required security scopes:
          * `api:access`
      operationId: project#invite user
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/InviteUserPayload'
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: invite user project
      tags:
      - project
  /projects/{projectId}/media:
    get:
      description: Get a project image
      operationId: project#get image
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: get image project
      tags:
      - project
    post:
      description: |-
        Save a project image

        Required security scopes:
          * `api:access`
      operationId: project#save image
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: save image project
      tags:
      - project
  /projects/{projectId}/members/{userId}:
    delete:
      description: |-
        Remove a user from project

        Required security scopes:
          * `api:access`
      operationId: project#remove user
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RemoveUserPayload'
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: remove user project
      tags:
      - project
  /projects/{projectId}/picture:
    get:
      description: Get a project's picture
      operationId: picture#project get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: project get id picture
      tags:
      - picture
  /projects/{projectId}/stations:
    get:
      description: |-
        List project stations

        Required security scopes:
          * `api:access`
      operationId: station#list project
      parameters:
      - in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/vnd.app.stations+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stations'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project station
      tags:
      - station
  /projects/{projectId}/stations/{stationId}:
    delete:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: project#remove station
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: remove station project
      tags:
      - project
    post:
      description: |-
        Add a station to project

        Required security scopes:
          * `api:access`
      operationId: project#add station
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add station project
      tags:
      - project
  /records/data/{recordId}:
    get:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: records#data
      parameters:
      - in: path
        name: recordId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: data records
      tags:
      - records
  /records/meta/{recordId}:
    get:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: records#meta
      parameters:
      - in: path
        name: recordId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: meta records
      tags:
      - records
  /refresh:
    post:
      description: Creates a valid JWT given a refresh token.
      operationId: user#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshUserPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: refresh user
      tags:
      - user
  /source-tokens/{sourceTokenId}:
    delete:
      description: |-
        Delete an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#delete
      parameters:
      - in: path
        name: sourceTokenId
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete source_token
      tags:
      - source_token
  /sources/{sourceId}:
    get:
      description: List an source
      operationId: source#list id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list id source
      tags:
      - source
    patch:
      description: |-
        Update an source

        Required security scopes:
          * `api:access`
      operationId: source#update
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateSourcePayload'
      produces:
      - application/vnd.app.source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Source'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update source
      tags:
      - source
  /sources/{sourceId}/query:
    get:
      description: Query data for an source.
      operationId: Query#list by source
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.queried+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QueryData'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source Query
      tags:
      - Query
  /sources/{sourceId}/summary:
    get:
      description: List an source
      operationId: source#summary by id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceSummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: summary by id source
      tags:
      - source
  /sources/{sourceId}/temporal/{clusterId}/geometry:
    get:
      description: Retrieve temporal cluster geometry
      operationId: source#temporal cluster geometry by id
      parameters:
      - in: path
        name: clusterId
        required: true
        type: integer
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.cluster_geometry_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ClusterGeometrySummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: temporal cluster geometry by id source
      tags:
      - source
  /sources/devices/{id}:
    get:
      description: |-
        Get a Device source

        Required security scopes:
          * `api:access`
      operationId: device#get id
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id device
      tags:
      - device
    patch:
      description: |-
        Update an Device source

        Required security scopes:
          * `api:access`
      operationId: device#update
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update device
      tags:
      - device
  /sources/devices/{id}/location:
    patch:
      description: |-
        Update an Device source location

        Required security scopes:
          * `api:access`
      operationId: device#update location
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceLocationPayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update location device
      tags:
      - device
  /sources/devices/{id}/schemas:
    patch:
      description: |-
        Update an Device source schema

        Required security scopes:
          * `api:access`
      operationId: device#update schema
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceSchemaPayload'
      produces:
      - application/vnd.app.device_schemas+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSchemas'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update schema device
      tags:
      - device
  /sources/twitter-accounts/{sourceId}:
    get:
      description: |-
        Get a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#get id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id twitter
      tags:
      - twitter
  /stationLog:
    post:
      description: |-
        Add a station log

        Required security scopes:
          * `api:access`
      operationId: stationLog#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationLogPayload'
      produces:
      - application/vnd.app.stationlog+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationLog'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add stationLog
      tags:
      - stationLog
  /stationLogs:
    post:
      description: |-
        Add multiple station logs

        Required security scopes:
          * `api:access`
      operationId: stationLog#addMultiple
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationLogsPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: addMultiple stationLog
      tags:
      - stationLog
  /stationlogs/@/{stationLog}:
    get:
      description: Get a station log
      operationId: stationLog#get
      parameters:
      - in: path
        name: stationLog
        required: true
        type: string
      produces:
      - application/vnd.app.stationlog+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationLog'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get stationLog
      tags:
      - stationLog
  /stationlogs/{stationLogId}:
    patch:
      description: |-
        Update a station log

        Required security scopes:
          * `api:access`
      operationId: stationLog#update
      parameters:
      - in: path
        name: stationLogId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationLogPayload'
      produces:
      - application/vnd.app.stationlog+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationLog'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update stationLog
      tags:
      - stationLog
  /stations:
    get:
      description: |-
        List stations

        Required security scopes:
          * `api:access`
      operationId: station#list
      produces:
      - application/vnd.app.stations+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stations'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list station
      tags:
      - station
    post:
      description: |-
        Add a station

        Required security scopes:
          * `api:access`
      operationId: station#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationPayload'
      produces:
      - application/vnd.app.station+json
      - application/vnd.brr+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add station
      tags:
      - station
  /stations/@/{stationId}:
    get:
      description: |-
        Get a station

        Required security scopes:
          * `api:access`
      operationId: station#get
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - application/vnd.app.station+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get station
      tags:
      - station
  /stations/{stationId}:
    delete:
      description: |-
        Delete station

        Required security scopes:
          * `api:access`
      operationId: station#delete
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete station
      tags:
      - station
    patch:
      description: |-
        Update a station

        Required security scopes:
          * `api:access`
      operationId: station#update
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateStationPayload'
      produces:
      - application/vnd.app.station+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update station
      tags:
      - station
  /stations/{stationId}/field-note-media:
    post:
      description: |-
        Save a field note image

        Required security scopes:
          * `api:access`
      operationId: field_note#save media
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - application/vnd.app.field_note_media+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNoteMedia'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: save media field_note
      tags:
      - field_note
  /stations/{stationId}/field-note-media/{mediaId}:
    get:
      description: Get a field note image
      operationId: field_note#get media
      parameters:
      - in: path
        name: mediaId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: get media field_note
      tags:
      - field_note
  /stations/{stationId}/field-notes:
    get:
      description: |-
        Get all field notes for a station

        Required security scopes:
          * `api:access`
      operationId: field_note#get
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - application/vnd.app.field_notes+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNotes'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get field_note
      tags:
      - field_note
    post:
      description: |-
        Add a field note

        Required security scopes:
          * `api:access`
      operationId: field_note#add
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddFieldNotePayload'
      produces:
      - application/vnd.app.field_note_result+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNoteQueryResult'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add field_note
      tags:
      - field_note
  /stations/{stationId}/field-notes/{fieldNoteId}:
    delete:
      description: |-
        Remove a field note

        Required security scopes:
          * `api:access`
      operationId: field_note#delete
      parameters:
      - in: path
        name: fieldNoteId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete field_note
      tags:
      - field_note
    patch:
      description: |-
        Update a field note

        Required security scopes:
          * `api:access`
      operationId: field_note#update
      parameters:
      - in: path
        name: fieldNoteId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddFieldNotePayload'
      produces:
      - application/vnd.app.field_note_result+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNoteQueryResult'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update field_note
      tags:
      - field_note
  /stations/{stationId}/photo:
    get:
      operationId: station#photo
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - image/jpeg
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: photo station
      tags:
      - station
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.yaml
  /teams/{teamId}:
    delete:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete team
      tags:
      - team
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id team
      tags:
      - team
    patch:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update team
      tags:
      - team
  /teams/{teamId}/members:
    get:
      description: |-
        List an teams's members

        Required security scopes:
          * `api:access`
      operationId: member#list id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id member
      tags:
      - member
    post:
      description: |-
        Add a member to a team

        Required security scopes:
          * `api:access`
      operationId: member#add
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add member
      tags:
      - member
  /teams/{teamId}/members/{userId}:
    delete:
      description: |-
        Remove a member from a team

        Required security scopes:
          * `api:access`
      operationId: member#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete member
      tags:
      - member
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id member
      tags:
      - member
    patch:
      description: |-
        Update a member

        Required security scopes:
          * `api:access`
      operationId: member#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update member
      tags:
      - member
  /twitter/callback:
    get:
      description: OAuth callback endpoint for Twitter
      operationId: twitter#callback
      parameters:
      - in: query
        name: oauthToken
        required: true
        type: string
      - in: query
        name: oauthVerifier
        required: false
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "400":
          description: Bad Request
      schemes:
      - https
      summary: callback twitter
      tags:
      - twitter
  /user:
    get:
      description: |-
        Get the authenticated user

        Required security scopes:
          * `api:access`
      operationId: user#get current
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user
      tags:
      - user
  /user/{userId}/media:
    get:
      description: Get a user image
      operationId: user#get user image
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: get user image user
      tags:
      - user
  /user/media:
    get:
      description: |-
        Get the authenticated user's image

        Required security scopes:
          * `api:access`
      operationId: user#get current user image
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user image user
      tags:
      - user
    post:
      description: |-
        Save the authenticated user's image

        Required security scopes:
          * `api:access`
      operationId: user#save current user image
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: save current user image user
      tags:
      - user
  /user/projects:
    get:
      description: |-
        List the authenticated user's projects

        Required security scopes:
          * `api:access`
      operationId: project#list current
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list current project
      tags:
      - project
  /users:
    get:
      description: |-
        List users

        Required security scopes:
          * `api:access`
      operationId: user#list
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
    post:
      description: Add a user
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: add user
      tags:
      - user
  /users/{userId}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id user
      tags:
      - user
    patch:
      description: |-
        Update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /users/{userId}/picture:
    get:
      description: Get a user's picture
      operationId: picture#user get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user get id picture
      tags:
      - picture
    post:
      description: Save a user's picture
      operationId: picture#user save id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.media+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MediaReferenceResponse'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user save id picture
      tags:
      - picture
  /users/project/{projectId}:
    get:
      description: |-
        List users by project

        Required security scopes:
          * `api:access`
      operationId: user#list by project
      parameters:
      - in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list by project user
      tags:
      - user
  /validate:
    get:
      description: Validate a user's email address.
      operationId: user#validate
      parameters:
      - in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: validate user
      tags:
      - user
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  NotModified:
    description: Not Modified
  OK:
    description: OK
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
        * `api:admin`: API admin access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
