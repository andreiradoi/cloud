consumes:
- application/json
definitions:
  AddAdministratorPayload:
    example:
      userId: 4.0610253e+18
    properties:
      userId:
        example: 4.0610253e+18
        format: int64
        type: integer
    required:
    - userId
    title: AddAdministratorPayload
    type: object
  AddDeviceSourcePayload:
    example:
      key: Aut blanditiis adipisci.
      name: Est est.
    properties:
      key:
        example: Aut blanditiis adipisci.
        type: string
      name:
        example: Est est.
        type: string
    required:
    - name
    - key
    title: AddDeviceSourcePayload
    type: object
  AddExpeditionPayload:
    example:
      description: Iste illo nobis eos asperiores non nam.
      name: Sunt commodi consequatur qui.
      slug: 94vjic5nzn
    properties:
      description:
        example: Iste illo nobis eos asperiores non nam.
        type: string
      name:
        example: Sunt commodi consequatur qui.
        type: string
      slug:
        example: 94vjic5nzn
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddExpeditionPayload
    type: object
  AddFirmwarePayload:
    example:
      etag: Quibusdam est rem quisquam.
      meta: Autem ut unde eaque culpa unde iusto.
      module: Ut ut.
      profile: Ea repudiandae veritatis delectus sit veritatis.
      url: Ad et corporis et quasi laborum.
    properties:
      etag:
        example: Quibusdam est rem quisquam.
        type: string
      meta:
        example: Autem ut unde eaque culpa unde iusto.
        type: string
      module:
        example: Ut ut.
        type: string
      profile:
        example: Ea repudiandae veritatis delectus sit veritatis.
        type: string
      url:
        example: Ad et corporis et quasi laborum.
        type: string
    required:
    - etag
    - module
    - profile
    - url
    - meta
    title: AddFirmwarePayload
    type: object
  AddMemberPayload:
    example:
      role: Repellendus dolores.
      userId: 4.18955e+18
    properties:
      role:
        example: Repellendus dolores.
        type: string
      userId:
        example: 4.18955e+18
        format: int64
        type: integer
    required:
    - userId
    - role
    title: AddMemberPayload
    type: object
  AddProjectPayload:
    example:
      description: Eius ipsam magnam molestiae.
      name: Sed quis rerum.
      slug: 3ljezymno9
    properties:
      description:
        example: Eius ipsam magnam molestiae.
        type: string
      name:
        example: Sed quis rerum.
        type: string
      slug:
        example: 3ljezymno9
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddProjectPayload
    type: object
  AddTeamPayload:
    example:
      description: Occaecati ut sint.
      name: crrcazxi7n
      slug: yn31c5gcvp
    properties:
      description:
        example: Occaecati ut sint.
        type: string
      name:
        example: crrcazxi7n
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: yn31c5gcvp
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddTeamPayload
    type: object
  AddTwitterAccountSourcePayload:
    example:
      name: In quaerat et est ea voluptas.
    properties:
      name:
        example: In quaerat et est ea voluptas.
        type: string
    required:
    - name
    title: AddTwitterAccountSourcePayload
    type: object
  AddUserPayload:
    example:
      bio: Asperiores autem ex veritatis et mollitia.
      email: gavin.feeney@mosciski.net
      invite_token: Beatae officia dolores.
      name: j91bm6qh9f
      password: iq9cd69as0
      username: xihnipyk1l
    properties:
      bio:
        example: Asperiores autem ex veritatis et mollitia.
        type: string
      email:
        example: gavin.feeney@mosciski.net
        format: email
        type: string
      invite_token:
        example: Beatae officia dolores.
        type: string
      name:
        example: j91bm6qh9f
        maxLength: 256
        pattern: \S
        type: string
      password:
        example: iq9cd69as0
        minLength: 10
        type: string
      username:
        description: Username
        example: xihnipyk1l
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - password
    - bio
    - invite_token
    title: AddUserPayload
    type: object
  ClusterGeometrySummary:
    description: ClusterGeometrySummary media type (default view)
    example:
      geometry:
      - - 0.96824837
      - - 0.96824837
      - - 0.96824837
      id: 5.41219e+18
      sourceId: 1.6901081e+18
    properties:
      geometry:
        example:
        - - 0.96824837
        - - 0.96824837
        - - 0.96824837
        items:
          example:
          - 0.96824837
          items:
            example: 0.96824837
            format: double
            type: number
          type: array
        type: array
      id:
        example: 5.41219e+18
        format: int64
        type: integer
      sourceId:
        example: 1.6901081e+18
        format: int64
        type: integer
    required:
    - id
    - sourceId
    - geometry
    title: 'Mediatype identifier: application/vnd.app.cluster_geometry_summary+json;
      view=default'
    type: object
  ClusterGeometrySummaryCollection:
    description: ClusterGeometrySummaryCollection is the media type for an array of
      ClusterGeometrySummary (default view)
    example:
    - geometry:
      - - 0.96824837
      - - 0.96824837
      - - 0.96824837
      id: 5.41219e+18
      sourceId: 1.6901081e+18
    - geometry:
      - - 0.96824837
      - - 0.96824837
      - - 0.96824837
      id: 5.41219e+18
      sourceId: 1.6901081e+18
    items:
      $ref: '#/definitions/ClusterGeometrySummary'
    title: 'Mediatype identifier: application/vnd.app.cluster_geometry_summary+json;
      type=collection; view=default'
    type: array
  ClusterSummary:
    description: ClusterSummary media type (default view)
    example:
      centroid:
      - 0.19389316
      - 0.19389316
      endTime: 1982-11-27T22:23:46Z
      envelope:
      - - 0.39624313
      id: 6.130069e+18
      numberOfFeatures: 8.5731494e+18
      radius: 0.4070355
      sourceId: 8.62877e+18
      startTime: 1988-04-25T05:20:05Z
    properties:
      centroid:
        example:
        - 0.19389316
        - 0.19389316
        items:
          example: 0.19389316
          format: double
          type: number
        type: array
      endTime:
        example: 1982-11-27T22:23:46Z
        format: date-time
        type: string
      envelope:
        example:
        - - 0.39624313
        items:
          example:
          - 0.39624313
          items:
            example: 0.39624313
            format: double
            type: number
          type: array
        type: array
      id:
        example: 6.130069e+18
        format: int64
        type: integer
      numberOfFeatures:
        example: 8.5731494e+18
        format: int64
        type: integer
      radius:
        example: 0.4070355
        format: double
        type: number
      sourceId:
        example: 8.62877e+18
        format: int64
        type: integer
      startTime:
        example: 1988-04-25T05:20:05Z
        format: date-time
        type: string
    required:
    - id
    - sourceId
    - startTime
    - endTime
    - numberOfFeatures
    - centroid
    - radius
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      view=default'
    type: object
  ClusterSummaryCollection:
    description: ClusterSummaryCollection is the media type for an array of ClusterSummary
      (default view)
    example:
    - centroid:
      - 0.19389316
      - 0.19389316
      endTime: 1982-11-27T22:23:46Z
      envelope:
      - - 0.39624313
      id: 6.130069e+18
      numberOfFeatures: 8.5731494e+18
      radius: 0.4070355
      sourceId: 8.62877e+18
      startTime: 1988-04-25T05:20:05Z
    - centroid:
      - 0.19389316
      - 0.19389316
      endTime: 1982-11-27T22:23:46Z
      envelope:
      - - 0.39624313
      id: 6.130069e+18
      numberOfFeatures: 8.5731494e+18
      radius: 0.4070355
      sourceId: 8.62877e+18
      startTime: 1988-04-25T05:20:05Z
    - centroid:
      - 0.19389316
      - 0.19389316
      endTime: 1982-11-27T22:23:46Z
      envelope:
      - - 0.39624313
      id: 6.130069e+18
      numberOfFeatures: 8.5731494e+18
      radius: 0.4070355
      sourceId: 8.62877e+18
      startTime: 1988-04-25T05:20:05Z
    items:
      $ref: '#/definitions/ClusterSummary'
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      type=collection; view=default'
    type: array
  Device:
    description: Device media type (default view)
    example:
      device_id: Saepe facilis quis blanditiis recusandae est.
      last_file_id: Rem vel est qui ratione sequi et.
      last_file_time: 1980-07-23T03:28:45Z
      number_of_files: 8.8054075e+18
    properties:
      device_id:
        example: Saepe facilis quis blanditiis recusandae est.
        type: string
      last_file_id:
        example: Rem vel est qui ratione sequi et.
        type: string
      last_file_time:
        example: 1980-07-23T03:28:45Z
        format: date-time
        type: string
      number_of_files:
        example: 8.8054075e+18
        format: int64
        type: integer
    required:
    - device_id
    - number_of_files
    - last_file_time
    - last_file_id
    title: 'Mediatype identifier: application/vnd.app.device+json; view=default'
    type: object
  DeviceCollection:
    description: DeviceCollection is the media type for an array of Device (default
      view)
    example:
    - device_id: Saepe facilis quis blanditiis recusandae est.
      last_file_id: Rem vel est qui ratione sequi et.
      last_file_time: 1980-07-23T03:28:45Z
      number_of_files: 8.8054075e+18
    - device_id: Saepe facilis quis blanditiis recusandae est.
      last_file_id: Rem vel est qui ratione sequi et.
      last_file_time: 1980-07-23T03:28:45Z
      number_of_files: 8.8054075e+18
    items:
      $ref: '#/definitions/Device'
    title: 'Mediatype identifier: application/vnd.app.device+json; type=collection;
      view=default'
    type: array
  DeviceFile:
    description: DeviceFile media type (default view)
    example:
      device_id: Cumque nihil.
      file_id: Labore dolorem vel laboriosam aut voluptatum.
      file_type_id: Error dignissimos.
      file_type_name: Incidunt consequuntur fugit non ut.
      firmware: Ducimus perspiciatis quasi error voluptatem et.
      id: 6.684198e+18
      meta: Quia explicabo unde recusandae provident.
      size: 6.104504e+18
      time: 2015-08-11T10:20:08Z
      url: Sapiente assumenda excepturi dolores dolores et molestias.
      urls:
        csv: Velit quo eveniet in consequatur debitis.
        json: Ratione aut et.
        raw: Amet reiciendis odit.
    properties:
      device_id:
        example: Cumque nihil.
        type: string
      file_id:
        example: Labore dolorem vel laboriosam aut voluptatum.
        type: string
      file_type_id:
        example: Error dignissimos.
        type: string
      file_type_name:
        example: Incidunt consequuntur fugit non ut.
        type: string
      firmware:
        example: Ducimus perspiciatis quasi error voluptatem et.
        type: string
      id:
        example: 6.684198e+18
        format: int64
        type: integer
      meta:
        example: Quia explicabo unde recusandae provident.
        type: string
      size:
        example: 6.104504e+18
        format: int64
        type: integer
      time:
        example: 2015-08-11T10:20:08Z
        format: date-time
        type: string
      url:
        example: Sapiente assumenda excepturi dolores dolores et molestias.
        type: string
      urls:
        $ref: '#/definitions/DeviceFileUrls'
    required:
    - id
    - time
    - file_id
    - device_id
    - firmware
    - meta
    - file_type_id
    - file_type_name
    - size
    - url
    - urls
    title: 'Mediatype identifier: application/vnd.app.device.file+json; view=default'
    type: object
  DeviceFileCollection:
    description: DeviceFileCollection is the media type for an array of DeviceFile
      (default view)
    example:
    - device_id: Cumque nihil.
      file_id: Labore dolorem vel laboriosam aut voluptatum.
      file_type_id: Error dignissimos.
      file_type_name: Incidunt consequuntur fugit non ut.
      firmware: Ducimus perspiciatis quasi error voluptatem et.
      id: 6.684198e+18
      meta: Quia explicabo unde recusandae provident.
      size: 6.104504e+18
      time: 2015-08-11T10:20:08Z
      url: Sapiente assumenda excepturi dolores dolores et molestias.
      urls:
        csv: Velit quo eveniet in consequatur debitis.
        json: Ratione aut et.
        raw: Amet reiciendis odit.
    - device_id: Cumque nihil.
      file_id: Labore dolorem vel laboriosam aut voluptatum.
      file_type_id: Error dignissimos.
      file_type_name: Incidunt consequuntur fugit non ut.
      firmware: Ducimus perspiciatis quasi error voluptatem et.
      id: 6.684198e+18
      meta: Quia explicabo unde recusandae provident.
      size: 6.104504e+18
      time: 2015-08-11T10:20:08Z
      url: Sapiente assumenda excepturi dolores dolores et molestias.
      urls:
        csv: Velit quo eveniet in consequatur debitis.
        json: Ratione aut et.
        raw: Amet reiciendis odit.
    - device_id: Cumque nihil.
      file_id: Labore dolorem vel laboriosam aut voluptatum.
      file_type_id: Error dignissimos.
      file_type_name: Incidunt consequuntur fugit non ut.
      firmware: Ducimus perspiciatis quasi error voluptatem et.
      id: 6.684198e+18
      meta: Quia explicabo unde recusandae provident.
      size: 6.104504e+18
      time: 2015-08-11T10:20:08Z
      url: Sapiente assumenda excepturi dolores dolores et molestias.
      urls:
        csv: Velit quo eveniet in consequatur debitis.
        json: Ratione aut et.
        raw: Amet reiciendis odit.
    items:
      $ref: '#/definitions/DeviceFile'
    title: 'Mediatype identifier: application/vnd.app.device.file+json; type=collection;
      view=default'
    type: array
  DeviceFileUrls:
    example:
      csv: Velit quo eveniet in consequatur debitis.
      json: Ratione aut et.
      raw: Amet reiciendis odit.
    properties:
      csv:
        example: Velit quo eveniet in consequatur debitis.
        type: string
      json:
        example: Ratione aut et.
        type: string
      raw:
        example: Amet reiciendis odit.
        type: string
    required:
    - csv
    - raw
    - json
    title: DeviceFileUrls
    type: object
  DeviceFiles:
    description: DeviceFiles media type (default view)
    example:
      files:
      - device_id: Cumque nihil.
        file_id: Labore dolorem vel laboriosam aut voluptatum.
        file_type_id: Error dignissimos.
        file_type_name: Incidunt consequuntur fugit non ut.
        firmware: Ducimus perspiciatis quasi error voluptatem et.
        id: 6.684198e+18
        meta: Quia explicabo unde recusandae provident.
        size: 6.104504e+18
        time: 2015-08-11T10:20:08Z
        url: Sapiente assumenda excepturi dolores dolores et molestias.
        urls:
          csv: Velit quo eveniet in consequatur debitis.
          json: Ratione aut et.
          raw: Amet reiciendis odit.
      - device_id: Cumque nihil.
        file_id: Labore dolorem vel laboriosam aut voluptatum.
        file_type_id: Error dignissimos.
        file_type_name: Incidunt consequuntur fugit non ut.
        firmware: Ducimus perspiciatis quasi error voluptatem et.
        id: 6.684198e+18
        meta: Quia explicabo unde recusandae provident.
        size: 6.104504e+18
        time: 2015-08-11T10:20:08Z
        url: Sapiente assumenda excepturi dolores dolores et molestias.
        urls:
          csv: Velit quo eveniet in consequatur debitis.
          json: Ratione aut et.
          raw: Amet reiciendis odit.
      - device_id: Cumque nihil.
        file_id: Labore dolorem vel laboriosam aut voluptatum.
        file_type_id: Error dignissimos.
        file_type_name: Incidunt consequuntur fugit non ut.
        firmware: Ducimus perspiciatis quasi error voluptatem et.
        id: 6.684198e+18
        meta: Quia explicabo unde recusandae provident.
        size: 6.104504e+18
        time: 2015-08-11T10:20:08Z
        url: Sapiente assumenda excepturi dolores dolores et molestias.
        urls:
          csv: Velit quo eveniet in consequatur debitis.
          json: Ratione aut et.
          raw: Amet reiciendis odit.
    properties:
      files:
        $ref: '#/definitions/DeviceFileCollection'
    required:
    - files
    title: 'Mediatype identifier: application/vnd.app.device.files+json; view=default'
    type: object
  DeviceSchema:
    description: DeviceSchema media type (default view)
    example:
      active: false
      deviceId: 6.676849e+18
      jsonSchema: Deleniti sint velit qui.
      key: Et quidem quis fugit.
      projectId: 3.0480972e+18
      schemaId: 4.3492727e+18
    properties:
      active:
        example: false
        type: boolean
      deviceId:
        example: 6.676849e+18
        format: int64
        type: integer
      jsonSchema:
        example: Deleniti sint velit qui.
        type: string
      key:
        example: Et quidem quis fugit.
        type: string
      projectId:
        example: 3.0480972e+18
        format: int64
        type: integer
      schemaId:
        example: 4.3492727e+18
        format: int64
        type: integer
    required:
    - deviceId
    - schemaId
    - projectId
    - active
    - jsonSchema
    - key
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; view=default'
    type: object
  DeviceSchemaCollection:
    description: DeviceSchemaCollection is the media type for an array of DeviceSchema
      (default view)
    example:
    - active: false
      deviceId: 6.676849e+18
      jsonSchema: Deleniti sint velit qui.
      key: Et quidem quis fugit.
      projectId: 3.0480972e+18
      schemaId: 4.3492727e+18
    - active: false
      deviceId: 6.676849e+18
      jsonSchema: Deleniti sint velit qui.
      key: Et quidem quis fugit.
      projectId: 3.0480972e+18
      schemaId: 4.3492727e+18
    - active: false
      deviceId: 6.676849e+18
      jsonSchema: Deleniti sint velit qui.
      key: Et quidem quis fugit.
      projectId: 3.0480972e+18
      schemaId: 4.3492727e+18
    items:
      $ref: '#/definitions/DeviceSchema'
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; type=collection;
      view=default'
    type: array
  DeviceSchemas:
    description: DeviceSchemas media type (default view)
    example:
      schemas:
      - active: false
        deviceId: 6.676849e+18
        jsonSchema: Deleniti sint velit qui.
        key: Et quidem quis fugit.
        projectId: 3.0480972e+18
        schemaId: 4.3492727e+18
      - active: false
        deviceId: 6.676849e+18
        jsonSchema: Deleniti sint velit qui.
        key: Et quidem quis fugit.
        projectId: 3.0480972e+18
        schemaId: 4.3492727e+18
      - active: false
        deviceId: 6.676849e+18
        jsonSchema: Deleniti sint velit qui.
        key: Et quidem quis fugit.
        projectId: 3.0480972e+18
        schemaId: 4.3492727e+18
    properties:
      schemas:
        $ref: '#/definitions/DeviceSchemaCollection'
    required:
    - schemas
    title: 'Mediatype identifier: application/vnd.app.device_schemas+json; view=default'
    type: object
  DeviceSource:
    description: DeviceSource media type (default view)
    example:
      active: false
      expeditionId: 5.508071e+18
      id: 3.7761713e+18
      key: Est amet ipsam reprehenderit totam dolorem impedit.
      name: Quidem repellendus cupiditate nemo doloribus recusandae.
      teamId: 9.080818e+18
      token: Doloribus sequi placeat amet illo reprehenderit.
      userId: 3.6259348e+18
    properties:
      active:
        example: false
        type: boolean
      expeditionId:
        example: 5.508071e+18
        format: int64
        type: integer
      id:
        example: 3.7761713e+18
        format: int64
        type: integer
      key:
        example: Est amet ipsam reprehenderit totam dolorem impedit.
        type: string
      name:
        example: Quidem repellendus cupiditate nemo doloribus recusandae.
        type: string
      teamId:
        example: 9.080818e+18
        format: int64
        type: integer
      token:
        example: Doloribus sequi placeat amet illo reprehenderit.
        type: string
      userId:
        example: 3.6259348e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - active
    - name
    - token
    - key
    title: 'Mediatype identifier: application/vnd.app.device_source+json; view=default'
    type: object
  DeviceSourceCollection:
    description: DeviceSourceCollection is the media type for an array of DeviceSource
      (default view)
    example:
    - active: false
      expeditionId: 5.508071e+18
      id: 3.7761713e+18
      key: Est amet ipsam reprehenderit totam dolorem impedit.
      name: Quidem repellendus cupiditate nemo doloribus recusandae.
      teamId: 9.080818e+18
      token: Doloribus sequi placeat amet illo reprehenderit.
      userId: 3.6259348e+18
    - active: false
      expeditionId: 5.508071e+18
      id: 3.7761713e+18
      key: Est amet ipsam reprehenderit totam dolorem impedit.
      name: Quidem repellendus cupiditate nemo doloribus recusandae.
      teamId: 9.080818e+18
      token: Doloribus sequi placeat amet illo reprehenderit.
      userId: 3.6259348e+18
    items:
      $ref: '#/definitions/DeviceSource'
    title: 'Mediatype identifier: application/vnd.app.device_source+json; type=collection;
      view=default'
    type: array
  DeviceSources:
    description: DeviceSources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 5.508071e+18
        id: 3.7761713e+18
        key: Est amet ipsam reprehenderit totam dolorem impedit.
        name: Quidem repellendus cupiditate nemo doloribus recusandae.
        teamId: 9.080818e+18
        token: Doloribus sequi placeat amet illo reprehenderit.
        userId: 3.6259348e+18
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
    required:
    - deviceSources
    title: 'Mediatype identifier: application/vnd.app.device_sources+json; view=default'
    type: object
  Devices:
    description: Devices media type (default view)
    example:
      devices:
      - device_id: Saepe facilis quis blanditiis recusandae est.
        last_file_id: Rem vel est qui ratione sequi et.
        last_file_time: 1980-07-23T03:28:45Z
        number_of_files: 8.8054075e+18
      - device_id: Saepe facilis quis blanditiis recusandae est.
        last_file_id: Rem vel est qui ratione sequi et.
        last_file_time: 1980-07-23T03:28:45Z
        number_of_files: 8.8054075e+18
      - device_id: Saepe facilis quis blanditiis recusandae est.
        last_file_id: Rem vel est qui ratione sequi et.
        last_file_time: 1980-07-23T03:28:45Z
        number_of_files: 8.8054075e+18
    properties:
      devices:
        $ref: '#/definitions/DeviceCollection'
    required:
    - devices
    title: 'Mediatype identifier: application/vnd.app.devices+json; view=default'
    type: object
  Expedition:
    description: Expedition media type (default view)
    example:
      description: Et ratione porro iusto quaerat ea quibusdam.
      id: 8.890503e+16
      name: Aliquid voluptate natus dolores.
      slug: 54othhnivt
    properties:
      description:
        example: Et ratione porro iusto quaerat ea quibusdam.
        type: string
      id:
        example: 8.890503e+16
        format: int64
        type: integer
      name:
        example: Aliquid voluptate natus dolores.
        type: string
      slug:
        example: 54othhnivt
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.expedition+json; view=default'
    type: object
  ExpeditionCollection:
    description: ExpeditionCollection is the media type for an array of Expedition
      (default view)
    example:
    - description: Et ratione porro iusto quaerat ea quibusdam.
      id: 8.890503e+16
      name: Aliquid voluptate natus dolores.
      slug: 54othhnivt
    - description: Et ratione porro iusto quaerat ea quibusdam.
      id: 8.890503e+16
      name: Aliquid voluptate natus dolores.
      slug: 54othhnivt
    items:
      $ref: '#/definitions/Expedition'
    title: 'Mediatype identifier: application/vnd.app.expedition+json; type=collection;
      view=default'
    type: array
  Expeditions:
    description: Expeditions media type (default view)
    example:
      expeditions:
      - description: Et ratione porro iusto quaerat ea quibusdam.
        id: 8.890503e+16
        name: Aliquid voluptate natus dolores.
        slug: 54othhnivt
    properties:
      expeditions:
        $ref: '#/definitions/ExpeditionCollection'
    required:
    - expeditions
    title: 'Mediatype identifier: application/vnd.app.expeditions+json; view=default'
    type: object
  FirmwareSummary:
    description: FirmwareSummary media type (default view)
    example:
      etag: Ut repellendus ratione voluptatum.
      id: 9.878814e+17
      module: Praesentium ratione et.
      profile: A voluptas.
      time: 1976-07-08T15:56:09Z
      url: Itaque qui sequi.
    properties:
      etag:
        example: Ut repellendus ratione voluptatum.
        type: string
      id:
        example: 9.878814e+17
        format: int64
        type: integer
      module:
        example: Praesentium ratione et.
        type: string
      profile:
        example: A voluptas.
        type: string
      time:
        example: 1976-07-08T15:56:09Z
        format: date-time
        type: string
      url:
        example: Itaque qui sequi.
        type: string
    required:
    - id
    - time
    - etag
    - module
    - profile
    - url
    title: 'Mediatype identifier: application/vnd.app.firmware+json; view=default'
    type: object
  FirmwareSummaryCollection:
    description: FirmwareSummaryCollection is the media type for an array of FirmwareSummary
      (default view)
    example:
    - etag: Ut repellendus ratione voluptatum.
      id: 9.878814e+17
      module: Praesentium ratione et.
      profile: A voluptas.
      time: 1976-07-08T15:56:09Z
      url: Itaque qui sequi.
    items:
      $ref: '#/definitions/FirmwareSummary'
    title: 'Mediatype identifier: application/vnd.app.firmware+json; type=collection;
      view=default'
    type: array
  Firmwares:
    description: Firmwares media type (default view)
    example:
      firmwares:
      - etag: Ut repellendus ratione voluptatum.
        id: 9.878814e+17
        module: Praesentium ratione et.
        profile: A voluptas.
        time: 1976-07-08T15:56:09Z
        url: Itaque qui sequi.
      - etag: Ut repellendus ratione voluptatum.
        id: 9.878814e+17
        module: Praesentium ratione et.
        profile: A voluptas.
        time: 1976-07-08T15:56:09Z
        url: Itaque qui sequi.
      - etag: Ut repellendus ratione voluptatum.
        id: 9.878814e+17
        module: Praesentium ratione et.
        profile: A voluptas.
        time: 1976-07-08T15:56:09Z
        url: Itaque qui sequi.
    properties:
      firmwares:
        $ref: '#/definitions/FirmwareSummaryCollection'
    required:
    - firmwares
    title: 'Mediatype identifier: application/vnd.app.firmwares+json; view=default'
    type: object
  GeoJSON:
    description: GeoJSON media type (default view)
    example:
      features:
      - geometry:
          coordinates:
          - 0.1554735
          type: Repudiandae dignissimos.
        properties:
          Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
        type: Beatae itaque ipsa soluta minus consequatur.
      - geometry:
          coordinates:
          - 0.1554735
          type: Repudiandae dignissimos.
        properties:
          Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
        type: Beatae itaque ipsa soluta minus consequatur.
      - geometry:
          coordinates:
          - 0.1554735
          type: Repudiandae dignissimos.
        properties:
          Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
        type: Beatae itaque ipsa soluta minus consequatur.
      type: Sed magni consequatur et.
    properties:
      features:
        $ref: '#/definitions/GeoJSONFeatureCollection'
      type:
        example: Sed magni consequatur et.
        type: string
    required:
    - type
    - features
    title: 'Mediatype identifier: application/vnd.app.geojson+json; view=default'
    type: object
  GeoJSONFeature:
    description: GeoJSONFeature media type (default view)
    example:
      geometry:
        coordinates:
        - 0.1554735
        type: Repudiandae dignissimos.
      properties:
        Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
      type: Beatae itaque ipsa soluta minus consequatur.
    properties:
      geometry:
        $ref: '#/definitions/GeoJSONGeometry'
      properties:
        additionalProperties: true
        example:
          Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
        type: object
      type:
        example: Beatae itaque ipsa soluta minus consequatur.
        type: string
    required:
    - type
    - geometry
    - properties
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; view=default'
    type: object
  GeoJSONFeatureCollection:
    description: GeoJSONFeatureCollection is the media type for an array of GeoJSONFeature
      (default view)
    example:
    - geometry:
        coordinates:
        - 0.1554735
        type: Repudiandae dignissimos.
      properties:
        Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
      type: Beatae itaque ipsa soluta minus consequatur.
    items:
      $ref: '#/definitions/GeoJSONFeature'
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; type=collection;
      view=default'
    type: array
  GeoJSONGeometry:
    description: GeoJSONGeometry media type (default view)
    example:
      coordinates:
      - 0.1554735
      type: Repudiandae dignissimos.
    properties:
      coordinates:
        example:
        - 0.1554735
        items:
          example: 0.1554735
          format: double
          type: number
        type: array
      type:
        example: Repudiandae dignissimos.
        type: string
    required:
    - type
    - coordinates
    title: 'Mediatype identifier: application/vnd.app.geojson-geometry+json; view=default'
    type: object
  Location:
    description: Location media type (default view)
    example:
      location: http://uptonwatsica.info/damion
    properties:
      location:
        example: http://uptonwatsica.info/damion
        format: uri
        type: string
    required:
    - location
    title: 'Mediatype identifier: application/vnd.app.location+json; view=default'
    type: object
  LoginPayload:
    example:
      password: ztooazl84x
      username: dano2mb4cz
    properties:
      password:
        example: ztooazl84x
        minLength: 10
        type: string
      username:
        description: Username
        example: dano2mb4cz
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - username
    - password
    title: LoginPayload
    type: object
  MapFeatures:
    description: MapFeatures media type (default view)
    example:
      geoJSON:
        geo:
          features:
          - geometry:
              coordinates:
              - 0.1554735
              type: Repudiandae dignissimos.
            properties:
              Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
            type: Beatae itaque ipsa soluta minus consequatur.
          - geometry:
              coordinates:
              - 0.1554735
              type: Repudiandae dignissimos.
            properties:
              Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
            type: Beatae itaque ipsa soluta minus consequatur.
          - geometry:
              coordinates:
              - 0.1554735
              type: Repudiandae dignissimos.
            properties:
              Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
            type: Beatae itaque ipsa soluta minus consequatur.
          type: Sed magni consequatur et.
        hasMore: true
        nextUrl: Velit ad.
        previousUrl: Voluptatem explicabo.
      geometries:
      - geometry:
        - - 0.96824837
        - - 0.96824837
        - - 0.96824837
        id: 5.41219e+18
        sourceId: 1.6901081e+18
      - geometry:
        - - 0.96824837
        - - 0.96824837
        - - 0.96824837
        id: 5.41219e+18
        sourceId: 1.6901081e+18
      spatial:
      - centroid:
        - 0.19389316
        - 0.19389316
        endTime: 1982-11-27T22:23:46Z
        envelope:
        - - 0.39624313
        id: 6.130069e+18
        numberOfFeatures: 8.5731494e+18
        radius: 0.4070355
        sourceId: 8.62877e+18
        startTime: 1988-04-25T05:20:05Z
      temporal:
      - centroid:
        - 0.19389316
        - 0.19389316
        endTime: 1982-11-27T22:23:46Z
        envelope:
        - - 0.39624313
        id: 6.130069e+18
        numberOfFeatures: 8.5731494e+18
        radius: 0.4070355
        sourceId: 8.62877e+18
        startTime: 1988-04-25T05:20:05Z
      - centroid:
        - 0.19389316
        - 0.19389316
        endTime: 1982-11-27T22:23:46Z
        envelope:
        - - 0.39624313
        id: 6.130069e+18
        numberOfFeatures: 8.5731494e+18
        radius: 0.4070355
        sourceId: 8.62877e+18
        startTime: 1988-04-25T05:20:05Z
      - centroid:
        - 0.19389316
        - 0.19389316
        endTime: 1982-11-27T22:23:46Z
        envelope:
        - - 0.39624313
        id: 6.130069e+18
        numberOfFeatures: 8.5731494e+18
        radius: 0.4070355
        sourceId: 8.62877e+18
        startTime: 1988-04-25T05:20:05Z
    properties:
      geoJSON:
        $ref: '#/definitions/PagedGeoJSON'
      geometries:
        $ref: '#/definitions/ClusterGeometrySummaryCollection'
      spatial:
        $ref: '#/definitions/ClusterSummaryCollection'
      temporal:
        $ref: '#/definitions/ClusterSummaryCollection'
    required:
    - geoJSON
    - temporal
    - spatial
    - geometries
    title: 'Mediatype identifier: application/vnd.app.map_features+json; view=default'
    type: object
  PagedGeoJSON:
    description: PagedGeoJSON media type (default view)
    example:
      geo:
        features:
        - geometry:
            coordinates:
            - 0.1554735
            type: Repudiandae dignissimos.
          properties:
            Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
          type: Beatae itaque ipsa soluta minus consequatur.
        - geometry:
            coordinates:
            - 0.1554735
            type: Repudiandae dignissimos.
          properties:
            Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
          type: Beatae itaque ipsa soluta minus consequatur.
        - geometry:
            coordinates:
            - 0.1554735
            type: Repudiandae dignissimos.
          properties:
            Nihil et.: e57edede-c8d2-4abe-ac6a-7fc52b12ea0d
          type: Beatae itaque ipsa soluta minus consequatur.
        type: Sed magni consequatur et.
      hasMore: true
      nextUrl: Velit ad.
      previousUrl: Voluptatem explicabo.
    properties:
      geo:
        $ref: '#/definitions/GeoJSON'
      hasMore:
        example: true
        type: boolean
      nextUrl:
        example: Velit ad.
        type: string
      previousUrl:
        example: Voluptatem explicabo.
        type: string
    required:
    - nextUrl
    - geo
    - hasMore
    title: 'Mediatype identifier: application/vnd.app.paged_geojson+json; view=default'
    type: object
  Project:
    description: Project media type (default view)
    example:
      description: Vel tempore laboriosam.
      id: 5.946389e+18
      name: Quo vel.
      slug: ourowl9c0x
    properties:
      description:
        example: Vel tempore laboriosam.
        type: string
      id:
        example: 5.946389e+18
        format: int64
        type: integer
      name:
        example: Quo vel.
        type: string
      slug:
        example: ourowl9c0x
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.project+json; view=default'
    type: object
  ProjectAdministrator:
    description: ProjectAdministrator media type (default view)
    example:
      projectId: 1.2833427e+18
      userId: 6.2970576e+18
    properties:
      projectId:
        example: 1.2833427e+18
        format: int64
        type: integer
      userId:
        example: 6.2970576e+18
        format: int64
        type: integer
    required:
    - projectId
    - userId
    title: 'Mediatype identifier: application/vnd.app.administrator+json; view=default'
    type: object
  ProjectAdministratorCollection:
    description: ProjectAdministratorCollection is the media type for an array of
      ProjectAdministrator (default view)
    example:
    - projectId: 1.2833427e+18
      userId: 6.2970576e+18
    items:
      $ref: '#/definitions/ProjectAdministrator'
    title: 'Mediatype identifier: application/vnd.app.administrator+json; type=collection;
      view=default'
    type: array
  ProjectAdministrators:
    description: ProjectAdministrators media type (default view)
    example:
      administrators:
      - projectId: 1.2833427e+18
        userId: 6.2970576e+18
    properties:
      administrators:
        $ref: '#/definitions/ProjectAdministratorCollection'
    required:
    - administrators
    title: 'Mediatype identifier: application/vnd.app.administrators+json; view=default'
    type: object
  ProjectCollection:
    description: ProjectCollection is the media type for an array of Project (default
      view)
    example:
    - description: Vel tempore laboriosam.
      id: 5.946389e+18
      name: Quo vel.
      slug: ourowl9c0x
    - description: Vel tempore laboriosam.
      id: 5.946389e+18
      name: Quo vel.
      slug: ourowl9c0x
    - description: Vel tempore laboriosam.
      id: 5.946389e+18
      name: Quo vel.
      slug: ourowl9c0x
    items:
      $ref: '#/definitions/Project'
    title: 'Mediatype identifier: application/vnd.app.project+json; type=collection;
      view=default'
    type: array
  Projects:
    description: Projects media type (default view)
    example:
      projects:
      - description: Vel tempore laboriosam.
        id: 5.946389e+18
        name: Quo vel.
        slug: ourowl9c0x
    properties:
      projects:
        $ref: '#/definitions/ProjectCollection'
    required:
    - projects
    title: 'Mediatype identifier: application/vnd.app.projects+json; view=default'
    type: object
  QueryData:
    description: QueryData media type (default view)
    example:
      series:
      - name: Officiis dignissimos consectetur.
        rows:
        - 0.06883001
    properties:
      series:
        $ref: '#/definitions/SeriesDataCollection'
    required:
    - series
    title: 'Mediatype identifier: application/vnd.app.queried+json; view=default'
    type: object
  ReadingSummary:
    description: ReadingSummary media type (default view)
    example:
      name: Inventore ratione nisi ea.
    properties:
      name:
        example: Inventore ratione nisi ea.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; view=default'
    type: object
  ReadingSummaryCollection:
    description: ReadingSummaryCollection is the media type for an array of ReadingSummary
      (default view)
    example:
    - name: Inventore ratione nisi ea.
    - name: Inventore ratione nisi ea.
    items:
      $ref: '#/definitions/ReadingSummary'
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; type=collection;
      view=default'
    type: array
  RefreshUserPayload:
    example:
      refresh_token: Suscipit voluptatem quae eum voluptatibus magnam non.
    properties:
      refresh_token:
        example: Suscipit voluptatem quae eum voluptatibus magnam non.
        type: string
    required:
    - refresh_token
    title: RefreshUserPayload
    type: object
  SeriesData:
    description: SeriesData media type (default view)
    example:
      name: Officiis dignissimos consectetur.
      rows:
      - 0.06883001
    properties:
      name:
        example: Officiis dignissimos consectetur.
        type: string
      rows:
        example:
        - 0.06883001
        items:
          example: 0.06883001
        type: array
    required:
    - name
    - rows
    title: 'Mediatype identifier: application/vnd.app.series+json; view=default'
    type: object
  SeriesDataCollection:
    description: SeriesDataCollection is the media type for an array of SeriesData
      (default view)
    example:
    - name: Officiis dignissimos consectetur.
      rows:
      - 0.06883001
    - name: Officiis dignissimos consectetur.
      rows:
      - 0.06883001
    - name: Officiis dignissimos consectetur.
      rows:
      - 0.06883001
    items:
      $ref: '#/definitions/SeriesData'
    title: 'Mediatype identifier: application/vnd.app.series+json; type=collection;
      view=default'
    type: array
  Source:
    description: Source media type (default view)
    example:
      active: true
      expeditionId: 6.3747106e+18
      id: 5.516118e+18
      name: Rerum et sed dolorem consequatur quidem.
      teamId: 1.6419979e+18
      userId: 1.5307306e+18
    properties:
      active:
        example: true
        type: boolean
      expeditionId:
        example: 6.3747106e+18
        format: int64
        type: integer
      id:
        example: 5.516118e+18
        format: int64
        type: integer
      name:
        example: Rerum et sed dolorem consequatur quidem.
        type: string
      teamId:
        example: 1.6419979e+18
        format: int64
        type: integer
      userId:
        example: 1.5307306e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    title: 'Mediatype identifier: application/vnd.app.source+json; view=default'
    type: object
  SourceSummary:
    description: SourceSummary media type (default view)
    example:
      id: 6.106277e+18
      name: Impedit et incidunt.
      readings:
      - name: Inventore ratione nisi ea.
      spatial:
      - centroid:
        - 0.19389316
        - 0.19389316
        endTime: 1982-11-27T22:23:46Z
        envelope:
        - - 0.39624313
        id: 6.130069e+18
        numberOfFeatures: 8.5731494e+18
        radius: 0.4070355
        sourceId: 8.62877e+18
        startTime: 1988-04-25T05:20:05Z
      temporal:
      - centroid:
        - 0.19389316
        - 0.19389316
        endTime: 1982-11-27T22:23:46Z
        envelope:
        - - 0.39624313
        id: 6.130069e+18
        numberOfFeatures: 8.5731494e+18
        radius: 0.4070355
        sourceId: 8.62877e+18
        startTime: 1988-04-25T05:20:05Z
      - centroid:
        - 0.19389316
        - 0.19389316
        endTime: 1982-11-27T22:23:46Z
        envelope:
        - - 0.39624313
        id: 6.130069e+18
        numberOfFeatures: 8.5731494e+18
        radius: 0.4070355
        sourceId: 8.62877e+18
        startTime: 1988-04-25T05:20:05Z
    properties:
      id:
        example: 6.106277e+18
        format: int64
        type: integer
      name:
        example: Impedit et incidunt.
        type: string
      readings:
        $ref: '#/definitions/ReadingSummaryCollection'
      spatial:
        $ref: '#/definitions/ClusterSummaryCollection'
      temporal:
        $ref: '#/definitions/ClusterSummaryCollection'
    required:
    - id
    - name
    - temporal
    - spatial
    title: 'Mediatype identifier: application/vnd.app.source_summary+json; view=default'
    type: object
  SourceToken:
    description: SourceToken media type (default view)
    example:
      expeditionId: 7.2045906e+18
      id: 8.9637114e+18
      token: Sit sint doloremque repellendus.
    properties:
      expeditionId:
        example: 7.2045906e+18
        format: int64
        type: integer
      id:
        example: 8.9637114e+18
        format: int64
        type: integer
      token:
        example: Sit sint doloremque repellendus.
        type: string
    required:
    - id
    - token
    - expeditionId
    title: 'Mediatype identifier: application/vnd.app.source_token+json; view=default'
    type: object
  SourceTokenCollection:
    description: SourceTokenCollection is the media type for an array of SourceToken
      (default view)
    example:
    - expeditionId: 7.2045906e+18
      id: 8.9637114e+18
      token: Sit sint doloremque repellendus.
    - expeditionId: 7.2045906e+18
      id: 8.9637114e+18
      token: Sit sint doloremque repellendus.
    items:
      $ref: '#/definitions/SourceToken'
    title: 'Mediatype identifier: application/vnd.app.source_token+json; type=collection;
      view=default'
    type: array
  SourceTokens:
    description: SourceTokens media type (default view)
    example:
      sourceTokens:
      - expeditionId: 7.2045906e+18
        id: 8.9637114e+18
        token: Sit sint doloremque repellendus.
      - expeditionId: 7.2045906e+18
        id: 8.9637114e+18
        token: Sit sint doloremque repellendus.
      - expeditionId: 7.2045906e+18
        id: 8.9637114e+18
        token: Sit sint doloremque repellendus.
    properties:
      sourceTokens:
        $ref: '#/definitions/SourceTokenCollection'
    required:
    - sourceTokens
    title: 'Mediatype identifier: application/vnd.app.source_tokens+json; view=default'
    type: object
  Sources:
    description: Sources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 5.508071e+18
        id: 3.7761713e+18
        key: Est amet ipsam reprehenderit totam dolorem impedit.
        name: Quidem repellendus cupiditate nemo doloribus recusandae.
        teamId: 9.080818e+18
        token: Doloribus sequi placeat amet illo reprehenderit.
        userId: 3.6259348e+18
      - active: false
        expeditionId: 5.508071e+18
        id: 3.7761713e+18
        key: Est amet ipsam reprehenderit totam dolorem impedit.
        name: Quidem repellendus cupiditate nemo doloribus recusandae.
        teamId: 9.080818e+18
        token: Doloribus sequi placeat amet illo reprehenderit.
        userId: 3.6259348e+18
      - active: false
        expeditionId: 5.508071e+18
        id: 3.7761713e+18
        key: Est amet ipsam reprehenderit totam dolorem impedit.
        name: Quidem repellendus cupiditate nemo doloribus recusandae.
        teamId: 9.080818e+18
        token: Doloribus sequi placeat amet illo reprehenderit.
        userId: 3.6259348e+18
      twitterAccountSources:
      - expeditionId: 8.564615e+18
        id: 5.663148e+18
        name: Aperiam perferendis veritatis dolore eius iusto.
        screenName: Amet est accusantium et et.
        teamId: 6.8032997e+18
        twitterAccountId: 4.5484952e+18
        userId: 1.0196082e+17
      - expeditionId: 8.564615e+18
        id: 5.663148e+18
        name: Aperiam perferendis veritatis dolore eius iusto.
        screenName: Amet est accusantium et et.
        teamId: 6.8032997e+18
        twitterAccountId: 4.5484952e+18
        userId: 1.0196082e+17
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    title: 'Mediatype identifier: application/vnd.app.sources+json; view=default'
    type: object
  Team:
    description: Team media type (default view)
    example:
      description: Et aut sunt illo qui odit.
      id: 8.723991e+18
      name: iuahxosx7r
      slug: w265h606ar
    properties:
      description:
        example: Et aut sunt illo qui odit.
        type: string
      id:
        example: 8.723991e+18
        format: int64
        type: integer
      name:
        example: iuahxosx7r
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: w265h606ar
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.team+json; view=default'
    type: object
  TeamCollection:
    description: TeamCollection is the media type for an array of Team (default view)
    example:
    - description: Et aut sunt illo qui odit.
      id: 8.723991e+18
      name: iuahxosx7r
      slug: w265h606ar
    - description: Et aut sunt illo qui odit.
      id: 8.723991e+18
      name: iuahxosx7r
      slug: w265h606ar
    - description: Et aut sunt illo qui odit.
      id: 8.723991e+18
      name: iuahxosx7r
      slug: w265h606ar
    items:
      $ref: '#/definitions/Team'
    title: 'Mediatype identifier: application/vnd.app.team+json; type=collection;
      view=default'
    type: array
  TeamMember:
    description: TeamMember media type (default view)
    example:
      role: Rerum et.
      teamId: 7.880554e+18
      userId: 2.9889426e+17
    properties:
      role:
        example: Rerum et.
        type: string
      teamId:
        example: 7.880554e+18
        format: int64
        type: integer
      userId:
        example: 2.9889426e+17
        format: int64
        type: integer
    required:
    - teamId
    - userId
    - role
    title: 'Mediatype identifier: application/vnd.app.member+json; view=default'
    type: object
  TeamMemberCollection:
    description: TeamMemberCollection is the media type for an array of TeamMember
      (default view)
    example:
    - role: Rerum et.
      teamId: 7.880554e+18
      userId: 2.9889426e+17
    - role: Rerum et.
      teamId: 7.880554e+18
      userId: 2.9889426e+17
    - role: Rerum et.
      teamId: 7.880554e+18
      userId: 2.9889426e+17
    items:
      $ref: '#/definitions/TeamMember'
    title: 'Mediatype identifier: application/vnd.app.member+json; type=collection;
      view=default'
    type: array
  TeamMembers:
    description: TeamMembers media type (default view)
    example:
      members:
      - role: Rerum et.
        teamId: 7.880554e+18
        userId: 2.9889426e+17
    properties:
      members:
        $ref: '#/definitions/TeamMemberCollection'
    required:
    - members
    title: 'Mediatype identifier: application/vnd.app.members+json; view=default'
    type: object
  Teams:
    description: Teams media type (default view)
    example:
      teams:
      - description: Et aut sunt illo qui odit.
        id: 8.723991e+18
        name: iuahxosx7r
        slug: w265h606ar
      - description: Et aut sunt illo qui odit.
        id: 8.723991e+18
        name: iuahxosx7r
        slug: w265h606ar
    properties:
      teams:
        $ref: '#/definitions/TeamCollection'
    required:
    - teams
    title: 'Mediatype identifier: application/vnd.app.teams+json; view=default'
    type: object
  TwitterAccountSource:
    description: TwitterAccountSource media type (default view)
    example:
      expeditionId: 8.564615e+18
      id: 5.663148e+18
      name: Aperiam perferendis veritatis dolore eius iusto.
      screenName: Amet est accusantium et et.
      teamId: 6.8032997e+18
      twitterAccountId: 4.5484952e+18
      userId: 1.0196082e+17
    properties:
      expeditionId:
        example: 8.564615e+18
        format: int64
        type: integer
      id:
        example: 5.663148e+18
        format: int64
        type: integer
      name:
        example: Aperiam perferendis veritatis dolore eius iusto.
        type: string
      screenName:
        example: Amet est accusantium et et.
        type: string
      teamId:
        example: 6.8032997e+18
        format: int64
        type: integer
      twitterAccountId:
        example: 4.5484952e+18
        format: int64
        type: integer
      userId:
        example: 1.0196082e+17
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    - twitterAccountId
    - screenName
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      view=default'
    type: object
  TwitterAccountSourceCollection:
    description: TwitterAccountSourceCollection is the media type for an array of
      TwitterAccountSource (default view)
    example:
    - expeditionId: 8.564615e+18
      id: 5.663148e+18
      name: Aperiam perferendis veritatis dolore eius iusto.
      screenName: Amet est accusantium et et.
      teamId: 6.8032997e+18
      twitterAccountId: 4.5484952e+18
      userId: 1.0196082e+17
    items:
      $ref: '#/definitions/TwitterAccountSource'
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      type=collection; view=default'
    type: array
  TwitterAccountSources:
    description: TwitterAccountSources media type (default view)
    example:
      twitterAccountSources:
      - expeditionId: 8.564615e+18
        id: 5.663148e+18
        name: Aperiam perferendis veritatis dolore eius iusto.
        screenName: Amet est accusantium et et.
        teamId: 6.8032997e+18
        twitterAccountId: 4.5484952e+18
        userId: 1.0196082e+17
      - expeditionId: 8.564615e+18
        id: 5.663148e+18
        name: Aperiam perferendis veritatis dolore eius iusto.
        screenName: Amet est accusantium et et.
        teamId: 6.8032997e+18
        twitterAccountId: 4.5484952e+18
        userId: 1.0196082e+17
      - expeditionId: 8.564615e+18
        id: 5.663148e+18
        name: Aperiam perferendis veritatis dolore eius iusto.
        screenName: Amet est accusantium et et.
        teamId: 6.8032997e+18
        twitterAccountId: 4.5484952e+18
        userId: 1.0196082e+17
    properties:
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    required:
    - twitterAccountSources
    title: 'Mediatype identifier: application/vnd.app.twitter_account_intputs+json;
      view=default'
    type: object
  UpdateDeviceFirmwarePayload:
    example:
      deviceId: 5.372793e+18
      firmwareId: 5.9954176e+18
    properties:
      deviceId:
        example: 5.372793e+18
        format: int64
        type: integer
      firmwareId:
        example: 5.9954176e+18
        format: int64
        type: integer
    required:
    - deviceId
    - firmwareId
    title: UpdateDeviceFirmwarePayload
    type: object
  UpdateDeviceSourceLocationPayload:
    example:
      key: Quia sit necessitatibus possimus.
      latitude: 0.20912488
      longitude: 0.10396187
    properties:
      key:
        example: Quia sit necessitatibus possimus.
        type: string
      latitude:
        example: 0.20912488
        format: double
        type: number
      longitude:
        example: 0.10396187
        format: double
        type: number
    required:
    - key
    - longitude
    - latitude
    title: UpdateDeviceSourceLocationPayload
    type: object
  UpdateDeviceSourcePayload:
    example:
      key: Hic deserunt soluta similique ipsum.
      name: Ut veniam cumque repudiandae libero sapiente.
    properties:
      key:
        example: Hic deserunt soluta similique ipsum.
        type: string
      name:
        example: Ut veniam cumque repudiandae libero sapiente.
        type: string
    required:
    - name
    - key
    title: UpdateDeviceSourcePayload
    type: object
  UpdateDeviceSourceSchemaPayload:
    example:
      active: false
      jsonSchema: Soluta error expedita non.
      key: Rem et.
    properties:
      active:
        example: false
        type: boolean
      jsonSchema:
        example: Soluta error expedita non.
        type: string
      key:
        example: Rem et.
        type: string
    required:
    - key
    - active
    - jsonSchema
    title: UpdateDeviceSourceSchemaPayload
    type: object
  UpdateMemberPayload:
    example:
      role: Impedit aliquam illum aut.
    properties:
      role:
        example: Impedit aliquam illum aut.
        type: string
    required:
    - role
    title: UpdateMemberPayload
    type: object
  UpdateSourcePayload:
    example:
      active: false
      name: Deleniti dolorem sunt nesciunt dolor doloremque.
      teamId: 4.7738206e+18
      userId: 2.7514762e+18
    properties:
      active:
        example: false
        type: boolean
      name:
        example: Deleniti dolorem sunt nesciunt dolor doloremque.
        type: string
      teamId:
        example: 4.7738206e+18
        format: int64
        type: integer
      userId:
        example: 2.7514762e+18
        format: int64
        type: integer
    required:
    - name
    title: UpdateSourcePayload
    type: object
  UpdateUserPayload:
    example:
      bio: Nostrum id est expedita.
      email: gunner@murraywolff.info
      name: 615hd9i8qv
      username: vy4htjblkm
    properties:
      bio:
        example: Nostrum id est expedita.
        type: string
      email:
        example: gunner@murraywolff.info
        format: email
        type: string
      name:
        example: 615hd9i8qv
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: vy4htjblkm
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - bio
    title: UpdateUserPayload
    type: object
  User:
    description: User media type (default view)
    example:
      bio: In doloribus.
      email: wallace_hayes@schroeder.biz
      id: 7.088985e+18
      name: p8lepy9p8q
      username: 0lxt2bl3l7
    properties:
      bio:
        example: In doloribus.
        type: string
      email:
        example: wallace_hayes@schroeder.biz
        format: email
        type: string
      id:
        example: 7.088985e+18
        format: int64
        type: integer
      name:
        example: p8lepy9p8q
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: 0lxt2bl3l7
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - id
    - name
    - username
    - email
    - bio
    title: 'Mediatype identifier: application/vnd.app.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - bio: In doloribus.
      email: wallace_hayes@schroeder.biz
      id: 7.088985e+18
      name: p8lepy9p8q
      username: 0lxt2bl3l7
    - bio: In doloribus.
      email: wallace_hayes@schroeder.biz
      id: 7.088985e+18
      name: p8lepy9p8q
      username: 0lxt2bl3l7
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.app.user+json; type=collection;
      view=default'
    type: array
  Users:
    description: Users media type (default view)
    example:
      users:
      - bio: In doloribus.
        email: wallace_hayes@schroeder.biz
        id: 7.088985e+18
        name: p8lepy9p8q
        username: 0lxt2bl3l7
      - bio: In doloribus.
        email: wallace_hayes@schroeder.biz
        id: 7.088985e+18
        name: p8lepy9p8q
        username: 0lxt2bl3l7
      - bio: In doloribus.
        email: wallace_hayes@schroeder.biz
        id: 7.088985e+18
        name: p8lepy9p8q
        username: 0lxt2bl3l7
    properties:
      users:
        $ref: '#/definitions/UserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.app.users+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: api.fieldkit.org:8080
info:
  description: A one-click open platform for field researchers and explorers.
  title: Fieldkit API
  version: ""
paths:
  /devices/{deviceId}/{module}/firmware:
    get:
      description: Return firmware for a device
      operationId: Firmware#check
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: path
        name: module
        required: true
        type: string
      - in: header
        name: Fk-Compiled
        required: false
        type: string
      - in: header
        name: If-None-Match
        required: false
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          headers:
            ETag:
              type: string
        "304":
          description: Not Modified
        "404":
          description: Not Found
      schemes:
      - https
      summary: check Firmware
      tags:
      - Firmware
  /devices/{deviceId}/data:
    get:
      description: Get all device data
      operationId: DeviceData#all
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "302":
          description: Found
          headers:
            Location:
              type: string
        "404":
          description: Not Found
        "503": {}
      schemes:
      - https
      summary: all DeviceData
      tags:
      - DeviceData
  /devices/{deviceId}/files/data:
    get:
      description: List device files
      operationId: Files#list device data files
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: page
        required: false
        type: integer
      produces:
      - application/vnd.app.device.files+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceFiles'
      schemes:
      - https
      summary: list device data files Files
      tags:
      - Files
  /devices/{deviceId}/files/logs:
    get:
      description: List device files
      operationId: Files#list device log files
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: page
        required: false
        type: integer
      produces:
      - application/vnd.app.device.files+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceFiles'
      schemes:
      - https
      summary: list device log files Files
      tags:
      - Files
  /devices/{deviceId}/firmware:
    get:
      description: List device firmware
      operationId: Firmware#list device
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/vnd.app.firmwares+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Firmwares'
      schemes:
      - https
      summary: list device Firmware
      tags:
      - Firmware
  /devices/{deviceId}/logs:
    get:
      description: Get all device logs
      operationId: DeviceLogs#all
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "302":
          description: Found
          headers:
            Location:
              type: string
        "404":
          description: Not Found
        "503": {}
      schemes:
      - https
      summary: all DeviceLogs
      tags:
      - DeviceLogs
  /devices/firmware:
    patch:
      description: Update an Device firmware
      operationId: Firmware#update
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceFirmwarePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
      schemes:
      - https
      summary: update Firmware
      tags:
      - Firmware
  /expeditions/{expeditionId}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id expedition
      tags:
      - expedition
    patch:
      description: |-
        Update an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#update
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update expedition
      tags:
      - expedition
  /expeditions/{expeditionId}/picture:
    get:
      description: Get a expedition's picture
      operationId: picture#expedition get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: expedition get id picture
      tags:
      - picture
  /expeditions/{expeditionId}/source-tokens:
    get:
      description: |-
        Update an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id source_token
      tags:
      - source_token
    post:
      description: |-
        Add an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceToken'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add source_token
      tags:
      - source_token
  /expeditions/{expeditionId}/sources:
    get:
      description: |-
        List an expedition's sources

        Required security scopes:
          * `api:access`
      operationId: source#list expedition id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list expedition id source
      tags:
      - source
  /expeditions/{expeditionId}/sources/devices:
    post:
      description: |-
        Add a Device source

        Required security scopes:
          * `api:access`
      operationId: device#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
        "500": {}
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add device
      tags:
      - device
  /expeditions/{expeditionId}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id twitter
      tags:
      - twitter
    post:
      description: |-
        Add a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTwitterAccountSourcePayload'
      produces:
      - application/vnd.app.location+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add twitter
      tags:
      - twitter
  /expeditions/{expeditionId}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id team
      tags:
      - team
    post:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add team
      tags:
      - team
  /features:
    get:
      description: List features in a geographical area.
      operationId: GeoJSON#geographical query
      produces:
      - application/vnd.app.map_features+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MapFeatures'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: geographical query GeoJSON
      tags:
      - GeoJSON
  /features/{featureId}/geojson:
    get:
      description: List a feature's GeoJSON by id.
      operationId: GeoJSON#list by id
      parameters:
      - in: path
        name: featureId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged_geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by id GeoJSON
      tags:
      - GeoJSON
  /files/{fileId}:
    get:
      description: File info
      operationId: Files#file
      parameters:
      - in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/vnd.app.device.file+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceFile'
        "404":
          description: Not Found
      schemes:
      - https
      summary: file Files
      tags:
      - Files
  /files/{fileId}/data.csv:
    get:
      description: Export file
      operationId: Files#csv
      parameters:
      - default: true
        in: query
        name: dl
        required: false
        type: boolean
      - in: path
        name: fileId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: csv Files
      tags:
      - Files
  /files/{fileId}/data.fkpb:
    get:
      description: Export file
      operationId: Files#raw
      parameters:
      - default: true
        in: query
        name: dl
        required: false
        type: boolean
      - in: path
        name: fileId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: raw Files
      tags:
      - Files
  /files/{fileId}/data.json:
    get:
      description: Export file
      operationId: Files#json
      parameters:
      - default: true
        in: query
        name: dl
        required: false
        type: boolean
      - in: path
        name: fileId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: json Files
      tags:
      - Files
  /files/devices:
    get:
      description: List devices
      operationId: Files#list devices
      produces:
      - application/vnd.app.devices+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Devices'
        "404":
          description: Not Found
      schemes:
      - https
      summary: list devices Files
      tags:
      - Files
  /firmware:
    get:
      description: List firmware
      operationId: Firmware#list
      parameters:
      - in: query
        name: module
        required: false
        type: string
      - in: query
        name: profile
        required: false
        type: string
      produces:
      - application/vnd.app.firmwares+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Firmwares'
      schemes:
      - https
      summary: list Firmware
      tags:
      - Firmware
    patch:
      description: Add firmware
      operationId: Firmware#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddFirmwarePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: add Firmware
      tags:
      - Firmware
  /login:
    post:
      description: Creates a valid JWT given login credentials.
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: login user
      tags:
      - user
  /logout:
    post:
      description: |-
        Creates a valid JWT given login credentials.

        Required security scopes:
          * `api:access`
      operationId: user#logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: logout user
      tags:
      - user
  /projects:
    get:
      description: |-
        List projects

        Required security scopes:
          * `api:access`
      operationId: project#list
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project
      tags:
      - project
    post:
      description: |-
        Add a project

        Required security scopes:
          * `api:access`
      operationId: project#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add project
      tags:
      - project
  /projects/@/{project}:
    get:
      description: Get a project
      operationId: project#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get project
      tags:
      - project
  /projects/@/{project}/administrators:
    get:
      description: |-
        List an project's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list administrator
      tags:
      - administrator
  /projects/@/{project}/administrators/@/{username}:
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get administrator
      tags:
      - administrator
  /projects/@/{project}/expeditions:
    get:
      description: List a project's expeditions
      operationId: expedition#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}:
    get:
      description: Add an expedition
      operationId: expedition#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}/source-tokens:
    get:
      description: |-
        List an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list source_token
      tags:
      - source_token
  /projects/@/{project}/expeditions/@/{expedition}/sources:
    get:
      description: List a project's sources
      operationId: source#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list source
      tags:
      - source
  /projects/@/{project}/expeditions/@/{expedition}/sources/devices:
    get:
      description: |-
        List an expedition's Device sources

        Required security scopes:
          * `api:access`
      operationId: device#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.device_sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list device
      tags:
      - device
  /projects/@/{project}/expeditions/@/{expedition}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list twitter
      tags:
      - twitter
  /projects/@/{project}/expeditions/@/{expedition}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members:
    get:
      description: |-
        List an team's members

        Required security scopes:
          * `api:access`
      operationId: member#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list member
      tags:
      - member
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members/@/{username}:
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get member
      tags:
      - member
  /projects/{projectId}:
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id project
      tags:
      - project
    patch:
      description: |-
        Update a project

        Required security scopes:
          * `api:access`
      operationId: project#update
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update project
      tags:
      - project
  /projects/{projectId}/administrators:
    get:
      description: |-
        List an projects's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id administrator
      tags:
      - administrator
    post:
      description: |-
        Add an administrator to a project

        Required security scopes:
          * `api:access`
      operationId: administrator#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddAdministratorPayload'
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add administrator
      tags:
      - administrator
  /projects/{projectId}/administrators/{userId}:
    delete:
      description: |-
        Remove an administrator from a project

        Required security scopes:
          * `api:access`
      operationId: administrator#delete
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete administrator
      tags:
      - administrator
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id administrator
      tags:
      - administrator
  /projects/{projectId}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id expedition
      tags:
      - expedition
    post:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add expedition
      tags:
      - expedition
  /projects/{projectId}/picture:
    get:
      description: Get a project's picture
      operationId: picture#project get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: project get id picture
      tags:
      - picture
  /refresh:
    post:
      description: Creates a valid JWT given a refresh token.
      operationId: user#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshUserPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: refresh user
      tags:
      - user
  /source-tokens/{sourceTokenId}:
    delete:
      description: |-
        Delete an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#delete
      parameters:
      - in: path
        name: sourceTokenId
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete source_token
      tags:
      - source_token
  /sources/{sourceId}:
    get:
      description: List an source
      operationId: source#list id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list id source
      tags:
      - source
    patch:
      description: |-
        Update an source

        Required security scopes:
          * `api:access`
      operationId: source#update
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateSourcePayload'
      produces:
      - application/vnd.app.source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Source'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update source
      tags:
      - source
  /sources/{sourceId}/csv:
    get:
      description: Export data for an source.
      operationId: Export#list by source
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source Export
      tags:
      - Export
  /sources/{sourceId}/geojson:
    get:
      description: List an source's features in a GeoJSON.
      operationId: GeoJSON#list by source
      parameters:
      - in: query
        name: descending
        required: false
        type: boolean
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged_geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source GeoJSON
      tags:
      - GeoJSON
  /sources/{sourceId}/query:
    get:
      description: Query data for an source.
      operationId: Query#list by source
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.queried+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QueryData'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source Query
      tags:
      - Query
  /sources/{sourceId}/summary:
    get:
      description: List an source
      operationId: source#summary by id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceSummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: summary by id source
      tags:
      - source
  /sources/{sourceId}/temporal/{clusterId}/geometry:
    get:
      description: Retrieve temporal cluster geometry
      operationId: source#temporal cluster geometry by id
      parameters:
      - in: path
        name: clusterId
        required: true
        type: integer
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.cluster_geometry_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ClusterGeometrySummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: temporal cluster geometry by id source
      tags:
      - source
  /sources/devices/{id}:
    get:
      description: |-
        Get a Device source

        Required security scopes:
          * `api:access`
      operationId: device#get id
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id device
      tags:
      - device
    patch:
      description: |-
        Update an Device source

        Required security scopes:
          * `api:access`
      operationId: device#update
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update device
      tags:
      - device
  /sources/devices/{id}/location:
    patch:
      description: |-
        Update an Device source location

        Required security scopes:
          * `api:access`
      operationId: device#update location
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceLocationPayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update location device
      tags:
      - device
  /sources/devices/{id}/schemas:
    patch:
      description: |-
        Update an Device source schema

        Required security scopes:
          * `api:access`
      operationId: device#update schema
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceSchemaPayload'
      produces:
      - application/vnd.app.device_schemas+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSchemas'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update schema device
      tags:
      - device
  /sources/twitter-accounts/{sourceId}:
    get:
      description: |-
        Get a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#get id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id twitter
      tags:
      - twitter
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.yaml
  /tasks/check:
    get:
      description: Run periodic checks
      operationId: Tasks#check
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: check Tasks
      tags:
      - Tasks
  /tasks/five:
    get:
      description: Run periodic checks
      operationId: Tasks#five
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: five Tasks
      tags:
      - Tasks
  /tasks/streams/{id}/process:
    get:
      description: Process an uploaded stream
      operationId: Tasks#streams/process
      parameters:
      - in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
      schemes:
      - https
      summary: streams/process Tasks
      tags:
      - Tasks
  /teams/{teamId}:
    delete:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete team
      tags:
      - team
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id team
      tags:
      - team
    patch:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update team
      tags:
      - team
  /teams/{teamId}/members:
    get:
      description: |-
        List an teams's members

        Required security scopes:
          * `api:access`
      operationId: member#list id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id member
      tags:
      - member
    post:
      description: |-
        Add a member to a team

        Required security scopes:
          * `api:access`
      operationId: member#add
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add member
      tags:
      - member
  /teams/{teamId}/members/{userId}:
    delete:
      description: |-
        Remove a member from a team

        Required security scopes:
          * `api:access`
      operationId: member#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete member
      tags:
      - member
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id member
      tags:
      - member
    patch:
      description: |-
        Update a member

        Required security scopes:
          * `api:access`
      operationId: member#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update member
      tags:
      - member
  /twitter/callback:
    get:
      description: OAuth callback endpoint for Twitter
      operationId: twitter#callback
      parameters:
      - in: query
        name: oauthToken
        required: true
        type: string
      - in: query
        name: oauthVerifier
        required: false
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "400":
          description: Bad Request
      schemes:
      - https
      summary: callback twitter
      tags:
      - twitter
  /user:
    get:
      description: |-
        Get the authenticated user

        Required security scopes:
          * `api:access`
      operationId: user#get current
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user
      tags:
      - user
  /user/projects:
    get:
      description: |-
        List the authenticated user's projects

        Required security scopes:
          * `api:access`
      operationId: project#list current
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list current project
      tags:
      - project
  /users:
    get:
      description: |-
        List users

        Required security scopes:
          * `api:access`
      operationId: user#list
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
    post:
      description: Add a user
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: add user
      tags:
      - user
  /users/@/{username}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get
      parameters:
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get user
      tags:
      - user
  /users/{userId}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id user
      tags:
      - user
    patch:
      description: |-
        Update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /users/{userId}/picture:
    get:
      description: Get a user's picture
      operationId: picture#user get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user get id picture
      tags:
      - picture
  /validate:
    get:
      description: Validate a user's email address.
      operationId: user#validate
      parameters:
      - in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: validate user
      tags:
      - user
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  NotModified:
    description: Not Modified
  OK:
    description: OK
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
