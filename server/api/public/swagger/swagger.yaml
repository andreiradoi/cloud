consumes:
- application/json
definitions:
  AddAdministratorPayload:
    example:
      userId: 4.9489057e+18
    properties:
      userId:
        example: 4.9489057e+18
        format: int64
        type: integer
    required:
    - userId
    title: AddAdministratorPayload
    type: object
  AddDeviceSourcePayload:
    example:
      key: Aut sunt illo.
      name: Odit sed id vitae est.
    properties:
      key:
        example: Aut sunt illo.
        type: string
      name:
        example: Odit sed id vitae est.
        type: string
    required:
    - name
    - key
    title: AddDeviceSourcePayload
    type: object
  AddExpeditionPayload:
    example:
      description: Deserunt et.
      name: Eos animi quisquam amet non vero.
      slug: ftx2igp59z
    properties:
      description:
        example: Deserunt et.
        type: string
      name:
        example: Eos animi quisquam amet non vero.
        type: string
      slug:
        example: ftx2igp59z
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddExpeditionPayload
    type: object
  AddMemberPayload:
    example:
      role: Doloribus rerum quas deserunt a nam distinctio.
      userId: 3.3992988e+18
    properties:
      role:
        example: Doloribus rerum quas deserunt a nam distinctio.
        type: string
      userId:
        example: 3.3992988e+18
        format: int64
        type: integer
    required:
    - userId
    - role
    title: AddMemberPayload
    type: object
  AddProjectPayload:
    example:
      description: Necessitatibus voluptatum odit eum qui.
      name: Minima cupiditate ullam impedit.
      slug: d458dgtuoe
    properties:
      description:
        example: Necessitatibus voluptatum odit eum qui.
        type: string
      name:
        example: Minima cupiditate ullam impedit.
        type: string
      slug:
        example: d458dgtuoe
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddProjectPayload
    type: object
  AddTeamPayload:
    example:
      description: Dolorum voluptas omnis velit quod accusamus.
      name: lxt2bl3l7u
      slug: 48jsn3lezl
    properties:
      description:
        example: Dolorum voluptas omnis velit quod accusamus.
        type: string
      name:
        example: lxt2bl3l7u
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: 48jsn3lezl
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddTeamPayload
    type: object
  AddTwitterAccountSourcePayload:
    example:
      name: Unde iusto cumque ut ut.
    properties:
      name:
        example: Unde iusto cumque ut ut.
        type: string
    required:
    - name
    title: AddTwitterAccountSourcePayload
    type: object
  AddUserPayload:
    example:
      bio: Ea repudiandae veritatis delectus sit veritatis.
      email: consuelo@deckow.net
      invite_token: Et repellat iste illo nobis.
      name: j6fckqzcr9
      password: vjic5nzna5
      username: cbqhs3caow
    properties:
      bio:
        example: Ea repudiandae veritatis delectus sit veritatis.
        type: string
      email:
        example: consuelo@deckow.net
        format: email
        type: string
      invite_token:
        example: Et repellat iste illo nobis.
        type: string
      name:
        example: j6fckqzcr9
        maxLength: 256
        pattern: \S
        type: string
      password:
        example: vjic5nzna5
        minLength: 10
        type: string
      username:
        description: Username
        example: cbqhs3caow
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - password
    - bio
    - invite_token
    title: AddUserPayload
    type: object
  DeviceSchema:
    description: DeviceSchema media type (default view)
    example:
      active: false
      deviceId: 5.794513e+18
      jsonSchema: Porro quaerat in qui.
      key: Facilis quis blanditiis recusandae est.
      projectId: 4.0004988e+18
      schemaId: 4.6670376e+18
    properties:
      active:
        example: false
        type: boolean
      deviceId:
        example: 5.794513e+18
        format: int64
        type: integer
      jsonSchema:
        example: Porro quaerat in qui.
        type: string
      key:
        example: Facilis quis blanditiis recusandae est.
        type: string
      projectId:
        example: 4.0004988e+18
        format: int64
        type: integer
      schemaId:
        example: 4.6670376e+18
        format: int64
        type: integer
    required:
    - deviceId
    - schemaId
    - projectId
    - active
    - jsonSchema
    - key
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; view=default'
    type: object
  DeviceSchemaCollection:
    description: DeviceSchemaCollection is the media type for an array of DeviceSchema
      (default view)
    example:
    - active: false
      deviceId: 5.794513e+18
      jsonSchema: Porro quaerat in qui.
      key: Facilis quis blanditiis recusandae est.
      projectId: 4.0004988e+18
      schemaId: 4.6670376e+18
    items:
      $ref: '#/definitions/DeviceSchema'
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; type=collection;
      view=default'
    type: array
  DeviceSchemas:
    description: DeviceSchemas media type (default view)
    example:
      schemas:
      - active: false
        deviceId: 5.794513e+18
        jsonSchema: Porro quaerat in qui.
        key: Facilis quis blanditiis recusandae est.
        projectId: 4.0004988e+18
        schemaId: 4.6670376e+18
    properties:
      schemas:
        $ref: '#/definitions/DeviceSchemaCollection'
    required:
    - schemas
    title: 'Mediatype identifier: application/vnd.app.device_schemas+json; view=default'
    type: object
  DeviceSource:
    description: DeviceSource media type (default view)
    example:
      active: false
      expeditionId: 6.682842e+18
      id: 8.8054075e+18
      key: Cumque nihil.
      name: Dolorem vel laboriosam aut voluptatum praesentium error.
      teamId: 1.4511461e+16
      token: Non ut voluptatum ducimus perspiciatis quasi.
      userId: 8.3444345e+18
    properties:
      active:
        example: false
        type: boolean
      expeditionId:
        example: 6.682842e+18
        format: int64
        type: integer
      id:
        example: 8.8054075e+18
        format: int64
        type: integer
      key:
        example: Cumque nihil.
        type: string
      name:
        example: Dolorem vel laboriosam aut voluptatum praesentium error.
        type: string
      teamId:
        example: 1.4511461e+16
        format: int64
        type: integer
      token:
        example: Non ut voluptatum ducimus perspiciatis quasi.
        type: string
      userId:
        example: 8.3444345e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - active
    - name
    - token
    - key
    title: 'Mediatype identifier: application/vnd.app.device_source+json; view=default'
    type: object
  DeviceSourceCollection:
    description: DeviceSourceCollection is the media type for an array of DeviceSource
      (default view)
    example:
    - active: false
      expeditionId: 6.682842e+18
      id: 8.8054075e+18
      key: Cumque nihil.
      name: Dolorem vel laboriosam aut voluptatum praesentium error.
      teamId: 1.4511461e+16
      token: Non ut voluptatum ducimus perspiciatis quasi.
      userId: 8.3444345e+18
    items:
      $ref: '#/definitions/DeviceSource'
    title: 'Mediatype identifier: application/vnd.app.device_source+json; type=collection;
      view=default'
    type: array
  DeviceSources:
    description: DeviceSources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 6.682842e+18
        id: 8.8054075e+18
        key: Cumque nihil.
        name: Dolorem vel laboriosam aut voluptatum praesentium error.
        teamId: 1.4511461e+16
        token: Non ut voluptatum ducimus perspiciatis quasi.
        userId: 8.3444345e+18
      - active: false
        expeditionId: 6.682842e+18
        id: 8.8054075e+18
        key: Cumque nihil.
        name: Dolorem vel laboriosam aut voluptatum praesentium error.
        teamId: 1.4511461e+16
        token: Non ut voluptatum ducimus perspiciatis quasi.
        userId: 8.3444345e+18
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
    required:
    - deviceSources
    title: 'Mediatype identifier: application/vnd.app.device_sources+json; view=default'
    type: object
  Expedition:
    description: Expedition media type (default view)
    example:
      description: Explicabo unde.
      id: 7.5344515e+17
      name: Enim sapiente assumenda excepturi dolores dolores.
      slug: kk5y3b7yon
    properties:
      description:
        example: Explicabo unde.
        type: string
      id:
        example: 7.5344515e+17
        format: int64
        type: integer
      name:
        example: Enim sapiente assumenda excepturi dolores dolores.
        type: string
      slug:
        example: kk5y3b7yon
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.expedition+json; view=default'
    type: object
  ExpeditionCollection:
    description: ExpeditionCollection is the media type for an array of Expedition
      (default view)
    example:
    - description: Explicabo unde.
      id: 7.5344515e+17
      name: Enim sapiente assumenda excepturi dolores dolores.
      slug: kk5y3b7yon
    - description: Explicabo unde.
      id: 7.5344515e+17
      name: Enim sapiente assumenda excepturi dolores dolores.
      slug: kk5y3b7yon
    items:
      $ref: '#/definitions/Expedition'
    title: 'Mediatype identifier: application/vnd.app.expedition+json; type=collection;
      view=default'
    type: array
  Expeditions:
    description: Expeditions media type (default view)
    example:
      expeditions:
      - description: Explicabo unde.
        id: 7.5344515e+17
        name: Enim sapiente assumenda excepturi dolores dolores.
        slug: kk5y3b7yon
    properties:
      expeditions:
        $ref: '#/definitions/ExpeditionCollection'
    required:
    - expeditions
    title: 'Mediatype identifier: application/vnd.app.expeditions+json; view=default'
    type: object
  GeoJSON:
    description: GeoJSON media type (default view)
    example:
      features:
      - geometry:
          coordinates:
          - 0.15517601
          - 0.15517601
          type: Qui eum enim deleniti sint velit.
        properties:
          Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
        type: Qui et aperiam.
      - geometry:
          coordinates:
          - 0.15517601
          - 0.15517601
          type: Qui eum enim deleniti sint velit.
        properties:
          Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
        type: Qui et aperiam.
      - geometry:
          coordinates:
          - 0.15517601
          - 0.15517601
          type: Qui eum enim deleniti sint velit.
        properties:
          Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
        type: Qui et aperiam.
      type: Nulla dolore laboriosam soluta quia molestias.
    properties:
      features:
        $ref: '#/definitions/GeoJSONFeatureCollection'
      type:
        example: Nulla dolore laboriosam soluta quia molestias.
        type: string
    required:
    - type
    - features
    title: 'Mediatype identifier: application/vnd.app.geojson+json; view=default'
    type: object
  GeoJSONFeature:
    description: GeoJSONFeature media type (default view)
    example:
      geometry:
        coordinates:
        - 0.15517601
        - 0.15517601
        type: Qui eum enim deleniti sint velit.
      properties:
        Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
      type: Qui et aperiam.
    properties:
      geometry:
        $ref: '#/definitions/GeoJSONGeometry'
      properties:
        additionalProperties: true
        example:
          Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
        type: object
      type:
        example: Qui et aperiam.
        type: string
    required:
    - type
    - geometry
    - properties
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; view=default'
    type: object
  GeoJSONFeatureCollection:
    description: GeoJSONFeatureCollection is the media type for an array of GeoJSONFeature
      (default view)
    example:
    - geometry:
        coordinates:
        - 0.15517601
        - 0.15517601
        type: Qui eum enim deleniti sint velit.
      properties:
        Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
      type: Qui et aperiam.
    - geometry:
        coordinates:
        - 0.15517601
        - 0.15517601
        type: Qui eum enim deleniti sint velit.
      properties:
        Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
      type: Qui et aperiam.
    items:
      $ref: '#/definitions/GeoJSONFeature'
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; type=collection;
      view=default'
    type: array
  GeoJSONGeometry:
    description: GeoJSONGeometry media type (default view)
    example:
      coordinates:
      - 0.15517601
      - 0.15517601
      type: Qui eum enim deleniti sint velit.
    properties:
      coordinates:
        example:
        - 0.15517601
        - 0.15517601
        items:
          example: 0.15517601
          format: double
          type: number
        type: array
      type:
        example: Qui eum enim deleniti sint velit.
        type: string
    required:
    - type
    - coordinates
    title: 'Mediatype identifier: application/vnd.app.geojson-geometry+json; view=default'
    type: object
  GeometryClusterSummary:
    description: GeometryClusterSummary media type (default view)
    example:
      centroid:
      - 0.707477
      endTime: 1986-01-17T16:31:06Z
      geometry:
      - - 0.8317134
        - 0.8317134
      id: 7.24424e+17
      numberOfFeatures: 9.023151e+18
      radius: 0.90857327
      startTime: 1996-09-08T18:00:07Z
    properties:
      centroid:
        example:
        - 0.707477
        items:
          example: 0.707477
          format: double
          type: number
        type: array
      endTime:
        example: 1986-01-17T16:31:06Z
        format: date-time
        type: string
      geometry:
        example:
        - - 0.8317134
          - 0.8317134
        items:
          example:
          - 0.8317134
          - 0.8317134
          items:
            example: 0.8317134
            format: double
            type: number
          type: array
        type: array
      id:
        example: 7.24424e+17
        format: int64
        type: integer
      numberOfFeatures:
        example: 9.023151e+18
        format: int64
        type: integer
      radius:
        example: 0.90857327
        format: double
        type: number
      startTime:
        example: 1996-09-08T18:00:07Z
        format: date-time
        type: string
    required:
    - id
    - startTime
    - endTime
    - numberOfFeatures
    - centroid
    - radius
    - geometry
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      view=default'
    type: object
  GeometryClusterSummaryCollection:
    description: GeometryClusterSummaryCollection is the media type for an array of
      GeometryClusterSummary (default view)
    example:
    - centroid:
      - 0.707477
      endTime: 1986-01-17T16:31:06Z
      geometry:
      - - 0.8317134
        - 0.8317134
      id: 7.24424e+17
      numberOfFeatures: 9.023151e+18
      radius: 0.90857327
      startTime: 1996-09-08T18:00:07Z
    - centroid:
      - 0.707477
      endTime: 1986-01-17T16:31:06Z
      geometry:
      - - 0.8317134
        - 0.8317134
      id: 7.24424e+17
      numberOfFeatures: 9.023151e+18
      radius: 0.90857327
      startTime: 1996-09-08T18:00:07Z
    - centroid:
      - 0.707477
      endTime: 1986-01-17T16:31:06Z
      geometry:
      - - 0.8317134
        - 0.8317134
      id: 7.24424e+17
      numberOfFeatures: 9.023151e+18
      radius: 0.90857327
      startTime: 1996-09-08T18:00:07Z
    items:
      $ref: '#/definitions/GeometryClusterSummary'
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      type=collection; view=default'
    type: array
  Location:
    description: Location media type (default view)
    example:
      location: http://abbottleffler.info/cordia_friesen
    properties:
      location:
        example: http://abbottleffler.info/cordia_friesen
        format: uri
        type: string
    required:
    - location
    title: 'Mediatype identifier: application/vnd.app.location+json; view=default'
    type: object
  LoginPayload:
    example:
      password: svy8w3ljez
      username: mno95gdvcb
    properties:
      password:
        example: svy8w3ljez
        minLength: 10
        type: string
      username:
        description: Username
        example: mno95gdvcb
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - username
    - password
    title: LoginPayload
    type: object
  PagedGeoJSON:
    description: PagedGeoJSON media type (default view)
    example:
      geo:
        features:
        - geometry:
            coordinates:
            - 0.15517601
            - 0.15517601
            type: Qui eum enim deleniti sint velit.
          properties:
            Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
          type: Qui et aperiam.
        - geometry:
            coordinates:
            - 0.15517601
            - 0.15517601
            type: Qui eum enim deleniti sint velit.
          properties:
            Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
          type: Qui et aperiam.
        - geometry:
            coordinates:
            - 0.15517601
            - 0.15517601
            type: Qui eum enim deleniti sint velit.
          properties:
            Et quidem quis fugit.: 77e515c9-5f06-4367-877b-897174ebdab3
          type: Qui et aperiam.
        type: Nulla dolore laboriosam soluta quia molestias.
      hasMore: false
      nextUrl: Sed dolorum itaque.
      previousUrl: Sequi corrupti.
    properties:
      geo:
        $ref: '#/definitions/GeoJSON'
      hasMore:
        example: false
        type: boolean
      nextUrl:
        example: Sed dolorum itaque.
        type: string
      previousUrl:
        example: Sequi corrupti.
        type: string
    required:
    - nextUrl
    - geo
    - hasMore
    title: 'Mediatype identifier: application/vnd.app.paged-geojson+json; view=default'
    type: object
  Project:
    description: Project media type (default view)
    example:
      description: Quo eos fuga.
      id: 5.800496e+18
      name: Dignissimos voluptatem consequatur nihil.
      slug: 6hce00voeb
    properties:
      description:
        example: Quo eos fuga.
        type: string
      id:
        example: 5.800496e+18
        format: int64
        type: integer
      name:
        example: Dignissimos voluptatem consequatur nihil.
        type: string
      slug:
        example: 6hce00voeb
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.project+json; view=default'
    type: object
  ProjectAdministrator:
    description: ProjectAdministrator media type (default view)
    example:
      projectId: 1.2833427e+18
      userId: 6.2970576e+18
    properties:
      projectId:
        example: 1.2833427e+18
        format: int64
        type: integer
      userId:
        example: 6.2970576e+18
        format: int64
        type: integer
    required:
    - projectId
    - userId
    title: 'Mediatype identifier: application/vnd.app.administrator+json; view=default'
    type: object
  ProjectAdministratorCollection:
    description: ProjectAdministratorCollection is the media type for an array of
      ProjectAdministrator (default view)
    example:
    - projectId: 1.2833427e+18
      userId: 6.2970576e+18
    - projectId: 1.2833427e+18
      userId: 6.2970576e+18
    - projectId: 1.2833427e+18
      userId: 6.2970576e+18
    items:
      $ref: '#/definitions/ProjectAdministrator'
    title: 'Mediatype identifier: application/vnd.app.administrator+json; type=collection;
      view=default'
    type: array
  ProjectAdministrators:
    description: ProjectAdministrators media type (default view)
    example:
      administrators:
      - projectId: 1.2833427e+18
        userId: 6.2970576e+18
      - projectId: 1.2833427e+18
        userId: 6.2970576e+18
    properties:
      administrators:
        $ref: '#/definitions/ProjectAdministratorCollection'
    required:
    - administrators
    title: 'Mediatype identifier: application/vnd.app.administrators+json; view=default'
    type: object
  ProjectCollection:
    description: ProjectCollection is the media type for an array of Project (default
      view)
    example:
    - description: Quo eos fuga.
      id: 5.800496e+18
      name: Dignissimos voluptatem consequatur nihil.
      slug: 6hce00voeb
    - description: Quo eos fuga.
      id: 5.800496e+18
      name: Dignissimos voluptatem consequatur nihil.
      slug: 6hce00voeb
    items:
      $ref: '#/definitions/Project'
    title: 'Mediatype identifier: application/vnd.app.project+json; type=collection;
      view=default'
    type: array
  Projects:
    description: Projects media type (default view)
    example:
      projects:
      - description: Quo eos fuga.
        id: 5.800496e+18
        name: Dignissimos voluptatem consequatur nihil.
        slug: 6hce00voeb
      - description: Quo eos fuga.
        id: 5.800496e+18
        name: Dignissimos voluptatem consequatur nihil.
        slug: 6hce00voeb
      - description: Quo eos fuga.
        id: 5.800496e+18
        name: Dignissimos voluptatem consequatur nihil.
        slug: 6hce00voeb
    properties:
      projects:
        $ref: '#/definitions/ProjectCollection'
    required:
    - projects
    title: 'Mediatype identifier: application/vnd.app.projects+json; view=default'
    type: object
  QueryData:
    description: QueryData media type (default view)
    example:
      series:
      - name: Debitis eos iure ea dolorem et magnam.
        rows:
        - 3.9070423e+18
        - 3.9070423e+18
    properties:
      series:
        $ref: '#/definitions/SeriesDataCollection'
    required:
    - series
    title: 'Mediatype identifier: application/vnd.app.queried+json; view=default'
    type: object
  ReadingSummary:
    description: ReadingSummary media type (default view)
    example:
      name: Et hic sunt.
    properties:
      name:
        example: Et hic sunt.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; view=default'
    type: object
  ReadingSummaryCollection:
    description: ReadingSummaryCollection is the media type for an array of ReadingSummary
      (default view)
    example:
    - name: Et hic sunt.
    items:
      $ref: '#/definitions/ReadingSummary'
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; type=collection;
      view=default'
    type: array
  RefreshUserPayload:
    example:
      refresh_token: Doloremque eum quia et occaecati ut sint.
    properties:
      refresh_token:
        example: Doloremque eum quia et occaecati ut sint.
        type: string
    required:
    - refresh_token
    title: RefreshUserPayload
    type: object
  SeriesData:
    description: SeriesData media type (default view)
    example:
      name: Debitis eos iure ea dolorem et magnam.
      rows:
      - 3.9070423e+18
      - 3.9070423e+18
    properties:
      name:
        example: Debitis eos iure ea dolorem et magnam.
        type: string
      rows:
        example:
        - 3.9070423e+18
        - 3.9070423e+18
        items:
          example: 3.9070423e+18
        type: array
    required:
    - name
    - rows
    title: 'Mediatype identifier: application/vnd.app.series+json; view=default'
    type: object
  SeriesDataCollection:
    description: SeriesDataCollection is the media type for an array of SeriesData
      (default view)
    example:
    - name: Debitis eos iure ea dolorem et magnam.
      rows:
      - 3.9070423e+18
      - 3.9070423e+18
    items:
      $ref: '#/definitions/SeriesData'
    title: 'Mediatype identifier: application/vnd.app.series+json; type=collection;
      view=default'
    type: array
  Source:
    description: Source media type (default view)
    example:
      active: false
      expeditionId: 1.6790341e+18
      id: 4.9983243e+18
      name: Sunt iste expedita.
      teamId: 5.6952063e+18
      userId: 4.0889983e+18
    properties:
      active:
        example: false
        type: boolean
      expeditionId:
        example: 1.6790341e+18
        format: int64
        type: integer
      id:
        example: 4.9983243e+18
        format: int64
        type: integer
      name:
        example: Sunt iste expedita.
        type: string
      teamId:
        example: 5.6952063e+18
        format: int64
        type: integer
      userId:
        example: 4.0889983e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    title: 'Mediatype identifier: application/vnd.app.source+json; view=default'
    type: object
  SourceSummary:
    description: SourceSummary media type (default view)
    example:
      id: 6.1743026e+18
      name: Ut cum iusto iusto quia.
      readings:
      - name: Et hic sunt.
      spatial:
      - centroid:
        - 0.707477
        endTime: 1986-01-17T16:31:06Z
        geometry:
        - - 0.8317134
          - 0.8317134
        id: 7.24424e+17
        numberOfFeatures: 9.023151e+18
        radius: 0.90857327
        startTime: 1996-09-08T18:00:07Z
      temporal:
      - centroid:
        - 0.707477
        endTime: 1986-01-17T16:31:06Z
        geometry:
        - - 0.8317134
          - 0.8317134
        id: 7.24424e+17
        numberOfFeatures: 9.023151e+18
        radius: 0.90857327
        startTime: 1996-09-08T18:00:07Z
    properties:
      id:
        example: 6.1743026e+18
        format: int64
        type: integer
      name:
        example: Ut cum iusto iusto quia.
        type: string
      readings:
        $ref: '#/definitions/ReadingSummaryCollection'
      spatial:
        $ref: '#/definitions/GeometryClusterSummaryCollection'
      temporal:
        $ref: '#/definitions/GeometryClusterSummaryCollection'
    required:
    - id
    - name
    - temporal
    - spatial
    title: 'Mediatype identifier: application/vnd.app.source_summary+json; view=default'
    type: object
  SourceToken:
    description: SourceToken media type (default view)
    example:
      expeditionId: 7.5812465e+18
      id: 6.7189545e+18
      token: Quia id.
    properties:
      expeditionId:
        example: 7.5812465e+18
        format: int64
        type: integer
      id:
        example: 6.7189545e+18
        format: int64
        type: integer
      token:
        example: Quia id.
        type: string
    required:
    - id
    - token
    - expeditionId
    title: 'Mediatype identifier: application/vnd.app.source_token+json; view=default'
    type: object
  SourceTokenCollection:
    description: SourceTokenCollection is the media type for an array of SourceToken
      (default view)
    example:
    - expeditionId: 7.5812465e+18
      id: 6.7189545e+18
      token: Quia id.
    - expeditionId: 7.5812465e+18
      id: 6.7189545e+18
      token: Quia id.
    - expeditionId: 7.5812465e+18
      id: 6.7189545e+18
      token: Quia id.
    items:
      $ref: '#/definitions/SourceToken'
    title: 'Mediatype identifier: application/vnd.app.source_token+json; type=collection;
      view=default'
    type: array
  SourceTokens:
    description: SourceTokens media type (default view)
    example:
      sourceTokens:
      - expeditionId: 7.5812465e+18
        id: 6.7189545e+18
        token: Quia id.
    properties:
      sourceTokens:
        $ref: '#/definitions/SourceTokenCollection'
    required:
    - sourceTokens
    title: 'Mediatype identifier: application/vnd.app.source_tokens+json; view=default'
    type: object
  Sources:
    description: Sources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 6.682842e+18
        id: 8.8054075e+18
        key: Cumque nihil.
        name: Dolorem vel laboriosam aut voluptatum praesentium error.
        teamId: 1.4511461e+16
        token: Non ut voluptatum ducimus perspiciatis quasi.
        userId: 8.3444345e+18
      twitterAccountSources:
      - expeditionId: 3.1106553e+18
        id: 8.3874683e+18
        name: Voluptates ad consectetur occaecati.
        screenName: Omnis sint.
        teamId: 2.5665125e+18
        twitterAccountId: 1.24473865e+17
        userId: 8.349478e+18
      - expeditionId: 3.1106553e+18
        id: 8.3874683e+18
        name: Voluptates ad consectetur occaecati.
        screenName: Omnis sint.
        teamId: 2.5665125e+18
        twitterAccountId: 1.24473865e+17
        userId: 8.349478e+18
      - expeditionId: 3.1106553e+18
        id: 8.3874683e+18
        name: Voluptates ad consectetur occaecati.
        screenName: Omnis sint.
        teamId: 2.5665125e+18
        twitterAccountId: 1.24473865e+17
        userId: 8.349478e+18
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    title: 'Mediatype identifier: application/vnd.app.sources+json; view=default'
    type: object
  Team:
    description: Team media type (default view)
    example:
      description: Sint velit.
      id: 6.939366e+18
      name: 6cingd200j
      slug: uckup4mrpl
    properties:
      description:
        example: Sint velit.
        type: string
      id:
        example: 6.939366e+18
        format: int64
        type: integer
      name:
        example: 6cingd200j
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: uckup4mrpl
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.team+json; view=default'
    type: object
  TeamCollection:
    description: TeamCollection is the media type for an array of Team (default view)
    example:
    - description: Sint velit.
      id: 6.939366e+18
      name: 6cingd200j
      slug: uckup4mrpl
    items:
      $ref: '#/definitions/Team'
    title: 'Mediatype identifier: application/vnd.app.team+json; type=collection;
      view=default'
    type: array
  TeamMember:
    description: TeamMember media type (default view)
    example:
      role: Voluptatum dolores.
      teamId: 4.034531e+18
      userId: 1.9070617e+18
    properties:
      role:
        example: Voluptatum dolores.
        type: string
      teamId:
        example: 4.034531e+18
        format: int64
        type: integer
      userId:
        example: 1.9070617e+18
        format: int64
        type: integer
    required:
    - teamId
    - userId
    - role
    title: 'Mediatype identifier: application/vnd.app.member+json; view=default'
    type: object
  TeamMemberCollection:
    description: TeamMemberCollection is the media type for an array of TeamMember
      (default view)
    example:
    - role: Voluptatum dolores.
      teamId: 4.034531e+18
      userId: 1.9070617e+18
    - role: Voluptatum dolores.
      teamId: 4.034531e+18
      userId: 1.9070617e+18
    items:
      $ref: '#/definitions/TeamMember'
    title: 'Mediatype identifier: application/vnd.app.member+json; type=collection;
      view=default'
    type: array
  TeamMembers:
    description: TeamMembers media type (default view)
    example:
      members:
      - role: Voluptatum dolores.
        teamId: 4.034531e+18
        userId: 1.9070617e+18
    properties:
      members:
        $ref: '#/definitions/TeamMemberCollection'
    required:
    - members
    title: 'Mediatype identifier: application/vnd.app.members+json; view=default'
    type: object
  Teams:
    description: Teams media type (default view)
    example:
      teams:
      - description: Sint velit.
        id: 6.939366e+18
        name: 6cingd200j
        slug: uckup4mrpl
      - description: Sint velit.
        id: 6.939366e+18
        name: 6cingd200j
        slug: uckup4mrpl
    properties:
      teams:
        $ref: '#/definitions/TeamCollection'
    required:
    - teams
    title: 'Mediatype identifier: application/vnd.app.teams+json; view=default'
    type: object
  TwitterAccountSource:
    description: TwitterAccountSource media type (default view)
    example:
      expeditionId: 3.1106553e+18
      id: 8.3874683e+18
      name: Voluptates ad consectetur occaecati.
      screenName: Omnis sint.
      teamId: 2.5665125e+18
      twitterAccountId: 1.24473865e+17
      userId: 8.349478e+18
    properties:
      expeditionId:
        example: 3.1106553e+18
        format: int64
        type: integer
      id:
        example: 8.3874683e+18
        format: int64
        type: integer
      name:
        example: Voluptates ad consectetur occaecati.
        type: string
      screenName:
        example: Omnis sint.
        type: string
      teamId:
        example: 2.5665125e+18
        format: int64
        type: integer
      twitterAccountId:
        example: 1.24473865e+17
        format: int64
        type: integer
      userId:
        example: 8.349478e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    - twitterAccountId
    - screenName
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      view=default'
    type: object
  TwitterAccountSourceCollection:
    description: TwitterAccountSourceCollection is the media type for an array of
      TwitterAccountSource (default view)
    example:
    - expeditionId: 3.1106553e+18
      id: 8.3874683e+18
      name: Voluptates ad consectetur occaecati.
      screenName: Omnis sint.
      teamId: 2.5665125e+18
      twitterAccountId: 1.24473865e+17
      userId: 8.349478e+18
    - expeditionId: 3.1106553e+18
      id: 8.3874683e+18
      name: Voluptates ad consectetur occaecati.
      screenName: Omnis sint.
      teamId: 2.5665125e+18
      twitterAccountId: 1.24473865e+17
      userId: 8.349478e+18
    items:
      $ref: '#/definitions/TwitterAccountSource'
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      type=collection; view=default'
    type: array
  TwitterAccountSources:
    description: TwitterAccountSources media type (default view)
    example:
      twitterAccountSources:
      - expeditionId: 3.1106553e+18
        id: 8.3874683e+18
        name: Voluptates ad consectetur occaecati.
        screenName: Omnis sint.
        teamId: 2.5665125e+18
        twitterAccountId: 1.24473865e+17
        userId: 8.349478e+18
    properties:
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    required:
    - twitterAccountSources
    title: 'Mediatype identifier: application/vnd.app.twitter_account_intputs+json;
      view=default'
    type: object
  UpdateDeviceSourceLocationPayload:
    example:
      key: Sed voluptatem.
      latitude: 0.8844731
      longitude: 0.029010596
    properties:
      key:
        example: Sed voluptatem.
        type: string
      latitude:
        example: 0.8844731
        format: double
        type: number
      longitude:
        example: 0.029010596
        format: double
        type: number
    required:
    - key
    - longitude
    - latitude
    title: UpdateDeviceSourceLocationPayload
    type: object
  UpdateDeviceSourcePayload:
    example:
      key: Odit necessitatibus non veritatis velit unde reiciendis.
      name: Ut est tempora.
    properties:
      key:
        example: Odit necessitatibus non veritatis velit unde reiciendis.
        type: string
      name:
        example: Ut est tempora.
        type: string
    required:
    - name
    - key
    title: UpdateDeviceSourcePayload
    type: object
  UpdateDeviceSourceSchemaPayload:
    example:
      active: true
      jsonSchema: Assumenda ut minima.
      key: Voluptates dicta consectetur.
    properties:
      active:
        example: true
        type: boolean
      jsonSchema:
        example: Assumenda ut minima.
        type: string
      key:
        example: Voluptates dicta consectetur.
        type: string
    required:
    - key
    - active
    - jsonSchema
    title: UpdateDeviceSourceSchemaPayload
    type: object
  UpdateMemberPayload:
    example:
      role: Modi quis occaecati iure repudiandae.
    properties:
      role:
        example: Modi quis occaecati iure repudiandae.
        type: string
    required:
    - role
    title: UpdateMemberPayload
    type: object
  UpdateSourcePayload:
    example:
      active: false
      name: Dignissimos mollitia quaerat.
      teamId: 4.407699e+18
      userId: 4.655708e+18
    properties:
      active:
        example: false
        type: boolean
      name:
        example: Dignissimos mollitia quaerat.
        type: string
      teamId:
        example: 4.407699e+18
        format: int64
        type: integer
      userId:
        example: 4.655708e+18
        format: int64
        type: integer
    required:
    - name
    title: UpdateSourcePayload
    type: object
  UpdateUserPayload:
    example:
      bio: Reiciendis doloremque autem necessitatibus doloribus et labore.
      email: mara_weissnat@collier.name
      name: ahvhqxc40i
      username: p6g6qg0z6y
    properties:
      bio:
        example: Reiciendis doloremque autem necessitatibus doloribus et labore.
        type: string
      email:
        example: mara_weissnat@collier.name
        format: email
        type: string
      name:
        example: ahvhqxc40i
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: p6g6qg0z6y
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - bio
    title: UpdateUserPayload
    type: object
  User:
    description: User media type (default view)
    example:
      bio: Doloribus perferendis minus doloremque aut dolore sed.
      email: cristal_block@pfeffer.biz
      id: 9.117392e+18
      name: oe7n4jt477
      username: ketl8qkueb
    properties:
      bio:
        example: Doloribus perferendis minus doloremque aut dolore sed.
        type: string
      email:
        example: cristal_block@pfeffer.biz
        format: email
        type: string
      id:
        example: 9.117392e+18
        format: int64
        type: integer
      name:
        example: oe7n4jt477
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: ketl8qkueb
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - id
    - name
    - username
    - email
    - bio
    title: 'Mediatype identifier: application/vnd.app.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - bio: Doloribus perferendis minus doloremque aut dolore sed.
      email: cristal_block@pfeffer.biz
      id: 9.117392e+18
      name: oe7n4jt477
      username: ketl8qkueb
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.app.user+json; type=collection;
      view=default'
    type: array
  Users:
    description: Users media type (default view)
    example:
      users:
      - bio: Doloribus perferendis minus doloremque aut dolore sed.
        email: cristal_block@pfeffer.biz
        id: 9.117392e+18
        name: oe7n4jt477
        username: ketl8qkueb
      - bio: Doloribus perferendis minus doloremque aut dolore sed.
        email: cristal_block@pfeffer.biz
        id: 9.117392e+18
        name: oe7n4jt477
        username: ketl8qkueb
    properties:
      users:
        $ref: '#/definitions/UserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.app.users+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: api.fieldkit.org:8080
info:
  description: A one-click open platform for field researchers and explorers.
  title: Fieldkit API
  version: ""
paths:
  /expeditions/{expeditionId}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id expedition
      tags:
      - expedition
    patch:
      description: |-
        Update an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#update
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update expedition
      tags:
      - expedition
  /expeditions/{expeditionId}/picture:
    get:
      description: Get a expedition's picture
      operationId: picture#expedition get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: expedition get id picture
      tags:
      - picture
  /expeditions/{expeditionId}/source-tokens:
    get:
      description: |-
        Update an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id source_token
      tags:
      - source_token
    post:
      description: |-
        Add an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceToken'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add source_token
      tags:
      - source_token
  /expeditions/{expeditionId}/sources:
    get:
      description: |-
        List an expedition's sources

        Required security scopes:
          * `api:access`
      operationId: source#list expedition id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list expedition id source
      tags:
      - source
  /expeditions/{expeditionId}/sources/devices:
    post:
      description: |-
        Add a Device source

        Required security scopes:
          * `api:access`
      operationId: device#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add device
      tags:
      - device
  /expeditions/{expeditionId}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id twitter
      tags:
      - twitter
    post:
      description: |-
        Add a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTwitterAccountSourcePayload'
      produces:
      - application/vnd.app.location+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add twitter
      tags:
      - twitter
  /expeditions/{expeditionId}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id team
      tags:
      - team
    post:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add team
      tags:
      - team
  /features/{featureId}/geojson:
    get:
      description: List a feature's GeoJSON by id.
      operationId: GeoJSON#list by id
      parameters:
      - in: path
        name: featureId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged-geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by id GeoJSON
      tags:
      - GeoJSON
  /login:
    post:
      description: Creates a valid JWT given login credentials.
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: login user
      tags:
      - user
  /logout:
    post:
      description: |-
        Creates a valid JWT given login credentials.

        Required security scopes:
          * `api:access`
      operationId: user#logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: logout user
      tags:
      - user
  /projects:
    get:
      description: |-
        List projects

        Required security scopes:
          * `api:access`
      operationId: project#list
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project
      tags:
      - project
    post:
      description: |-
        Add a project

        Required security scopes:
          * `api:access`
      operationId: project#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add project
      tags:
      - project
  /projects/@/{project}:
    get:
      description: Get a project
      operationId: project#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get project
      tags:
      - project
  /projects/@/{project}/administrators:
    get:
      description: |-
        List an project's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list administrator
      tags:
      - administrator
  /projects/@/{project}/administrators/@/{username}:
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get administrator
      tags:
      - administrator
  /projects/@/{project}/expeditions:
    get:
      description: List a project's expeditions
      operationId: expedition#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}:
    get:
      description: Add an expedition
      operationId: expedition#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}/geojson:
    get:
      description: List a expedition's features in a GeoJSON.
      operationId: GeoJSON#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.paged-geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list GeoJSON
      tags:
      - GeoJSON
  /projects/@/{project}/expeditions/@/{expedition}/source-tokens:
    get:
      description: |-
        List an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list source_token
      tags:
      - source_token
  /projects/@/{project}/expeditions/@/{expedition}/sources:
    get:
      description: List a project's sources
      operationId: source#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list source
      tags:
      - source
  /projects/@/{project}/expeditions/@/{expedition}/sources/devices:
    get:
      description: |-
        List an expedition's Device sources

        Required security scopes:
          * `api:access`
      operationId: device#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.device_sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list device
      tags:
      - device
  /projects/@/{project}/expeditions/@/{expedition}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list twitter
      tags:
      - twitter
  /projects/@/{project}/expeditions/@/{expedition}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members:
    get:
      description: |-
        List an team's members

        Required security scopes:
          * `api:access`
      operationId: member#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list member
      tags:
      - member
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members/@/{username}:
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get member
      tags:
      - member
  /projects/{projectId}:
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id project
      tags:
      - project
    patch:
      description: |-
        Update a project

        Required security scopes:
          * `api:access`
      operationId: project#update
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update project
      tags:
      - project
  /projects/{projectId}/administrators:
    get:
      description: |-
        List an projects's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id administrator
      tags:
      - administrator
    post:
      description: |-
        Add an administrator to a project

        Required security scopes:
          * `api:access`
      operationId: administrator#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddAdministratorPayload'
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add administrator
      tags:
      - administrator
  /projects/{projectId}/administrators/{userId}:
    delete:
      description: |-
        Remove an administrator from a project

        Required security scopes:
          * `api:access`
      operationId: administrator#delete
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete administrator
      tags:
      - administrator
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id administrator
      tags:
      - administrator
  /projects/{projectId}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id expedition
      tags:
      - expedition
    post:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add expedition
      tags:
      - expedition
  /projects/{projectId}/picture:
    get:
      description: Get a project's picture
      operationId: picture#project get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: project get id picture
      tags:
      - picture
  /refresh:
    post:
      description: Creates a valid JWT given a refresh token.
      operationId: user#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshUserPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: refresh user
      tags:
      - user
  /source-tokens/{sourceTokenId}:
    delete:
      description: |-
        Delete an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#delete
      parameters:
      - in: path
        name: sourceTokenId
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete source_token
      tags:
      - source_token
  /sources/{sourceId}:
    get:
      description: List an source
      operationId: source#list id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list id source
      tags:
      - source
    patch:
      description: |-
        Update an source

        Required security scopes:
          * `api:access`
      operationId: source#update
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateSourcePayload'
      produces:
      - application/vnd.app.source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Source'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update source
      tags:
      - source
  /sources/{sourceId}/csv:
    get:
      description: Export data for an source.
      operationId: Export#list by source
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source Export
      tags:
      - Export
  /sources/{sourceId}/geojson:
    get:
      description: List an source's features in a GeoJSON.
      operationId: GeoJSON#list by source
      parameters:
      - in: query
        name: descending
        required: false
        type: boolean
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged-geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source GeoJSON
      tags:
      - GeoJSON
  /sources/{sourceId}/query:
    get:
      description: Query data for an source.
      operationId: Query#list by source
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.queried+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QueryData'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source Query
      tags:
      - Query
  /sources/{sourceId}/summary:
    get:
      description: List an source
      operationId: source#summary by id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceSummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: summary by id source
      tags:
      - source
  /sources/devices/{id}:
    get:
      description: |-
        Get a Device source

        Required security scopes:
          * `api:access`
      operationId: device#get id
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id device
      tags:
      - device
    patch:
      description: |-
        Update an Device source

        Required security scopes:
          * `api:access`
      operationId: device#update
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update device
      tags:
      - device
  /sources/devices/{id}/location:
    patch:
      description: |-
        Update an Device source location

        Required security scopes:
          * `api:access`
      operationId: device#update location
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceLocationPayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update location device
      tags:
      - device
  /sources/devices/{id}/schemas:
    patch:
      description: |-
        Update an Device source schema

        Required security scopes:
          * `api:access`
      operationId: device#update schema
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceSchemaPayload'
      produces:
      - application/vnd.app.device_schemas+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSchemas'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update schema device
      tags:
      - device
  /sources/twitter-accounts/{sourceId}:
    get:
      description: |-
        Get a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#get id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id twitter
      tags:
      - twitter
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.yaml
  /teams/{teamId}:
    delete:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete team
      tags:
      - team
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id team
      tags:
      - team
    patch:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update team
      tags:
      - team
  /teams/{teamId}/members:
    get:
      description: |-
        List an teams's members

        Required security scopes:
          * `api:access`
      operationId: member#list id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id member
      tags:
      - member
    post:
      description: |-
        Add a member to a team

        Required security scopes:
          * `api:access`
      operationId: member#add
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add member
      tags:
      - member
  /teams/{teamId}/members/{userId}:
    delete:
      description: |-
        Remove a member from a team

        Required security scopes:
          * `api:access`
      operationId: member#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete member
      tags:
      - member
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id member
      tags:
      - member
    patch:
      description: |-
        Update a member

        Required security scopes:
          * `api:access`
      operationId: member#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update member
      tags:
      - member
  /twitter/callback:
    get:
      description: OAuth callback endpoint for Twitter
      operationId: twitter#callback
      parameters:
      - in: query
        name: oauthToken
        required: true
        type: string
      - in: query
        name: oauthVerifier
        required: false
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "400":
          description: Bad Request
      schemes:
      - https
      summary: callback twitter
      tags:
      - twitter
  /user:
    get:
      description: |-
        Get the authenticated user

        Required security scopes:
          * `api:access`
      operationId: user#get current
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user
      tags:
      - user
  /user/projects:
    get:
      description: |-
        List the authenticated user's projects

        Required security scopes:
          * `api:access`
      operationId: project#list current
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list current project
      tags:
      - project
  /users:
    get:
      description: |-
        List users

        Required security scopes:
          * `api:access`
      operationId: user#list
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
    post:
      description: Add a user
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: add user
      tags:
      - user
  /users/@/{username}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get
      parameters:
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get user
      tags:
      - user
  /users/{userId}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id user
      tags:
      - user
    patch:
      description: |-
        Update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /users/{userId}/picture:
    get:
      description: Get a user's picture
      operationId: picture#user get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user get id picture
      tags:
      - picture
  /validate:
    get:
      description: Validate a user's email address.
      operationId: user#validate
      parameters:
      - in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: validate user
      tags:
      - user
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  NoContent:
    description: No Content
  OK:
    description: OK
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
