consumes:
- application/json
definitions:
  AddAdministratorPayload:
    example:
      user_id: 4.1582373e+18
    properties:
      user_id:
        example: 4.1582373e+18
        format: int64
        type: integer
    required:
    - user_id
    title: AddAdministratorPayload
    type: object
  AddDeviceInputPayload:
    example:
      key: Nisi odio vel.
      name: Laboriosam facere et quo.
    properties:
      key:
        example: Nisi odio vel.
        type: string
      name:
        example: Laboriosam facere et quo.
        type: string
    required:
    - name
    - key
    title: AddDeviceInputPayload
    type: object
  AddExpeditionPayload:
    example:
      description: Molestiae distinctio.
      name: Consequatur numquam repellat accusamus ipsa rerum et.
      slug: 6z6j4q26y9
    properties:
      description:
        example: Molestiae distinctio.
        type: string
      name:
        example: Consequatur numquam repellat accusamus ipsa rerum et.
        type: string
      slug:
        example: 6z6j4q26y9
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddExpeditionPayload
    type: object
  AddMemberPayload:
    example:
      role: Eos maxime consequatur.
      user_id: 5.663148e+18
    properties:
      role:
        example: Eos maxime consequatur.
        type: string
      user_id:
        example: 5.663148e+18
        format: int64
        type: integer
    required:
    - user_id
    - role
    title: AddMemberPayload
    type: object
  AddProjectPayload:
    example:
      description: Amet est accusantium et et.
      name: Et est soluta et aut.
      slug: 7ambiiuahx
    properties:
      description:
        example: Amet est accusantium et et.
        type: string
      name:
        example: Et est soluta et aut.
        type: string
      slug:
        example: 7ambiiuahx
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddProjectPayload
    type: object
  AddTeamPayload:
    example:
      description: Veritatis velit.
      name: rjw265h606
      slug: rrbwtu6d71
    properties:
      description:
        example: Veritatis velit.
        type: string
      name:
        example: rjw265h606
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: rrbwtu6d71
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddTeamPayload
    type: object
  AddTwitterAccountInputPayload:
    example:
      name: Et eos animi.
    properties:
      name:
        example: Et eos animi.
        type: string
    required:
    - name
    title: AddTwitterAccountInputPayload
    type: object
  AddUserPayload:
    example:
      bio: Amet non vero ut.
      email: jaden@hayes.com
      invite_token: Aliquam rerum esse.
      name: p8lepy9p8q
      password: 0lxt2bl3l7
      username: q48jsn3lez
    properties:
      bio:
        example: Amet non vero ut.
        type: string
      email:
        example: jaden@hayes.com
        format: email
        type: string
      invite_token:
        example: Aliquam rerum esse.
        type: string
      name:
        example: p8lepy9p8q
        maxLength: 256
        pattern: \S
        type: string
      password:
        example: 0lxt2bl3l7
        minLength: 10
        type: string
      username:
        description: Username
        example: q48jsn3lez
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - password
    - bio
    - invite_token
    title: AddUserPayload
    type: object
  DeviceInput:
    description: DeviceInput media type (default view)
    example:
      active: false
      expedition_id: 5.794513e+18
      id: 8.930515e+18
      key: Quaerat in qui.
      name: Facilis quis blanditiis recusandae est.
      team_id: 4.0004988e+18
      token: Vel est.
      user_id: 7.8603976e+18
    properties:
      active:
        example: false
        type: boolean
      expedition_id:
        example: 5.794513e+18
        format: int64
        type: integer
      id:
        example: 8.930515e+18
        format: int64
        type: integer
      key:
        example: Quaerat in qui.
        type: string
      name:
        example: Facilis quis blanditiis recusandae est.
        type: string
      team_id:
        example: 4.0004988e+18
        format: int64
        type: integer
      token:
        example: Vel est.
        type: string
      user_id:
        example: 7.8603976e+18
        format: int64
        type: integer
    required:
    - id
    - expedition_id
    - active
    - name
    - token
    - key
    title: 'Mediatype identifier: application/vnd.app.device_input+json; view=default'
    type: object
  DeviceInputCollection:
    description: DeviceInputCollection is the media type for an array of DeviceInput
      (default view)
    example:
    - active: false
      expedition_id: 5.794513e+18
      id: 8.930515e+18
      key: Quaerat in qui.
      name: Facilis quis blanditiis recusandae est.
      team_id: 4.0004988e+18
      token: Vel est.
      user_id: 7.8603976e+18
    - active: false
      expedition_id: 5.794513e+18
      id: 8.930515e+18
      key: Quaerat in qui.
      name: Facilis quis blanditiis recusandae est.
      team_id: 4.0004988e+18
      token: Vel est.
      user_id: 7.8603976e+18
    - active: false
      expedition_id: 5.794513e+18
      id: 8.930515e+18
      key: Quaerat in qui.
      name: Facilis quis blanditiis recusandae est.
      team_id: 4.0004988e+18
      token: Vel est.
      user_id: 7.8603976e+18
    items:
      $ref: '#/definitions/DeviceInput'
    title: 'Mediatype identifier: application/vnd.app.device_input+json; type=collection;
      view=default'
    type: array
  DeviceInputs:
    description: DeviceInputs media type (default view)
    example:
      device_inputs:
      - active: false
        expedition_id: 5.794513e+18
        id: 8.930515e+18
        key: Quaerat in qui.
        name: Facilis quis blanditiis recusandae est.
        team_id: 4.0004988e+18
        token: Vel est.
        user_id: 7.8603976e+18
      - active: false
        expedition_id: 5.794513e+18
        id: 8.930515e+18
        key: Quaerat in qui.
        name: Facilis quis blanditiis recusandae est.
        team_id: 4.0004988e+18
        token: Vel est.
        user_id: 7.8603976e+18
      - active: false
        expedition_id: 5.794513e+18
        id: 8.930515e+18
        key: Quaerat in qui.
        name: Facilis quis blanditiis recusandae est.
        team_id: 4.0004988e+18
        token: Vel est.
        user_id: 7.8603976e+18
    properties:
      device_inputs:
        $ref: '#/definitions/DeviceInputCollection'
    required:
    - device_inputs
    title: 'Mediatype identifier: application/vnd.app.device_inputs+json; view=default'
    type: object
  DeviceSchema:
    description: DeviceSchema media type (default view)
    example:
      active: true
      device_id: 6.682842e+18
      json_schema: Rerum cumque.
      key: Sit labore dolorem vel laboriosam aut.
      project_id: 2.4394763e+18
      schema_id: 2.2726114e+18
    properties:
      active:
        example: true
        type: boolean
      device_id:
        example: 6.682842e+18
        format: int64
        type: integer
      json_schema:
        example: Rerum cumque.
        type: string
      key:
        example: Sit labore dolorem vel laboriosam aut.
        type: string
      project_id:
        example: 2.4394763e+18
        format: int64
        type: integer
      schema_id:
        example: 2.2726114e+18
        format: int64
        type: integer
    required:
    - device_id
    - schema_id
    - project_id
    - active
    - json_schema
    - key
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; view=default'
    type: object
  DeviceSchemaCollection:
    description: DeviceSchemaCollection is the media type for an array of DeviceSchema
      (default view)
    example:
    - active: true
      device_id: 6.682842e+18
      json_schema: Rerum cumque.
      key: Sit labore dolorem vel laboriosam aut.
      project_id: 2.4394763e+18
      schema_id: 2.2726114e+18
    items:
      $ref: '#/definitions/DeviceSchema'
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; type=collection;
      view=default'
    type: array
  DeviceSchemas:
    description: DeviceSchemas media type (default view)
    example:
      schemas:
      - active: true
        device_id: 6.682842e+18
        json_schema: Rerum cumque.
        key: Sit labore dolorem vel laboriosam aut.
        project_id: 2.4394763e+18
        schema_id: 2.2726114e+18
    properties:
      schemas:
        $ref: '#/definitions/DeviceSchemaCollection'
    required:
    - schemas
    title: 'Mediatype identifier: application/vnd.app.device_schemas+json; view=default'
    type: object
  Document:
    description: Document media type (default view)
    example:
      data: 0.6451893
      id: Fugit non ut voluptatum ducimus perspiciatis.
      input_id: 2.1561012e+18
      location:
        coordinates:
        - 0.9047054
        - 0.9047054
        type: Point
      team_id: 4.1249876e+17
      timestamp: 6.684198e+18
      user_id: 5.521901e+17
    properties:
      data:
        example: 0.6451893
      id:
        example: Fugit non ut voluptatum ducimus perspiciatis.
        type: string
      input_id:
        example: 2.1561012e+18
        format: int64
        type: integer
      location:
        $ref: '#/definitions/Point'
      team_id:
        example: 4.1249876e+17
        format: int64
        type: integer
      timestamp:
        example: 6.684198e+18
        format: int64
        type: integer
      user_id:
        example: 5.521901e+17
        format: int64
        type: integer
    required:
    - id
    - input_id
    - timestamp
    - location
    - data
    title: 'Mediatype identifier: application/vnd.app.document+json; view=default'
    type: object
  DocumentCollection:
    description: DocumentCollection is the media type for an array of Document (default
      view)
    example:
    - data: 0.6451893
      id: Fugit non ut voluptatum ducimus perspiciatis.
      input_id: 2.1561012e+18
      location:
        coordinates:
        - 0.9047054
        - 0.9047054
        type: Point
      team_id: 4.1249876e+17
      timestamp: 6.684198e+18
      user_id: 5.521901e+17
    - data: 0.6451893
      id: Fugit non ut voluptatum ducimus perspiciatis.
      input_id: 2.1561012e+18
      location:
        coordinates:
        - 0.9047054
        - 0.9047054
        type: Point
      team_id: 4.1249876e+17
      timestamp: 6.684198e+18
      user_id: 5.521901e+17
    items:
      $ref: '#/definitions/Document'
    title: 'Mediatype identifier: application/vnd.app.document+json; type=collection;
      view=default'
    type: array
  Documents:
    description: Documents media type (default view)
    example:
      documents:
      - data: 0.6451893
        id: Fugit non ut voluptatum ducimus perspiciatis.
        input_id: 2.1561012e+18
        location:
          coordinates:
          - 0.9047054
          - 0.9047054
          type: Point
        team_id: 4.1249876e+17
        timestamp: 6.684198e+18
        user_id: 5.521901e+17
      - data: 0.6451893
        id: Fugit non ut voluptatum ducimus perspiciatis.
        input_id: 2.1561012e+18
        location:
          coordinates:
          - 0.9047054
          - 0.9047054
          type: Point
        team_id: 4.1249876e+17
        timestamp: 6.684198e+18
        user_id: 5.521901e+17
      - data: 0.6451893
        id: Fugit non ut voluptatum ducimus perspiciatis.
        input_id: 2.1561012e+18
        location:
          coordinates:
          - 0.9047054
          - 0.9047054
          type: Point
        team_id: 4.1249876e+17
        timestamp: 6.684198e+18
        user_id: 5.521901e+17
    properties:
      documents:
        $ref: '#/definitions/DocumentCollection'
    required:
    - documents
    title: 'Mediatype identifier: application/vnd.app.documents+json; view=default'
    type: object
  Expedition:
    description: Expedition media type (default view)
    example:
      description: Recusandae provident earum.
      id: 3.3996583e+18
      name: Sapiente assumenda excepturi dolores dolores et molestias.
      slug: kk5y3b7yon
    properties:
      description:
        example: Recusandae provident earum.
        type: string
      id:
        example: 3.3996583e+18
        format: int64
        type: integer
      name:
        example: Sapiente assumenda excepturi dolores dolores et molestias.
        type: string
      slug:
        example: kk5y3b7yon
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.expedition+json; view=default'
    type: object
  ExpeditionCollection:
    description: ExpeditionCollection is the media type for an array of Expedition
      (default view)
    example:
    - description: Recusandae provident earum.
      id: 3.3996583e+18
      name: Sapiente assumenda excepturi dolores dolores et molestias.
      slug: kk5y3b7yon
    - description: Recusandae provident earum.
      id: 3.3996583e+18
      name: Sapiente assumenda excepturi dolores dolores et molestias.
      slug: kk5y3b7yon
    - description: Recusandae provident earum.
      id: 3.3996583e+18
      name: Sapiente assumenda excepturi dolores dolores et molestias.
      slug: kk5y3b7yon
    items:
      $ref: '#/definitions/Expedition'
    title: 'Mediatype identifier: application/vnd.app.expedition+json; type=collection;
      view=default'
    type: array
  Expeditions:
    description: Expeditions media type (default view)
    example:
      expeditions:
      - description: Recusandae provident earum.
        id: 3.3996583e+18
        name: Sapiente assumenda excepturi dolores dolores et molestias.
        slug: kk5y3b7yon
      - description: Recusandae provident earum.
        id: 3.3996583e+18
        name: Sapiente assumenda excepturi dolores dolores et molestias.
        slug: kk5y3b7yon
    properties:
      expeditions:
        $ref: '#/definitions/ExpeditionCollection'
    required:
    - expeditions
    title: 'Mediatype identifier: application/vnd.app.expeditions+json; view=default'
    type: object
  Input:
    description: Input media type (default view)
    example:
      active: true
      expedition_id: 5.857079e+18
      id: 5.3071106e+18
      name: Expedita qui eum.
      team_id: 4.621577e+18
      user_id: 2.594328e+18
    properties:
      active:
        example: true
        type: boolean
      expedition_id:
        example: 5.857079e+18
        format: int64
        type: integer
      id:
        example: 5.3071106e+18
        format: int64
        type: integer
      name:
        example: Expedita qui eum.
        type: string
      team_id:
        example: 4.621577e+18
        format: int64
        type: integer
      user_id:
        example: 2.594328e+18
        format: int64
        type: integer
    required:
    - id
    - expedition_id
    - name
    title: 'Mediatype identifier: application/vnd.app.input+json; view=default'
    type: object
  InputToken:
    description: InputToken media type (default view)
    example:
      expedition_id: 5.113906e+18
      id: 6.1010993e+18
      token: Aut et quidem quis fugit commodi.
    properties:
      expedition_id:
        example: 5.113906e+18
        format: int64
        type: integer
      id:
        example: 6.1010993e+18
        format: int64
        type: integer
      token:
        example: Aut et quidem quis fugit commodi.
        type: string
    required:
    - id
    - token
    - expedition_id
    title: 'Mediatype identifier: application/vnd.app.input_token+json; view=default'
    type: object
  InputTokenCollection:
    description: InputTokenCollection is the media type for an array of InputToken
      (default view)
    example:
    - expedition_id: 5.113906e+18
      id: 6.1010993e+18
      token: Aut et quidem quis fugit commodi.
    items:
      $ref: '#/definitions/InputToken'
    title: 'Mediatype identifier: application/vnd.app.input_token+json; type=collection;
      view=default'
    type: array
  InputTokens:
    description: InputTokens media type (default view)
    example:
      input_tokens:
      - expedition_id: 5.113906e+18
        id: 6.1010993e+18
        token: Aut et quidem quis fugit commodi.
      - expedition_id: 5.113906e+18
        id: 6.1010993e+18
        token: Aut et quidem quis fugit commodi.
      - expedition_id: 5.113906e+18
        id: 6.1010993e+18
        token: Aut et quidem quis fugit commodi.
    properties:
      input_tokens:
        $ref: '#/definitions/InputTokenCollection'
    required:
    - input_tokens
    title: 'Mediatype identifier: application/vnd.app.input_tokens+json; view=default'
    type: object
  Inputs:
    description: Inputs media type (default view)
    example:
      device_inputs:
      - active: false
        expedition_id: 5.794513e+18
        id: 8.930515e+18
        key: Quaerat in qui.
        name: Facilis quis blanditiis recusandae est.
        team_id: 4.0004988e+18
        token: Vel est.
        user_id: 7.8603976e+18
      - active: false
        expedition_id: 5.794513e+18
        id: 8.930515e+18
        key: Quaerat in qui.
        name: Facilis quis blanditiis recusandae est.
        team_id: 4.0004988e+18
        token: Vel est.
        user_id: 7.8603976e+18
      - active: false
        expedition_id: 5.794513e+18
        id: 8.930515e+18
        key: Quaerat in qui.
        name: Facilis quis blanditiis recusandae est.
        team_id: 4.0004988e+18
        token: Vel est.
        user_id: 7.8603976e+18
      twitter_account_inputs:
      - expedition_id: 3.8114873e+18
        id: 5.536231e+18
        name: Laboriosam soluta quia.
        screen_name: Enim quam.
        team_id: 4.977542e+18
        twitter_account_id: 7.839764e+18
        user_id: 9.198433e+17
    properties:
      device_inputs:
        $ref: '#/definitions/DeviceInputCollection'
      twitter_account_inputs:
        $ref: '#/definitions/TwitterAccountInputCollection'
    title: 'Mediatype identifier: application/vnd.app.inputs+json; view=default'
    type: object
  Location:
    description: Location media type (default view)
    example:
      location: http://rutherford.com/loraine
    properties:
      location:
        example: http://rutherford.com/loraine
        format: uri
        type: string
    required:
    - location
    title: 'Mediatype identifier: application/vnd.app.location+json; view=default'
    type: object
  LoginPayload:
    example:
      password: nik2mv0074
      username: 47q76xcws9
    properties:
      password:
        example: nik2mv0074
        minLength: 10
        type: string
      username:
        description: Username
        example: 47q76xcws9
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - username
    - password
    title: LoginPayload
    type: object
  Point:
    description: Point media type (default view)
    example:
      coordinates:
      - 0.9047054
      - 0.9047054
      type: Point
    properties:
      coordinates:
        example:
        - 0.9047054
        - 0.9047054
        items:
          example: 0.9047054
          format: double
          type: number
        maxLength: 2
        minLength: 2
        type: array
      type:
        enum:
        - Point
        example: Point
        type: string
    required:
    - type
    - coordinates
    title: 'Mediatype identifier: application/vnd.app.point+json; view=default'
    type: object
  Project:
    description: Project media type (default view)
    example:
      description: Facere dignissimos.
      id: 3.9715237e+18
      name: Quam soluta.
      slug: i3n7ahu8r8
    properties:
      description:
        example: Facere dignissimos.
        type: string
      id:
        example: 3.9715237e+18
        format: int64
        type: integer
      name:
        example: Quam soluta.
        type: string
      slug:
        example: i3n7ahu8r8
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.project+json; view=default'
    type: object
  ProjectAdministrator:
    description: ProjectAdministrator media type (default view)
    example:
      project_id: 1.2833427e+18
      user_id: 6.2970576e+18
    properties:
      project_id:
        example: 1.2833427e+18
        format: int64
        type: integer
      user_id:
        example: 6.2970576e+18
        format: int64
        type: integer
    required:
    - project_id
    - user_id
    title: 'Mediatype identifier: application/vnd.app.administrator+json; view=default'
    type: object
  ProjectAdministratorCollection:
    description: ProjectAdministratorCollection is the media type for an array of
      ProjectAdministrator (default view)
    example:
    - project_id: 1.2833427e+18
      user_id: 6.2970576e+18
    - project_id: 1.2833427e+18
      user_id: 6.2970576e+18
    items:
      $ref: '#/definitions/ProjectAdministrator'
    title: 'Mediatype identifier: application/vnd.app.administrator+json; type=collection;
      view=default'
    type: array
  ProjectAdministrators:
    description: ProjectAdministrators media type (default view)
    example:
      administrators:
      - project_id: 1.2833427e+18
        user_id: 6.2970576e+18
      - project_id: 1.2833427e+18
        user_id: 6.2970576e+18
    properties:
      administrators:
        $ref: '#/definitions/ProjectAdministratorCollection'
    required:
    - administrators
    title: 'Mediatype identifier: application/vnd.app.administrators+json; view=default'
    type: object
  ProjectCollection:
    description: ProjectCollection is the media type for an array of Project (default
      view)
    example:
    - description: Facere dignissimos.
      id: 3.9715237e+18
      name: Quam soluta.
      slug: i3n7ahu8r8
    - description: Facere dignissimos.
      id: 3.9715237e+18
      name: Quam soluta.
      slug: i3n7ahu8r8
    items:
      $ref: '#/definitions/Project'
    title: 'Mediatype identifier: application/vnd.app.project+json; type=collection;
      view=default'
    type: array
  Projects:
    description: Projects media type (default view)
    example:
      projects:
      - description: Facere dignissimos.
        id: 3.9715237e+18
        name: Quam soluta.
        slug: i3n7ahu8r8
    properties:
      projects:
        $ref: '#/definitions/ProjectCollection'
    required:
    - projects
    title: 'Mediatype identifier: application/vnd.app.projects+json; view=default'
    type: object
  RefreshUserPayload:
    example:
      refresh_token: Omnis dolorum aut blanditiis.
    properties:
      refresh_token:
        example: Omnis dolorum aut blanditiis.
        type: string
    required:
    - refresh_token
    title: RefreshUserPayload
    type: object
  Team:
    description: Team media type (default view)
    example:
      description: Voluptas sed dolorum itaque qui sequi.
      id: 3.9228076e+18
      name: 0o5eo4ic2d
      slug: hce00voebz
    properties:
      description:
        example: Voluptas sed dolorum itaque qui sequi.
        type: string
      id:
        example: 3.9228076e+18
        format: int64
        type: integer
      name:
        example: 0o5eo4ic2d
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: hce00voebz
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.team+json; view=default'
    type: object
  TeamCollection:
    description: TeamCollection is the media type for an array of Team (default view)
    example:
    - description: Voluptas sed dolorum itaque qui sequi.
      id: 3.9228076e+18
      name: 0o5eo4ic2d
      slug: hce00voebz
    - description: Voluptas sed dolorum itaque qui sequi.
      id: 3.9228076e+18
      name: 0o5eo4ic2d
      slug: hce00voebz
    - description: Voluptas sed dolorum itaque qui sequi.
      id: 3.9228076e+18
      name: 0o5eo4ic2d
      slug: hce00voebz
    items:
      $ref: '#/definitions/Team'
    title: 'Mediatype identifier: application/vnd.app.team+json; type=collection;
      view=default'
    type: array
  TeamMember:
    description: TeamMember media type (default view)
    example:
      role: Dolores quo suscipit.
      team_id: 1.4053925e+18
      user_id: 2.8525463e+18
    properties:
      role:
        example: Dolores quo suscipit.
        type: string
      team_id:
        example: 1.4053925e+18
        format: int64
        type: integer
      user_id:
        example: 2.8525463e+18
        format: int64
        type: integer
    required:
    - team_id
    - user_id
    - role
    title: 'Mediatype identifier: application/vnd.app.member+json; view=default'
    type: object
  TeamMemberCollection:
    description: TeamMemberCollection is the media type for an array of TeamMember
      (default view)
    example:
    - role: Dolores quo suscipit.
      team_id: 1.4053925e+18
      user_id: 2.8525463e+18
    - role: Dolores quo suscipit.
      team_id: 1.4053925e+18
      user_id: 2.8525463e+18
    items:
      $ref: '#/definitions/TeamMember'
    title: 'Mediatype identifier: application/vnd.app.member+json; type=collection;
      view=default'
    type: array
  TeamMembers:
    description: TeamMembers media type (default view)
    example:
      members:
      - role: Dolores quo suscipit.
        team_id: 1.4053925e+18
        user_id: 2.8525463e+18
      - role: Dolores quo suscipit.
        team_id: 1.4053925e+18
        user_id: 2.8525463e+18
    properties:
      members:
        $ref: '#/definitions/TeamMemberCollection'
    required:
    - members
    title: 'Mediatype identifier: application/vnd.app.members+json; view=default'
    type: object
  Teams:
    description: Teams media type (default view)
    example:
      teams:
      - description: Voluptas sed dolorum itaque qui sequi.
        id: 3.9228076e+18
        name: 0o5eo4ic2d
        slug: hce00voebz
      - description: Voluptas sed dolorum itaque qui sequi.
        id: 3.9228076e+18
        name: 0o5eo4ic2d
        slug: hce00voebz
    properties:
      teams:
        $ref: '#/definitions/TeamCollection'
    required:
    - teams
    title: 'Mediatype identifier: application/vnd.app.teams+json; view=default'
    type: object
  TwitterAccountInput:
    description: TwitterAccountInput media type (default view)
    example:
      expedition_id: 3.8114873e+18
      id: 5.536231e+18
      name: Laboriosam soluta quia.
      screen_name: Enim quam.
      team_id: 4.977542e+18
      twitter_account_id: 7.839764e+18
      user_id: 9.198433e+17
    properties:
      expedition_id:
        example: 3.8114873e+18
        format: int64
        type: integer
      id:
        example: 5.536231e+18
        format: int64
        type: integer
      name:
        example: Laboriosam soluta quia.
        type: string
      screen_name:
        example: Enim quam.
        type: string
      team_id:
        example: 4.977542e+18
        format: int64
        type: integer
      twitter_account_id:
        example: 7.839764e+18
        format: int64
        type: integer
      user_id:
        example: 9.198433e+17
        format: int64
        type: integer
    required:
    - id
    - expedition_id
    - name
    - twitter_account_id
    - screen_name
    title: 'Mediatype identifier: application/vnd.app.twitter_account_input+json;
      view=default'
    type: object
  TwitterAccountInputCollection:
    description: TwitterAccountInputCollection is the media type for an array of TwitterAccountInput
      (default view)
    example:
    - expedition_id: 3.8114873e+18
      id: 5.536231e+18
      name: Laboriosam soluta quia.
      screen_name: Enim quam.
      team_id: 4.977542e+18
      twitter_account_id: 7.839764e+18
      user_id: 9.198433e+17
    - expedition_id: 3.8114873e+18
      id: 5.536231e+18
      name: Laboriosam soluta quia.
      screen_name: Enim quam.
      team_id: 4.977542e+18
      twitter_account_id: 7.839764e+18
      user_id: 9.198433e+17
    items:
      $ref: '#/definitions/TwitterAccountInput'
    title: 'Mediatype identifier: application/vnd.app.twitter_account_input+json;
      type=collection; view=default'
    type: array
  TwitterAccountInputs:
    description: TwitterAccountInputs media type (default view)
    example:
      twitter_account_inputs:
      - expedition_id: 3.8114873e+18
        id: 5.536231e+18
        name: Laboriosam soluta quia.
        screen_name: Enim quam.
        team_id: 4.977542e+18
        twitter_account_id: 7.839764e+18
        user_id: 9.198433e+17
      - expedition_id: 3.8114873e+18
        id: 5.536231e+18
        name: Laboriosam soluta quia.
        screen_name: Enim quam.
        team_id: 4.977542e+18
        twitter_account_id: 7.839764e+18
        user_id: 9.198433e+17
    properties:
      twitter_account_inputs:
        $ref: '#/definitions/TwitterAccountInputCollection'
    required:
    - twitter_account_inputs
    title: 'Mediatype identifier: application/vnd.app.twitter_account_intputs+json;
      view=default'
    type: object
  UpdateDeviceInputPayload:
    example:
      key: Aut vel quisquam voluptatem doloribus perferendis.
      name: Doloremque aut dolore sed quisquam pariatur molestiae.
    properties:
      key:
        example: Aut vel quisquam voluptatem doloribus perferendis.
        type: string
      name:
        example: Doloremque aut dolore sed quisquam pariatur molestiae.
        type: string
    required:
    - name
    - key
    title: UpdateDeviceInputPayload
    type: object
  UpdateDeviceInputSchemaPayload:
    example:
      active: false
      json_schema: Dignissimos consectetur quo.
      key: Voluptas voluptate inventore ratione nisi ea sed.
    properties:
      active:
        example: false
        type: boolean
      json_schema:
        example: Dignissimos consectetur quo.
        type: string
      key:
        example: Voluptas voluptate inventore ratione nisi ea sed.
        type: string
    required:
    - key
    - active
    - json_schema
    title: UpdateDeviceInputSchemaPayload
    type: object
  UpdateInputPayload:
    example:
      active: true
      name: Ea hic aliquid animi sit sint doloremque.
      team_id: 3.0097066e+18
      user_id: 7.3129953e+18
    properties:
      active:
        example: true
        type: boolean
      name:
        example: Ea hic aliquid animi sit sint doloremque.
        type: string
      team_id:
        example: 3.0097066e+18
        format: int64
        type: integer
      user_id:
        example: 7.3129953e+18
        format: int64
        type: integer
    required:
    - name
    title: UpdateInputPayload
    type: object
  UpdateMemberPayload:
    example:
      role: Aperiam perferendis veritatis dolore eius iusto.
    properties:
      role:
        example: Aperiam perferendis veritatis dolore eius iusto.
        type: string
    required:
    - role
    title: UpdateMemberPayload
    type: object
  UpdateUserPayload:
    example:
      bio: Nam est est iure hic.
      email: antwan@greenholt.biz
      name: ic5nzna5rc
      username: qhs3caow4s
    properties:
      bio:
        example: Nam est est iure hic.
        type: string
      email:
        example: antwan@greenholt.biz
        format: email
        type: string
      name:
        example: ic5nzna5rc
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: qhs3caow4s
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - bio
    title: UpdateUserPayload
    type: object
  User:
    description: User media type (default view)
    example:
      bio: Adipisci aut ducimus autem et.
      email: omer.little@herman.info
      id: 2.7635922e+18
      name: ingd200jau
      username: kup4mrplur
    properties:
      bio:
        example: Adipisci aut ducimus autem et.
        type: string
      email:
        example: omer.little@herman.info
        format: email
        type: string
      id:
        example: 2.7635922e+18
        format: int64
        type: integer
      name:
        example: ingd200jau
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: kup4mrplur
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - id
    - name
    - username
    - email
    - bio
    title: 'Mediatype identifier: application/vnd.app.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - bio: Adipisci aut ducimus autem et.
      email: omer.little@herman.info
      id: 2.7635922e+18
      name: ingd200jau
      username: kup4mrplur
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.app.user+json; type=collection;
      view=default'
    type: array
  Users:
    description: Users media type (default view)
    example:
      users:
      - bio: Adipisci aut ducimus autem et.
        email: omer.little@herman.info
        id: 2.7635922e+18
        name: ingd200jau
        username: kup4mrplur
      - bio: Adipisci aut ducimus autem et.
        email: omer.little@herman.info
        id: 2.7635922e+18
        name: ingd200jau
        username: kup4mrplur
      - bio: Adipisci aut ducimus autem et.
        email: omer.little@herman.info
        id: 2.7635922e+18
        name: ingd200jau
        username: kup4mrplur
    properties:
      users:
        $ref: '#/definitions/UserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.app.users+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: api.fieldkit.org:8080
info:
  description: A one-click open platform for field researchers and explorers.
  title: Fieldkit API
  version: ""
paths:
  /expeditions/{expedition_id}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id expedition
      tags:
      - expedition
    patch:
      description: |-
        Update an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#update
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update expedition
      tags:
      - expedition
  /expeditions/{expedition_id}/documents:
    get:
      description: List a expedition's documents
      operationId: document#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.documents+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Documents'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list id document
      tags:
      - document
  /expeditions/{expedition_id}/input-tokens:
    get:
      description: |-
        Update an expedition's input tokens

        Required security scopes:
          * `api:access`
      operationId: input_token#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.input_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InputTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id input_token
      tags:
      - input_token
    post:
      description: |-
        Add an input token

        Required security scopes:
          * `api:access`
      operationId: input_token#add
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.input_token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InputToken'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add input_token
      tags:
      - input_token
  /expeditions/{expedition_id}/inputs:
    get:
      description: |-
        List a project's inputs

        Required security scopes:
          * `api:access`
      operationId: input#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Inputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id input
      tags:
      - input
  /expeditions/{expedition_id}/inputs/devices:
    post:
      description: |-
        Add a Device input

        Required security scopes:
          * `api:access`
      operationId: device#add
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddDeviceInputPayload'
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add device
      tags:
      - device
  /expeditions/{expedition_id}/inputs/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account inputs

        Required security scopes:
          * `api:access`
      operationId: twitter#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountInputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id twitter
      tags:
      - twitter
    post:
      description: |-
        Add a Twitter account input

        Required security scopes:
          * `api:access`
      operationId: twitter#add
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTwitterAccountInputPayload'
      produces:
      - application/vnd.app.location+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add twitter
      tags:
      - twitter
  /expeditions/{expedition_id}/picture:
    get:
      description: Get a expedition's picture
      operationId: picture#expedition get id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: expedition get id picture
      tags:
      - picture
  /expeditions/{expedition_id}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id team
      tags:
      - team
    post:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#add
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add team
      tags:
      - team
  /input-tokens/{input_token_id}:
    delete:
      description: |-
        Delete an input token

        Required security scopes:
          * `api:access`
      operationId: input_token#delete
      parameters:
      - in: path
        name: input_token_id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete input_token
      tags:
      - input_token
  /inputs/{input_id}:
    patch:
      description: |-
        Update an input

        Required security scopes:
          * `api:access`
      operationId: input#update
      parameters:
      - in: path
        name: input_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateInputPayload'
      produces:
      - application/vnd.app.input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Input'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update input
      tags:
      - input
  /inputs/devices/{id}:
    get:
      description: |-
        Get a Device input

        Required security scopes:
          * `api:access`
      operationId: device#get id
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id device
      tags:
      - device
    patch:
      description: |-
        Update an Device input

        Required security scopes:
          * `api:access`
      operationId: device#update
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceInputPayload'
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update device
      tags:
      - device
  /inputs/devices/{id}/schemas:
    patch:
      description: |-
        Update an Device input schema

        Required security scopes:
          * `api:access`
      operationId: device#update schema
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceInputSchemaPayload'
      produces:
      - application/vnd.app.device_schemas+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSchemas'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update schema device
      tags:
      - device
  /inputs/twitter-accounts/{input_id}:
    get:
      description: |-
        Get a Twitter account input

        Required security scopes:
          * `api:access`
      operationId: twitter#get id
      parameters:
      - in: path
        name: input_id
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id twitter
      tags:
      - twitter
  /login:
    post:
      description: Creates a valid JWT given login credentials.
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: login user
      tags:
      - user
  /logout:
    post:
      description: |-
        Creates a valid JWT given login credentials.

        Required security scopes:
          * `api:access`
      operationId: user#logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: logout user
      tags:
      - user
  /projects:
    get:
      description: |-
        List projects

        Required security scopes:
          * `api:access`
      operationId: project#list
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project
      tags:
      - project
    post:
      description: |-
        Add a project

        Required security scopes:
          * `api:access`
      operationId: project#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add project
      tags:
      - project
  /projects/@/{project}:
    get:
      description: Get a project
      operationId: project#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get project
      tags:
      - project
  /projects/@/{project}/administrators:
    get:
      description: |-
        List an project's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list administrator
      tags:
      - administrator
  /projects/@/{project}/administrators/@/{username}:
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get administrator
      tags:
      - administrator
  /projects/@/{project}/expeditions:
    get:
      description: List a project's expeditions
      operationId: expedition#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}:
    get:
      description: Add an expedition
      operationId: expedition#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}/documents:
    get:
      description: List a expedition's documents
      operationId: document#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.documents+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Documents'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list document
      tags:
      - document
  /projects/@/{project}/expeditions/@/{expedition}/input-tokens:
    get:
      description: |-
        List an expedition's input tokens

        Required security scopes:
          * `api:access`
      operationId: input_token#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.input_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InputTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list input_token
      tags:
      - input_token
  /projects/@/{project}/expeditions/@/{expedition}/inputs:
    get:
      description: |-
        List a project's inputs

        Required security scopes:
          * `api:access`
      operationId: input#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Inputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list input
      tags:
      - input
  /projects/@/{project}/expeditions/@/{expedition}/inputs/devices:
    get:
      description: |-
        List an expedition's Device inputs

        Required security scopes:
          * `api:access`
      operationId: device#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.device_inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list device
      tags:
      - device
  /projects/@/{project}/expeditions/@/{expedition}/inputs/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account inputs

        Required security scopes:
          * `api:access`
      operationId: twitter#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountInputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list twitter
      tags:
      - twitter
  /projects/@/{project}/expeditions/@/{expedition}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members:
    get:
      description: |-
        List an team's members

        Required security scopes:
          * `api:access`
      operationId: member#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list member
      tags:
      - member
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members/@/{username}:
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get member
      tags:
      - member
  /projects/{project_id}:
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id project
      tags:
      - project
    patch:
      description: |-
        Update a project

        Required security scopes:
          * `api:access`
      operationId: project#update
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update project
      tags:
      - project
  /projects/{project_id}/administrators:
    get:
      description: |-
        List an projects's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id administrator
      tags:
      - administrator
    post:
      description: |-
        Add an administrator to a project

        Required security scopes:
          * `api:access`
      operationId: administrator#add
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddAdministratorPayload'
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add administrator
      tags:
      - administrator
  /projects/{project_id}/administrators/{user_id}:
    delete:
      description: |-
        Remove an administrator from a project

        Required security scopes:
          * `api:access`
      operationId: administrator#delete
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete administrator
      tags:
      - administrator
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id administrator
      tags:
      - administrator
  /projects/{project_id}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id expedition
      tags:
      - expedition
    post:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#add
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add expedition
      tags:
      - expedition
  /projects/{project_id}/picture:
    get:
      description: Get a project's picture
      operationId: picture#project get id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: project get id picture
      tags:
      - picture
  /refresh:
    post:
      description: Creates a valid JWT given a refresh token.
      operationId: user#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshUserPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: refresh user
      tags:
      - user
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.yaml
  /teams/{team_id}:
    delete:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#delete
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete team
      tags:
      - team
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get id
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id team
      tags:
      - team
    patch:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#update
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update team
      tags:
      - team
  /teams/{team_id}/members:
    get:
      description: |-
        List an teams's members

        Required security scopes:
          * `api:access`
      operationId: member#list id
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id member
      tags:
      - member
    post:
      description: |-
        Add a member to a team

        Required security scopes:
          * `api:access`
      operationId: member#add
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add member
      tags:
      - member
  /teams/{team_id}/members/{user_id}:
    delete:
      description: |-
        Remove a member from a team

        Required security scopes:
          * `api:access`
      operationId: member#delete
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete member
      tags:
      - member
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get id
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id member
      tags:
      - member
    patch:
      description: |-
        Update a member

        Required security scopes:
          * `api:access`
      operationId: member#update
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update member
      tags:
      - member
  /twitter/callback:
    get:
      description: OAuth callback endpoint for Twitter
      operationId: twitter#callback
      parameters:
      - in: query
        name: oauth_token
        required: true
        type: string
      - in: query
        name: oauth_verifier
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "400":
          description: Bad Request
      schemes:
      - https
      summary: callback twitter
      tags:
      - twitter
  /user:
    get:
      description: |-
        Get the authenticated user

        Required security scopes:
          * `api:access`
      operationId: user#get current
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user
      tags:
      - user
  /user/projects:
    get:
      description: |-
        List the authenticated user's projects

        Required security scopes:
          * `api:access`
      operationId: project#list current
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list current project
      tags:
      - project
  /users:
    get:
      description: |-
        List users

        Required security scopes:
          * `api:access`
      operationId: user#list
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
    post:
      description: Add a user
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: add user
      tags:
      - user
  /users/@/{username}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get
      parameters:
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get user
      tags:
      - user
  /users/{user_id}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get id
      parameters:
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id user
      tags:
      - user
    patch:
      description: |-
        Update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - in: path
        name: user_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /users/{user_id}/picture:
    get:
      description: Get a user's picture
      operationId: picture#user get id
      parameters:
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user get id picture
      tags:
      - picture
  /validate:
    get:
      description: Validate a user's email address.
      operationId: user#validate
      parameters:
      - in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: validate user
      tags:
      - user
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  NoContent:
    description: No Content
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
