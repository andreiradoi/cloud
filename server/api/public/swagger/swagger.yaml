consumes:
- application/json
definitions:
  AddAdministratorPayload:
    example:
      userId: 7.363277017408112e+18
    properties:
      userId:
        example: 7.363277017408112e+18
        format: int64
        type: integer
    required:
    - userId
    title: AddAdministratorPayload
    type: object
  AddDeviceSourcePayload:
    example:
      key: Animi vitae quibusdam aspernatur.
      name: Vero aut omnis provident ut debitis.
    properties:
      key:
        example: Animi vitae quibusdam aspernatur.
        type: string
      name:
        example: Vero aut omnis provident ut debitis.
        type: string
    required:
    - name
    - key
    title: AddDeviceSourcePayload
    type: object
  AddExpeditionPayload:
    example:
      description: Iure iusto dolores voluptatum eveniet.
      name: Ea sint.
      slug: ysriux2dm5
    properties:
      description:
        example: Iure iusto dolores voluptatum eveniet.
        type: string
      name:
        example: Ea sint.
        type: string
      slug:
        example: ysriux2dm5
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddExpeditionPayload
    type: object
  AddFieldNotePayload:
    example:
      category_id: 5.217864309254045e+18
      created: "1981-04-27T03:52:00Z"
      media_id: 1.9645124898610138e+18
      note: Nihil aut quisquam qui.
    properties:
      category_id:
        example: 5.217864309254045e+18
        format: int64
        type: integer
      created:
        example: "1981-04-27T03:52:00Z"
        format: date-time
        type: string
      media_id:
        example: 1.9645124898610138e+18
        format: int64
        type: integer
      note:
        example: Nihil aut quisquam qui.
        type: string
    required:
    - created
    title: AddFieldNotePayload
    type: object
  AddFirmwarePayload:
    example:
      etag: Ipsa cupiditate deleniti.
      meta: Quis voluptate ipsa fugiat culpa nulla quae.
      module: Eaque distinctio ipsam unde.
      profile: Optio voluptatem qui dolores dicta.
      url: Delectus nisi et reiciendis necessitatibus nostrum quia.
    properties:
      etag:
        example: Ipsa cupiditate deleniti.
        type: string
      meta:
        example: Quis voluptate ipsa fugiat culpa nulla quae.
        type: string
      module:
        example: Eaque distinctio ipsam unde.
        type: string
      profile:
        example: Optio voluptatem qui dolores dicta.
        type: string
      url:
        example: Delectus nisi et reiciendis necessitatibus nostrum quia.
        type: string
    required:
    - etag
    - module
    - profile
    - url
    - meta
    title: AddFirmwarePayload
    type: object
  AddMemberPayload:
    example:
      role: Dolores illo ea.
      userId: 4.875276402383419e+18
    properties:
      role:
        example: Dolores illo ea.
        type: string
      userId:
        example: 4.875276402383419e+18
        format: int64
        type: integer
    required:
    - userId
    - role
    title: AddMemberPayload
    type: object
  AddProjectPayload:
    example:
      description: Eum quis labore quas quis.
      end_time: "1995-10-16T22:24:44Z"
      goal: Deserunt qui.
      location: Dicta quaerat.
      name: Commodi velit beatae est eius similique.
      private: true
      slug: bksz14zcun
      start_time: "1971-09-12T14:21:10Z"
      tags: Nulla vero.
    properties:
      description:
        example: Eum quis labore quas quis.
        type: string
      end_time:
        example: "1995-10-16T22:24:44Z"
        format: date-time
        type: string
      goal:
        example: Deserunt qui.
        type: string
      location:
        example: Dicta quaerat.
        type: string
      name:
        example: Commodi velit beatae est eius similique.
        type: string
      private:
        example: true
        type: boolean
      slug:
        example: bksz14zcun
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
      start_time:
        example: "1971-09-12T14:21:10Z"
        format: date-time
        type: string
      tags:
        example: Nulla vero.
        type: string
    required:
    - name
    - slug
    - description
    title: AddProjectPayload
    type: object
  AddStationLogPayload:
    example:
      ID: 4.793162404996384e+18
      body: Accusantium et eum.
      station_id: 7.674152633744792e+18
      timestamp: Aliquid ducimus incidunt dolorum cumque ea facere.
    properties:
      ID:
        example: 4.793162404996384e+18
        format: int64
        type: integer
      body:
        example: Accusantium et eum.
        type: string
      station_id:
        example: 7.674152633744792e+18
        format: int64
        type: integer
      timestamp:
        example: Aliquid ducimus incidunt dolorum cumque ea facere.
        type: string
    required:
    - ID
    - station_id
    - body
    - timestamp
    title: AddStationLogPayload
    type: object
  AddStationLogsPayload:
    example:
      station_logs:
      - ID: 4.793162404996384e+18
        body: Accusantium et eum.
        station_id: 7.674152633744792e+18
        timestamp: Aliquid ducimus incidunt dolorum cumque ea facere.
      - ID: 4.793162404996384e+18
        body: Accusantium et eum.
        station_id: 7.674152633744792e+18
        timestamp: Aliquid ducimus incidunt dolorum cumque ea facere.
    properties:
      station_logs:
        example:
        - ID: 4.793162404996384e+18
          body: Accusantium et eum.
          station_id: 7.674152633744792e+18
          timestamp: Aliquid ducimus incidunt dolorum cumque ea facere.
        - ID: 4.793162404996384e+18
          body: Accusantium et eum.
          station_id: 7.674152633744792e+18
          timestamp: Aliquid ducimus incidunt dolorum cumque ea facere.
        items:
          $ref: '#/definitions/AddStationLogPayload'
        type: array
    required:
    - station_logs
    title: AddStationLogsPayload
    type: object
  AddStationPayload:
    example:
      device_id: Velit unde maxime laudantium harum aliquam.
      name: Neque aut ab delectus vitae sint eveniet.
      status_json:
        Qui dolores non.: "2013-06-18T10:06:43Z"
    properties:
      device_id:
        example: Velit unde maxime laudantium harum aliquam.
        type: string
      name:
        example: Neque aut ab delectus vitae sint eveniet.
        type: string
      status_json:
        additionalProperties: true
        example:
          Qui dolores non.: "2013-06-18T10:06:43Z"
        type: object
    required:
    - name
    - device_id
    - status_json
    title: AddStationPayload
    type: object
  AddTeamPayload:
    example:
      description: Autem occaecati.
      name: m10jqey60g
      slug: 5easamusvl
    properties:
      description:
        example: Autem occaecati.
        type: string
      name:
        example: m10jqey60g
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: 5easamusvl
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddTeamPayload
    type: object
  AddTwitterAccountSourcePayload:
    example:
      name: Maiores eligendi veritatis laborum.
    properties:
      name:
        example: Maiores eligendi veritatis laborum.
        type: string
    required:
    - name
    title: AddTwitterAccountSourcePayload
    type: object
  AddUserPayload:
    example:
      email: kendrick@fisherhuels.net
      invite_token: Facilis nulla beatae maiores maxime ducimus quas.
      name: olban5z0cl
      password: xwvao5yckh
    properties:
      email:
        example: kendrick@fisherhuels.net
        format: email
        type: string
      invite_token:
        example: Facilis nulla beatae maiores maxime ducimus quas.
        type: string
      name:
        example: olban5z0cl
        maxLength: 256
        pattern: \S
        type: string
      password:
        example: xwvao5yckh
        minLength: 10
        type: string
    required:
    - name
    - email
    - password
    title: AddUserPayload
    type: object
  BadRequestResponse:
    description: BadRequestResponse media type (default view)
    example:
      key: Officiis et exercitationem enim voluptatum animi sint.
      message: Esse officiis.
    properties:
      key:
        example: Officiis et exercitationem enim voluptatum animi sint.
        type: string
      message:
        example: Esse officiis.
        type: string
    required:
    - key
    - message
    title: 'Mediatype identifier: application/vnd.brr+json; view=default'
    type: object
  ClusterGeometrySummary:
    description: ClusterGeometrySummary media type (default view)
    example:
      geometry:
      - - 0.9682483955411658
      - - 0.9682483955411658
      - - 0.9682483955411658
      id: 5.41219004578842e+18
      sourceId: 1.6901081034442964e+18
    properties:
      geometry:
        example:
        - - 0.9682483955411658
        - - 0.9682483955411658
        - - 0.9682483955411658
        items:
          example:
          - 0.9682483955411658
          items:
            example: 0.9682483955411658
            format: double
            type: number
          type: array
        type: array
      id:
        example: 5.41219004578842e+18
        format: int64
        type: integer
      sourceId:
        example: 1.6901081034442964e+18
        format: int64
        type: integer
    required:
    - id
    - sourceId
    - geometry
    title: 'Mediatype identifier: application/vnd.app.cluster_geometry_summary+json;
      view=default'
    type: object
  ClusterGeometrySummaryCollection:
    description: ClusterGeometrySummaryCollection is the media type for an array of
      ClusterGeometrySummary (default view)
    example:
    - geometry:
      - - 0.9682483955411658
      - - 0.9682483955411658
      - - 0.9682483955411658
      id: 5.41219004578842e+18
      sourceId: 1.6901081034442964e+18
    items:
      $ref: '#/definitions/ClusterGeometrySummary'
    title: 'Mediatype identifier: application/vnd.app.cluster_geometry_summary+json;
      type=collection; view=default'
    type: array
  ClusterSummary:
    description: ClusterSummary media type (default view)
    example:
      centroid:
      - 0.5408775402802485
      endTime: "2005-01-11T03:51:21Z"
      envelope:
      - - 0.7520434281331757
        - 0.7520434281331757
        - 0.7520434281331757
      id: 8.282634339368904e+18
      numberOfFeatures: 8.252764702077084e+18
      radius: 0.729149602582465
      sourceId: 6.822439840585685e+18
      startTime: "2005-03-28T09:27:43Z"
    properties:
      centroid:
        example:
        - 0.5408775402802485
        items:
          example: 0.5408775402802485
          format: double
          type: number
        type: array
      endTime:
        example: "2005-01-11T03:51:21Z"
        format: date-time
        type: string
      envelope:
        example:
        - - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
        items:
          example:
          - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
          items:
            example: 0.7520434281331757
            format: double
            type: number
          type: array
        type: array
      id:
        example: 8.282634339368904e+18
        format: int64
        type: integer
      numberOfFeatures:
        example: 8.252764702077084e+18
        format: int64
        type: integer
      radius:
        example: 0.729149602582465
        format: double
        type: number
      sourceId:
        example: 6.822439840585685e+18
        format: int64
        type: integer
      startTime:
        example: "2005-03-28T09:27:43Z"
        format: date-time
        type: string
    required:
    - id
    - sourceId
    - startTime
    - endTime
    - numberOfFeatures
    - centroid
    - radius
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      view=default'
    type: object
  ClusterSummaryCollection:
    description: ClusterSummaryCollection is the media type for an array of ClusterSummary
      (default view)
    example:
    - centroid:
      - 0.5408775402802485
      endTime: "2005-01-11T03:51:21Z"
      envelope:
      - - 0.7520434281331757
        - 0.7520434281331757
        - 0.7520434281331757
      id: 8.282634339368904e+18
      numberOfFeatures: 8.252764702077084e+18
      radius: 0.729149602582465
      sourceId: 6.822439840585685e+18
      startTime: "2005-03-28T09:27:43Z"
    - centroid:
      - 0.5408775402802485
      endTime: "2005-01-11T03:51:21Z"
      envelope:
      - - 0.7520434281331757
        - 0.7520434281331757
        - 0.7520434281331757
      id: 8.282634339368904e+18
      numberOfFeatures: 8.252764702077084e+18
      radius: 0.729149602582465
      sourceId: 6.822439840585685e+18
      startTime: "2005-03-28T09:27:43Z"
    items:
      $ref: '#/definitions/ClusterSummary'
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      type=collection; view=default'
    type: array
  ConcatenatedFileInfo:
    example:
      csv: Dignissimos ea nobis in harum doloribus.
      size: 9.023151086489648e+18
      time: "1988-04-22T16:30:51Z"
    properties:
      csv:
        example: Dignissimos ea nobis in harum doloribus.
        type: string
      size:
        example: 9.023151086489648e+18
        format: int64
        type: integer
      time:
        example: "1988-04-22T16:30:51Z"
        format: date-time
        type: string
    required:
    - time
    - size
    - csv
    title: ConcatenatedFileInfo
    type: object
  ConcatenatedFilesInfo:
    example:
      data:
        csv: Dignissimos ea nobis in harum doloribus.
        size: 9.023151086489648e+18
        time: "1988-04-22T16:30:51Z"
      logs:
        csv: Dignissimos ea nobis in harum doloribus.
        size: 9.023151086489648e+18
        time: "1988-04-22T16:30:51Z"
    properties:
      data:
        $ref: '#/definitions/ConcatenatedFileInfo'
      logs:
        $ref: '#/definitions/ConcatenatedFileInfo'
    required:
    - logs
    - data
    title: ConcatenatedFilesInfo
    type: object
  DeviceDataRecord:
    description: DeviceDataRecord media type (default view)
    example:
      data:
        Sapiente ipsa expedita qui eum enim deleniti.: false
      id: 5.114928591801609e+18
      location:
      - 0.3817722467100891
      meta: 9.930548092478253e+17
      record: 3.4522485535092884e+18
      time: "1998-06-18T18:01:05Z"
    properties:
      data:
        additionalProperties: true
        example:
          Sapiente ipsa expedita qui eum enim deleniti.: false
        type: object
      id:
        example: 5.114928591801609e+18
        format: int64
        type: integer
      location:
        example:
        - 0.3817722467100891
        items:
          example: 0.3817722467100891
          format: double
          type: number
        type: array
      meta:
        example: 9.930548092478253e+17
        format: int64
        type: integer
      record:
        example: 3.4522485535092884e+18
        format: int64
        type: integer
      time:
        example: "1998-06-18T18:01:05Z"
        format: date-time
        type: string
    required:
    - id
    - time
    - record
    - meta
    - location
    - data
    title: 'Mediatype identifier: application/vnd.app.device.data.record+json; view=default'
    type: object
  DeviceDataRecordCollection:
    description: DeviceDataRecordCollection is the media type for an array of DeviceDataRecord
      (default view)
    example:
    - data:
        Sapiente ipsa expedita qui eum enim deleniti.: false
      id: 5.114928591801609e+18
      location:
      - 0.3817722467100891
      meta: 9.930548092478253e+17
      record: 3.4522485535092884e+18
      time: "1998-06-18T18:01:05Z"
    - data:
        Sapiente ipsa expedita qui eum enim deleniti.: false
      id: 5.114928591801609e+18
      location:
      - 0.3817722467100891
      meta: 9.930548092478253e+17
      record: 3.4522485535092884e+18
      time: "1998-06-18T18:01:05Z"
    - data:
        Sapiente ipsa expedita qui eum enim deleniti.: false
      id: 5.114928591801609e+18
      location:
      - 0.3817722467100891
      meta: 9.930548092478253e+17
      record: 3.4522485535092884e+18
      time: "1998-06-18T18:01:05Z"
    items:
      $ref: '#/definitions/DeviceDataRecord'
    title: 'Mediatype identifier: application/vnd.app.device.data.record+json; type=collection;
      view=default'
    type: array
  DeviceDataRecordsResponse:
    description: DeviceDataRecordsResponse media type (default view)
    example:
      data:
      - data:
          Sapiente ipsa expedita qui eum enim deleniti.: false
        id: 5.114928591801609e+18
        location:
        - 0.3817722467100891
        meta: 9.930548092478253e+17
        record: 3.4522485535092884e+18
        time: "1998-06-18T18:01:05Z"
      - data:
          Sapiente ipsa expedita qui eum enim deleniti.: false
        id: 5.114928591801609e+18
        location:
        - 0.3817722467100891
        meta: 9.930548092478253e+17
        record: 3.4522485535092884e+18
        time: "1998-06-18T18:01:05Z"
      - data:
          Sapiente ipsa expedita qui eum enim deleniti.: false
        id: 5.114928591801609e+18
        location:
        - 0.3817722467100891
        meta: 9.930548092478253e+17
        record: 3.4522485535092884e+18
        time: "1998-06-18T18:01:05Z"
      meta:
      - data:
          Et aperiam amet nulla dolore.: "1973-10-09T04:25:02Z"
        id: 2.4194290054188964e+18
        record: 5.508071077920418e+18
        time: "2016-03-26T05:44:35Z"
      - data:
          Et aperiam amet nulla dolore.: "1973-10-09T04:25:02Z"
        id: 2.4194290054188964e+18
        record: 5.508071077920418e+18
        time: "2016-03-26T05:44:35Z"
    properties:
      data:
        $ref: '#/definitions/DeviceDataRecordCollection'
      meta:
        $ref: '#/definitions/DeviceMetaRecordCollection'
    required:
    - meta
    - data
    title: 'Mediatype identifier: application/vnd.app.device.data+json; view=default'
    type: object
  DeviceDataSummary:
    description: DeviceDataSummary media type (default view)
    example:
      first: 3.962019451405188e+17
      last: 8.016932918719963e+18
      size: 6.04033343035064e+18
    properties:
      first:
        example: 3.962019451405188e+17
        format: int64
        type: integer
      last:
        example: 8.016932918719963e+18
        format: int64
        type: integer
      size:
        example: 6.04033343035064e+18
        format: int64
        type: integer
    required:
    - size
    - first
    - last
    title: 'Mediatype identifier: application/vnd.app.device.data.summary+json; view=default'
    type: object
  DeviceDataSummaryResponse:
    description: DeviceDataSummaryResponse media type (default view)
    example:
      provisions:
      - created: "1971-07-15T07:38:29Z"
        data:
          first: 3.962019451405188e+17
          last: 8.016932918719963e+18
          size: 6.04033343035064e+18
        generation: Fugit nisi odio vel tempore.
        meta:
          first: 5.639481639750852e+18
          last: 8.276091969822207e+18
          size: 6.389891566807761e+18
        updated: "2006-04-25T23:55:58Z"
      - created: "1971-07-15T07:38:29Z"
        data:
          first: 3.962019451405188e+17
          last: 8.016932918719963e+18
          size: 6.04033343035064e+18
        generation: Fugit nisi odio vel tempore.
        meta:
          first: 5.639481639750852e+18
          last: 8.276091969822207e+18
          size: 6.389891566807761e+18
        updated: "2006-04-25T23:55:58Z"
      - created: "1971-07-15T07:38:29Z"
        data:
          first: 3.962019451405188e+17
          last: 8.016932918719963e+18
          size: 6.04033343035064e+18
        generation: Fugit nisi odio vel tempore.
        meta:
          first: 5.639481639750852e+18
          last: 8.276091969822207e+18
          size: 6.389891566807761e+18
        updated: "2006-04-25T23:55:58Z"
    properties:
      provisions:
        $ref: '#/definitions/DeviceProvisionSummaryCollection'
    required:
    - provisions
    title: 'Mediatype identifier: application/vnd.app.device.summary+json; view=default'
    type: object
  DeviceDetails:
    description: DeviceDetails media type (default view)
    example:
      device_id: Repellendus cupiditate nemo doloribus.
      files:
        data:
          csv: Dignissimos ea nobis in harum doloribus.
          size: 9.023151086489648e+18
          time: "1988-04-22T16:30:51Z"
        logs:
          csv: Dignissimos ea nobis in harum doloribus.
          size: 9.023151086489648e+18
          time: "1988-04-22T16:30:51Z"
      notes:
      - name: Reprehenderit quod provident.
        notes: Provident eligendi ut voluptatem et ratione.
        time: "1978-01-02T21:38:58Z"
      urls:
        data:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
        details: Debitis sit ratione aut et amet.
        logs:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
    properties:
      device_id:
        example: Repellendus cupiditate nemo doloribus.
        type: string
      files:
        $ref: '#/definitions/ConcatenatedFilesInfo'
      notes:
        $ref: '#/definitions/DeviceNotesEntryCollection'
      urls:
        $ref: '#/definitions/DeviceSummaryUrls'
    required:
    - device_id
    - files
    - urls
    title: 'Mediatype identifier: application/vnd.app.device.details+json; view=default'
    type: object
  DeviceFile:
    description: DeviceFile media type (default view)
    example:
      corrupted: false
      device_id: Ea quibusdam optio.
      file_id: Et autem aliquid voluptate.
      file_type_id: Dolores quo suscipit.
      file_type_name: Magni in ipsam asperiores nostrum facere dignissimos.
      firmware: Repellendus quam soluta.
      id: 8.732123841310651e+17
      meta: Quis ut repellendus ratione.
      size: 5.66413114730693e+18
      time: "1972-09-14T07:30:30Z"
      url: Praesentium ratione et.
      urls:
        csv: A voluptas.
        fkpb: Dolorum itaque qui sequi.
    properties:
      corrupted:
        example: false
        type: boolean
      device_id:
        example: Ea quibusdam optio.
        type: string
      file_id:
        example: Et autem aliquid voluptate.
        type: string
      file_type_id:
        example: Dolores quo suscipit.
        type: string
      file_type_name:
        example: Magni in ipsam asperiores nostrum facere dignissimos.
        type: string
      firmware:
        example: Repellendus quam soluta.
        type: string
      id:
        example: 8.732123841310651e+17
        format: int64
        type: integer
      meta:
        example: Quis ut repellendus ratione.
        type: string
      size:
        example: 5.66413114730693e+18
        format: int64
        type: integer
      time:
        example: "1972-09-14T07:30:30Z"
        format: date-time
        type: string
      url:
        example: Praesentium ratione et.
        type: string
      urls:
        $ref: '#/definitions/DeviceFileUrls'
    required:
    - id
    - time
    - file_id
    - device_id
    - firmware
    - meta
    - file_type_id
    - file_type_name
    - size
    - url
    - urls
    - corrupted
    title: 'Mediatype identifier: application/vnd.app.device.file+json; view=default'
    type: object
  DeviceFileCollection:
    description: DeviceFileCollection is the media type for an array of DeviceFile
      (default view)
    example:
    - corrupted: false
      device_id: Ea quibusdam optio.
      file_id: Et autem aliquid voluptate.
      file_type_id: Dolores quo suscipit.
      file_type_name: Magni in ipsam asperiores nostrum facere dignissimos.
      firmware: Repellendus quam soluta.
      id: 8.732123841310651e+17
      meta: Quis ut repellendus ratione.
      size: 5.66413114730693e+18
      time: "1972-09-14T07:30:30Z"
      url: Praesentium ratione et.
      urls:
        csv: A voluptas.
        fkpb: Dolorum itaque qui sequi.
    items:
      $ref: '#/definitions/DeviceFile'
    title: 'Mediatype identifier: application/vnd.app.device.file+json; type=collection;
      view=default'
    type: array
  DeviceFileTypeUrls:
    example:
      csv: Perspiciatis quasi error voluptatem et.
      fkpb: Ducimus quia explicabo unde.
      generate: Provident earum sit enim sapiente assumenda.
      id: Dolores dolores et.
      info: Sit velit quo eveniet in.
    properties:
      csv:
        example: Perspiciatis quasi error voluptatem et.
        type: string
      fkpb:
        example: Ducimus quia explicabo unde.
        type: string
      generate:
        example: Provident earum sit enim sapiente assumenda.
        type: string
      id:
        example: Dolores dolores et.
        type: string
      info:
        example: Sit velit quo eveniet in.
        type: string
    required:
    - id
    - generate
    - info
    - csv
    - fkpb
    title: DeviceFileTypeUrls
    type: object
  DeviceFileUrls:
    example:
      csv: A voluptas.
      fkpb: Dolorum itaque qui sequi.
    properties:
      csv:
        example: A voluptas.
        type: string
      fkpb:
        example: Dolorum itaque qui sequi.
        type: string
    required:
    - csv
    - fkpb
    title: DeviceFileUrls
    type: object
  DeviceFiles:
    description: DeviceFiles media type (default view)
    example:
      files:
      - corrupted: false
        device_id: Ea quibusdam optio.
        file_id: Et autem aliquid voluptate.
        file_type_id: Dolores quo suscipit.
        file_type_name: Magni in ipsam asperiores nostrum facere dignissimos.
        firmware: Repellendus quam soluta.
        id: 8.732123841310651e+17
        meta: Quis ut repellendus ratione.
        size: 5.66413114730693e+18
        time: "1972-09-14T07:30:30Z"
        url: Praesentium ratione et.
        urls:
          csv: A voluptas.
          fkpb: Dolorum itaque qui sequi.
      - corrupted: false
        device_id: Ea quibusdam optio.
        file_id: Et autem aliquid voluptate.
        file_type_id: Dolores quo suscipit.
        file_type_name: Magni in ipsam asperiores nostrum facere dignissimos.
        firmware: Repellendus quam soluta.
        id: 8.732123841310651e+17
        meta: Quis ut repellendus ratione.
        size: 5.66413114730693e+18
        time: "1972-09-14T07:30:30Z"
        url: Praesentium ratione et.
        urls:
          csv: A voluptas.
          fkpb: Dolorum itaque qui sequi.
      - corrupted: false
        device_id: Ea quibusdam optio.
        file_id: Et autem aliquid voluptate.
        file_type_id: Dolores quo suscipit.
        file_type_name: Magni in ipsam asperiores nostrum facere dignissimos.
        firmware: Repellendus quam soluta.
        id: 8.732123841310651e+17
        meta: Quis ut repellendus ratione.
        size: 5.66413114730693e+18
        time: "1972-09-14T07:30:30Z"
        url: Praesentium ratione et.
        urls:
          csv: A voluptas.
          fkpb: Dolorum itaque qui sequi.
    properties:
      files:
        $ref: '#/definitions/DeviceFileCollection'
    required:
    - files
    title: 'Mediatype identifier: application/vnd.app.device.files+json; view=default'
    type: object
  DeviceMetaRecord:
    description: DeviceMetaRecord media type (default view)
    example:
      data:
        Et aperiam amet nulla dolore.: "1973-10-09T04:25:02Z"
      id: 2.4194290054188964e+18
      record: 5.508071077920418e+18
      time: "2016-03-26T05:44:35Z"
    properties:
      data:
        additionalProperties: true
        example:
          Et aperiam amet nulla dolore.: "1973-10-09T04:25:02Z"
        type: object
      id:
        example: 2.4194290054188964e+18
        format: int64
        type: integer
      record:
        example: 5.508071077920418e+18
        format: int64
        type: integer
      time:
        example: "2016-03-26T05:44:35Z"
        format: date-time
        type: string
    required:
    - id
    - time
    - record
    - data
    title: 'Mediatype identifier: application/vnd.app.device.meta.record+json; view=default'
    type: object
  DeviceMetaRecordCollection:
    description: DeviceMetaRecordCollection is the media type for an array of DeviceMetaRecord
      (default view)
    example:
    - data:
        Et aperiam amet nulla dolore.: "1973-10-09T04:25:02Z"
      id: 2.4194290054188964e+18
      record: 5.508071077920418e+18
      time: "2016-03-26T05:44:35Z"
    items:
      $ref: '#/definitions/DeviceMetaRecord'
    title: 'Mediatype identifier: application/vnd.app.device.meta.record+json; type=collection;
      view=default'
    type: array
  DeviceMetaSummary:
    description: DeviceMetaSummary media type (default view)
    example:
      first: 5.639481639750852e+18
      last: 8.276091969822207e+18
      size: 6.389891566807761e+18
    properties:
      first:
        example: 5.639481639750852e+18
        format: int64
        type: integer
      last:
        example: 8.276091969822207e+18
        format: int64
        type: integer
      size:
        example: 6.389891566807761e+18
        format: int64
        type: integer
    required:
    - size
    - first
    - last
    title: 'Mediatype identifier: application/vnd.app.device.meta.summary+json; view=default'
    type: object
  DeviceNotesEntry:
    description: DeviceNotesEntry media type (default view)
    example:
      name: Reprehenderit quod provident.
      notes: Provident eligendi ut voluptatem et ratione.
      time: "1978-01-02T21:38:58Z"
    properties:
      name:
        example: Reprehenderit quod provident.
        type: string
      notes:
        example: Provident eligendi ut voluptatem et ratione.
        type: string
      time:
        example: "1978-01-02T21:38:58Z"
        format: date-time
        type: string
    required:
    - time
    title: 'Mediatype identifier: application/vnd.app.device.notes+json; view=default'
    type: object
  DeviceNotesEntryCollection:
    description: DeviceNotesEntryCollection is the media type for an array of DeviceNotesEntry
      (default view)
    example:
    - name: Reprehenderit quod provident.
      notes: Provident eligendi ut voluptatem et ratione.
      time: "1978-01-02T21:38:58Z"
    - name: Reprehenderit quod provident.
      notes: Provident eligendi ut voluptatem et ratione.
      time: "1978-01-02T21:38:58Z"
    items:
      $ref: '#/definitions/DeviceNotesEntry'
    title: 'Mediatype identifier: application/vnd.app.device.notes+json; type=collection;
      view=default'
    type: array
  DeviceProvisionSummary:
    description: DeviceProvisionSummary media type (default view)
    example:
      created: "1971-07-15T07:38:29Z"
      data:
        first: 3.962019451405188e+17
        last: 8.016932918719963e+18
        size: 6.04033343035064e+18
      generation: Fugit nisi odio vel tempore.
      meta:
        first: 5.639481639750852e+18
        last: 8.276091969822207e+18
        size: 6.389891566807761e+18
      updated: "2006-04-25T23:55:58Z"
    properties:
      created:
        example: "1971-07-15T07:38:29Z"
        format: date-time
        type: string
      data:
        $ref: '#/definitions/DeviceDataSummary'
      generation:
        example: Fugit nisi odio vel tempore.
        type: string
      meta:
        $ref: '#/definitions/DeviceMetaSummary'
      updated:
        example: "2006-04-25T23:55:58Z"
        format: date-time
        type: string
    required:
    - generation
    - created
    - updated
    - meta
    - data
    title: 'Mediatype identifier: application/vnd.app.device.provision.summary+json;
      view=default'
    type: object
  DeviceProvisionSummaryCollection:
    description: DeviceProvisionSummaryCollection is the media type for an array of
      DeviceProvisionSummary (default view)
    example:
    - created: "1971-07-15T07:38:29Z"
      data:
        first: 3.962019451405188e+17
        last: 8.016932918719963e+18
        size: 6.04033343035064e+18
      generation: Fugit nisi odio vel tempore.
      meta:
        first: 5.639481639750852e+18
        last: 8.276091969822207e+18
        size: 6.389891566807761e+18
      updated: "2006-04-25T23:55:58Z"
    - created: "1971-07-15T07:38:29Z"
      data:
        first: 3.962019451405188e+17
        last: 8.016932918719963e+18
        size: 6.04033343035064e+18
      generation: Fugit nisi odio vel tempore.
      meta:
        first: 5.639481639750852e+18
        last: 8.276091969822207e+18
        size: 6.389891566807761e+18
      updated: "2006-04-25T23:55:58Z"
    items:
      $ref: '#/definitions/DeviceProvisionSummary'
    title: 'Mediatype identifier: application/vnd.app.device.provision.summary+json;
      type=collection; view=default'
    type: array
  DeviceSchema:
    description: DeviceSchema media type (default view)
    example:
      active: false
      deviceId: 5.465972840091634e+18
      jsonSchema: Quisquam voluptatem doloribus.
      key: Minus doloremque.
      projectId: 3.267256188525231e+18
      schemaId: 1.5887009993142717e+18
    properties:
      active:
        example: false
        type: boolean
      deviceId:
        example: 5.465972840091634e+18
        format: int64
        type: integer
      jsonSchema:
        example: Quisquam voluptatem doloribus.
        type: string
      key:
        example: Minus doloremque.
        type: string
      projectId:
        example: 3.267256188525231e+18
        format: int64
        type: integer
      schemaId:
        example: 1.5887009993142717e+18
        format: int64
        type: integer
    required:
    - deviceId
    - schemaId
    - projectId
    - active
    - jsonSchema
    - key
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; view=default'
    type: object
  DeviceSchemaCollection:
    description: DeviceSchemaCollection is the media type for an array of DeviceSchema
      (default view)
    example:
    - active: false
      deviceId: 5.465972840091634e+18
      jsonSchema: Quisquam voluptatem doloribus.
      key: Minus doloremque.
      projectId: 3.267256188525231e+18
      schemaId: 1.5887009993142717e+18
    - active: false
      deviceId: 5.465972840091634e+18
      jsonSchema: Quisquam voluptatem doloribus.
      key: Minus doloremque.
      projectId: 3.267256188525231e+18
      schemaId: 1.5887009993142717e+18
    items:
      $ref: '#/definitions/DeviceSchema'
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; type=collection;
      view=default'
    type: array
  DeviceSchemas:
    description: DeviceSchemas media type (default view)
    example:
      schemas:
      - active: false
        deviceId: 5.465972840091634e+18
        jsonSchema: Quisquam voluptatem doloribus.
        key: Minus doloremque.
        projectId: 3.267256188525231e+18
        schemaId: 1.5887009993142717e+18
      - active: false
        deviceId: 5.465972840091634e+18
        jsonSchema: Quisquam voluptatem doloribus.
        key: Minus doloremque.
        projectId: 3.267256188525231e+18
        schemaId: 1.5887009993142717e+18
    properties:
      schemas:
        $ref: '#/definitions/DeviceSchemaCollection'
    required:
    - schemas
    title: 'Mediatype identifier: application/vnd.app.device_schemas+json; view=default'
    type: object
  DeviceSource:
    description: DeviceSource media type (default view)
    example:
      active: false
      expeditionId: 3.0020301235635297e+18
      id: 6.348447899341423e+17
      key: Inventore ratione nisi ea.
      name: Ducimus molestiae distinctio eum consequatur numquam.
      teamId: 3.387812945162109e+18
      token: Sed dolorem.
      userId: 8.176206767848327e+18
    properties:
      active:
        example: false
        type: boolean
      expeditionId:
        example: 3.0020301235635297e+18
        format: int64
        type: integer
      id:
        example: 6.348447899341423e+17
        format: int64
        type: integer
      key:
        example: Inventore ratione nisi ea.
        type: string
      name:
        example: Ducimus molestiae distinctio eum consequatur numquam.
        type: string
      teamId:
        example: 3.387812945162109e+18
        format: int64
        type: integer
      token:
        example: Sed dolorem.
        type: string
      userId:
        example: 8.176206767848327e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - active
    - name
    - token
    - key
    title: 'Mediatype identifier: application/vnd.app.device_source+json; view=default'
    type: object
  DeviceSourceCollection:
    description: DeviceSourceCollection is the media type for an array of DeviceSource
      (default view)
    example:
    - active: false
      expeditionId: 3.0020301235635297e+18
      id: 6.348447899341423e+17
      key: Inventore ratione nisi ea.
      name: Ducimus molestiae distinctio eum consequatur numquam.
      teamId: 3.387812945162109e+18
      token: Sed dolorem.
      userId: 8.176206767848327e+18
    - active: false
      expeditionId: 3.0020301235635297e+18
      id: 6.348447899341423e+17
      key: Inventore ratione nisi ea.
      name: Ducimus molestiae distinctio eum consequatur numquam.
      teamId: 3.387812945162109e+18
      token: Sed dolorem.
      userId: 8.176206767848327e+18
    - active: false
      expeditionId: 3.0020301235635297e+18
      id: 6.348447899341423e+17
      key: Inventore ratione nisi ea.
      name: Ducimus molestiae distinctio eum consequatur numquam.
      teamId: 3.387812945162109e+18
      token: Sed dolorem.
      userId: 8.176206767848327e+18
    items:
      $ref: '#/definitions/DeviceSource'
    title: 'Mediatype identifier: application/vnd.app.device_source+json; type=collection;
      view=default'
    type: array
  DeviceSources:
    description: DeviceSources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 3.0020301235635297e+18
        id: 6.348447899341423e+17
        key: Inventore ratione nisi ea.
        name: Ducimus molestiae distinctio eum consequatur numquam.
        teamId: 3.387812945162109e+18
        token: Sed dolorem.
        userId: 8.176206767848327e+18
      - active: false
        expeditionId: 3.0020301235635297e+18
        id: 6.348447899341423e+17
        key: Inventore ratione nisi ea.
        name: Ducimus molestiae distinctio eum consequatur numquam.
        teamId: 3.387812945162109e+18
        token: Sed dolorem.
        userId: 8.176206767848327e+18
      - active: false
        expeditionId: 3.0020301235635297e+18
        id: 6.348447899341423e+17
        key: Inventore ratione nisi ea.
        name: Ducimus molestiae distinctio eum consequatur numquam.
        teamId: 3.387812945162109e+18
        token: Sed dolorem.
        userId: 8.176206767848327e+18
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
    required:
    - deviceSources
    title: 'Mediatype identifier: application/vnd.app.device_sources+json; view=default'
    type: object
  DeviceSummary:
    description: DeviceSummary media type (default view)
    example:
      data_size: 3.1889681637076403e+18
      device_id: Facilis quis blanditiis recusandae est.
      last_file_id: Rem vel est qui ratione sequi et.
      last_file_time: "1980-07-23T03:28:45Z"
      locations:
        entries:
        - coordinates:
          - 0.9290439533835787
          - 0.9290439533835787
          places: Sit labore dolorem vel laboriosam aut.
          time: "1997-06-27T12:34:14Z"
        - coordinates:
          - 0.9290439533835787
          - 0.9290439533835787
          places: Sit labore dolorem vel laboriosam aut.
          time: "1997-06-27T12:34:14Z"
      logs_size: 2.2726114241577267e+18
      name: Dignissimos earum incidunt consequuntur fugit non ut.
      number_of_files: 7.202539005223166e+18
      urls:
        data:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
        details: Debitis sit ratione aut et amet.
        logs:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
    properties:
      data_size:
        example: 3.1889681637076403e+18
        format: int64
        type: integer
      device_id:
        example: Facilis quis blanditiis recusandae est.
        type: string
      last_file_id:
        example: Rem vel est qui ratione sequi et.
        type: string
      last_file_time:
        example: "1980-07-23T03:28:45Z"
        format: date-time
        type: string
      locations:
        $ref: '#/definitions/LocationHistory'
      logs_size:
        example: 2.2726114241577267e+18
        format: int64
        type: integer
      name:
        example: Dignissimos earum incidunt consequuntur fugit non ut.
        type: string
      number_of_files:
        example: 7.202539005223166e+18
        format: int64
        type: integer
      urls:
        $ref: '#/definitions/DeviceSummaryUrls'
    required:
    - device_id
    - number_of_files
    - logs_size
    - data_size
    - last_file_time
    - last_file_id
    - urls
    - locations
    title: 'Mediatype identifier: application/vnd.app.device+json; view=default'
    type: object
  DeviceSummaryCollection:
    description: DeviceSummaryCollection is the media type for an array of DeviceSummary
      (default view)
    example:
    - data_size: 3.1889681637076403e+18
      device_id: Facilis quis blanditiis recusandae est.
      last_file_id: Rem vel est qui ratione sequi et.
      last_file_time: "1980-07-23T03:28:45Z"
      locations:
        entries:
        - coordinates:
          - 0.9290439533835787
          - 0.9290439533835787
          places: Sit labore dolorem vel laboriosam aut.
          time: "1997-06-27T12:34:14Z"
        - coordinates:
          - 0.9290439533835787
          - 0.9290439533835787
          places: Sit labore dolorem vel laboriosam aut.
          time: "1997-06-27T12:34:14Z"
      logs_size: 2.2726114241577267e+18
      name: Dignissimos earum incidunt consequuntur fugit non ut.
      number_of_files: 7.202539005223166e+18
      urls:
        data:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
        details: Debitis sit ratione aut et amet.
        logs:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
    - data_size: 3.1889681637076403e+18
      device_id: Facilis quis blanditiis recusandae est.
      last_file_id: Rem vel est qui ratione sequi et.
      last_file_time: "1980-07-23T03:28:45Z"
      locations:
        entries:
        - coordinates:
          - 0.9290439533835787
          - 0.9290439533835787
          places: Sit labore dolorem vel laboriosam aut.
          time: "1997-06-27T12:34:14Z"
        - coordinates:
          - 0.9290439533835787
          - 0.9290439533835787
          places: Sit labore dolorem vel laboriosam aut.
          time: "1997-06-27T12:34:14Z"
      logs_size: 2.2726114241577267e+18
      name: Dignissimos earum incidunt consequuntur fugit non ut.
      number_of_files: 7.202539005223166e+18
      urls:
        data:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
        details: Debitis sit ratione aut et amet.
        logs:
          csv: Perspiciatis quasi error voluptatem et.
          fkpb: Ducimus quia explicabo unde.
          generate: Provident earum sit enim sapiente assumenda.
          id: Dolores dolores et.
          info: Sit velit quo eveniet in.
    items:
      $ref: '#/definitions/DeviceSummary'
    title: 'Mediatype identifier: application/vnd.app.device+json; type=collection;
      view=default'
    type: array
  DeviceSummaryUrls:
    example:
      data:
        csv: Perspiciatis quasi error voluptatem et.
        fkpb: Ducimus quia explicabo unde.
        generate: Provident earum sit enim sapiente assumenda.
        id: Dolores dolores et.
        info: Sit velit quo eveniet in.
      details: Debitis sit ratione aut et amet.
      logs:
        csv: Perspiciatis quasi error voluptatem et.
        fkpb: Ducimus quia explicabo unde.
        generate: Provident earum sit enim sapiente assumenda.
        id: Dolores dolores et.
        info: Sit velit quo eveniet in.
    properties:
      data:
        $ref: '#/definitions/DeviceFileTypeUrls'
      details:
        example: Debitis sit ratione aut et amet.
        type: string
      logs:
        $ref: '#/definitions/DeviceFileTypeUrls'
    required:
    - details
    - logs
    - data
    title: DeviceSummaryUrls
    type: object
  Devices:
    description: Devices media type (default view)
    example:
      devices:
      - data_size: 3.1889681637076403e+18
        device_id: Facilis quis blanditiis recusandae est.
        last_file_id: Rem vel est qui ratione sequi et.
        last_file_time: "1980-07-23T03:28:45Z"
        locations:
          entries:
          - coordinates:
            - 0.9290439533835787
            - 0.9290439533835787
            places: Sit labore dolorem vel laboriosam aut.
            time: "1997-06-27T12:34:14Z"
          - coordinates:
            - 0.9290439533835787
            - 0.9290439533835787
            places: Sit labore dolorem vel laboriosam aut.
            time: "1997-06-27T12:34:14Z"
        logs_size: 2.2726114241577267e+18
        name: Dignissimos earum incidunt consequuntur fugit non ut.
        number_of_files: 7.202539005223166e+18
        urls:
          data:
            csv: Perspiciatis quasi error voluptatem et.
            fkpb: Ducimus quia explicabo unde.
            generate: Provident earum sit enim sapiente assumenda.
            id: Dolores dolores et.
            info: Sit velit quo eveniet in.
          details: Debitis sit ratione aut et amet.
          logs:
            csv: Perspiciatis quasi error voluptatem et.
            fkpb: Ducimus quia explicabo unde.
            generate: Provident earum sit enim sapiente assumenda.
            id: Dolores dolores et.
            info: Sit velit quo eveniet in.
      - data_size: 3.1889681637076403e+18
        device_id: Facilis quis blanditiis recusandae est.
        last_file_id: Rem vel est qui ratione sequi et.
        last_file_time: "1980-07-23T03:28:45Z"
        locations:
          entries:
          - coordinates:
            - 0.9290439533835787
            - 0.9290439533835787
            places: Sit labore dolorem vel laboriosam aut.
            time: "1997-06-27T12:34:14Z"
          - coordinates:
            - 0.9290439533835787
            - 0.9290439533835787
            places: Sit labore dolorem vel laboriosam aut.
            time: "1997-06-27T12:34:14Z"
        logs_size: 2.2726114241577267e+18
        name: Dignissimos earum incidunt consequuntur fugit non ut.
        number_of_files: 7.202539005223166e+18
        urls:
          data:
            csv: Perspiciatis quasi error voluptatem et.
            fkpb: Ducimus quia explicabo unde.
            generate: Provident earum sit enim sapiente assumenda.
            id: Dolores dolores et.
            info: Sit velit quo eveniet in.
          details: Debitis sit ratione aut et amet.
          logs:
            csv: Perspiciatis quasi error voluptatem et.
            fkpb: Ducimus quia explicabo unde.
            generate: Provident earum sit enim sapiente assumenda.
            id: Dolores dolores et.
            info: Sit velit quo eveniet in.
      - data_size: 3.1889681637076403e+18
        device_id: Facilis quis blanditiis recusandae est.
        last_file_id: Rem vel est qui ratione sequi et.
        last_file_time: "1980-07-23T03:28:45Z"
        locations:
          entries:
          - coordinates:
            - 0.9290439533835787
            - 0.9290439533835787
            places: Sit labore dolorem vel laboriosam aut.
            time: "1997-06-27T12:34:14Z"
          - coordinates:
            - 0.9290439533835787
            - 0.9290439533835787
            places: Sit labore dolorem vel laboriosam aut.
            time: "1997-06-27T12:34:14Z"
        logs_size: 2.2726114241577267e+18
        name: Dignissimos earum incidunt consequuntur fugit non ut.
        number_of_files: 7.202539005223166e+18
        urls:
          data:
            csv: Perspiciatis quasi error voluptatem et.
            fkpb: Ducimus quia explicabo unde.
            generate: Provident earum sit enim sapiente assumenda.
            id: Dolores dolores et.
            info: Sit velit quo eveniet in.
          details: Debitis sit ratione aut et amet.
          logs:
            csv: Perspiciatis quasi error voluptatem et.
            fkpb: Ducimus quia explicabo unde.
            generate: Provident earum sit enim sapiente assumenda.
            id: Dolores dolores et.
            info: Sit velit quo eveniet in.
    properties:
      devices:
        $ref: '#/definitions/DeviceSummaryCollection'
    required:
    - devices
    title: 'Mediatype identifier: application/vnd.app.devices+json; view=default'
    type: object
  Expedition:
    description: Expedition media type (default view)
    example:
      description: Et incidunt illo voluptatem.
      id: 7.204590710558903e+18
      name: Animi sit.
      slug: e7n4jt477a
    properties:
      description:
        example: Et incidunt illo voluptatem.
        type: string
      id:
        example: 7.204590710558903e+18
        format: int64
        type: integer
      name:
        example: Animi sit.
        type: string
      slug:
        example: e7n4jt477a
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.expedition+json; view=default'
    type: object
  ExpeditionCollection:
    description: ExpeditionCollection is the media type for an array of Expedition
      (default view)
    example:
    - description: Et incidunt illo voluptatem.
      id: 7.204590710558903e+18
      name: Animi sit.
      slug: e7n4jt477a
    items:
      $ref: '#/definitions/Expedition'
    title: 'Mediatype identifier: application/vnd.app.expedition+json; type=collection;
      view=default'
    type: array
  Expeditions:
    description: Expeditions media type (default view)
    example:
      expeditions:
      - description: Et incidunt illo voluptatem.
        id: 7.204590710558903e+18
        name: Animi sit.
        slug: e7n4jt477a
      - description: Et incidunt illo voluptatem.
        id: 7.204590710558903e+18
        name: Animi sit.
        slug: e7n4jt477a
    properties:
      expeditions:
        $ref: '#/definitions/ExpeditionCollection'
    required:
    - expeditions
    title: 'Mediatype identifier: application/vnd.app.expeditions+json; view=default'
    type: object
  FieldNoteMedia:
    description: FieldNoteMedia media type (default view)
    example:
      content_type: Amet est accusantium et et.
      created: "1983-10-05T12:28:23Z"
      id: 4.548495070731457e+18
      url: Soluta et aut sunt illo.
      user_id: 8.400842812526035e+18
    properties:
      content_type:
        example: Amet est accusantium et et.
        type: string
      created:
        example: "1983-10-05T12:28:23Z"
        format: date-time
        type: string
      id:
        example: 4.548495070731457e+18
        format: int64
        type: integer
      url:
        example: Soluta et aut sunt illo.
        type: string
      user_id:
        example: 8.400842812526035e+18
        format: int64
        type: integer
    required:
    - id
    - created
    - user_id
    - url
    - content_type
    title: 'Mediatype identifier: application/vnd.app.field_note_media+json; view=default'
    type: object
  FieldNoteQueryResult:
    description: FieldNoteQueryResult media type (default view)
    example:
      category_key: Sed id vitae est nobis odit necessitatibus.
      created: "1997-03-01T16:35:48Z"
      creator: Velit unde.
      id: 7.697525532234681e+18
      media_content_type: Ut est tempora.
      media_id: 1.6102949998262432e+17
      media_url: Voluptatem molestias et.
      note: Qui assumenda ut minima quaerat.
      user_id: 3.5496405368989174e+18
    properties:
      category_key:
        example: Sed id vitae est nobis odit necessitatibus.
        type: string
      created:
        example: "1997-03-01T16:35:48Z"
        format: date-time
        type: string
      creator:
        example: Velit unde.
        type: string
      id:
        example: 7.697525532234681e+18
        format: int64
        type: integer
      media_content_type:
        example: Ut est tempora.
        type: string
      media_id:
        example: 1.6102949998262432e+17
        format: int64
        type: integer
      media_url:
        example: Voluptatem molestias et.
        type: string
      note:
        example: Qui assumenda ut minima quaerat.
        type: string
      user_id:
        example: 3.5496405368989174e+18
        format: int64
        type: integer
    required:
    - id
    - created
    - user_id
    - category_key
    - creator
    title: 'Mediatype identifier: application/vnd.app.field_note_result+json; view=default'
    type: object
  FieldNoteQueryResultCollection:
    description: FieldNoteQueryResultCollection is the media type for an array of
      FieldNoteQueryResult (default view)
    example:
    - category_key: Sed id vitae est nobis odit necessitatibus.
      created: "1997-03-01T16:35:48Z"
      creator: Velit unde.
      id: 7.697525532234681e+18
      media_content_type: Ut est tempora.
      media_id: 1.6102949998262432e+17
      media_url: Voluptatem molestias et.
      note: Qui assumenda ut minima quaerat.
      user_id: 3.5496405368989174e+18
    items:
      $ref: '#/definitions/FieldNoteQueryResult'
    title: 'Mediatype identifier: application/vnd.app.field_note_result+json; type=collection;
      view=default'
    type: array
  FieldNotes:
    description: FieldNotes media type (default view)
    example:
      notes:
      - category_key: Sed id vitae est nobis odit necessitatibus.
        created: "1997-03-01T16:35:48Z"
        creator: Velit unde.
        id: 7.697525532234681e+18
        media_content_type: Ut est tempora.
        media_id: 1.6102949998262432e+17
        media_url: Voluptatem molestias et.
        note: Qui assumenda ut minima quaerat.
        user_id: 3.5496405368989174e+18
      - category_key: Sed id vitae est nobis odit necessitatibus.
        created: "1997-03-01T16:35:48Z"
        creator: Velit unde.
        id: 7.697525532234681e+18
        media_content_type: Ut est tempora.
        media_id: 1.6102949998262432e+17
        media_url: Voluptatem molestias et.
        note: Qui assumenda ut minima quaerat.
        user_id: 3.5496405368989174e+18
    properties:
      notes:
        $ref: '#/definitions/FieldNoteQueryResultCollection'
    required:
    - notes
    title: 'Mediatype identifier: application/vnd.app.field_notes+json; view=default'
    type: object
  FilesStatus:
    description: FilesStatus media type (default view)
    example:
      queued: 7.765681718491663e+18
    properties:
      queued:
        example: 7.765681718491663e+18
        format: int64
        type: integer
    required:
    - queued
    title: 'Mediatype identifier: application/vnd.app.files.status+json; view=default'
    type: object
  FirmwareSummary:
    description: FirmwareSummary media type (default view)
    example:
      etag: Et et eos animi quisquam.
      id: 7.760325814277324e+18
      module: Vero ut aliquid.
      profile: Doloribus dolorum aut dolor hic voluptatibus autem.
      time: "1998-06-18T02:32:59Z"
      url: Doloribus rerum quas deserunt a nam distinctio.
    properties:
      etag:
        example: Et et eos animi quisquam.
        type: string
      id:
        example: 7.760325814277324e+18
        format: int64
        type: integer
      module:
        example: Vero ut aliquid.
        type: string
      profile:
        example: Doloribus dolorum aut dolor hic voluptatibus autem.
        type: string
      time:
        example: "1998-06-18T02:32:59Z"
        format: date-time
        type: string
      url:
        example: Doloribus rerum quas deserunt a nam distinctio.
        type: string
    required:
    - id
    - time
    - etag
    - module
    - profile
    - url
    title: 'Mediatype identifier: application/vnd.app.firmware+json; view=default'
    type: object
  FirmwareSummaryCollection:
    description: FirmwareSummaryCollection is the media type for an array of FirmwareSummary
      (default view)
    example:
    - etag: Et et eos animi quisquam.
      id: 7.760325814277324e+18
      module: Vero ut aliquid.
      profile: Doloribus dolorum aut dolor hic voluptatibus autem.
      time: "1998-06-18T02:32:59Z"
      url: Doloribus rerum quas deserunt a nam distinctio.
    items:
      $ref: '#/definitions/FirmwareSummary'
    title: 'Mediatype identifier: application/vnd.app.firmware+json; type=collection;
      view=default'
    type: array
  Firmwares:
    description: Firmwares media type (default view)
    example:
      firmwares:
      - etag: Et et eos animi quisquam.
        id: 7.760325814277324e+18
        module: Vero ut aliquid.
        profile: Doloribus dolorum aut dolor hic voluptatibus autem.
        time: "1998-06-18T02:32:59Z"
        url: Doloribus rerum quas deserunt a nam distinctio.
    properties:
      firmwares:
        $ref: '#/definitions/FirmwareSummaryCollection'
    required:
    - firmwares
    title: 'Mediatype identifier: application/vnd.app.firmwares+json; view=default'
    type: object
  GeoJSON:
    description: GeoJSON media type (default view)
    example:
      features:
      - geometry:
          coordinates:
          - 0.7675897118809775
          - 0.7675897118809775
          - 0.7675897118809775
          type: Repudiandae eaque necessitatibus voluptatum odit.
        properties:
          Magnam minima cupiditate ullam impedit placeat consequatur.: "2008-09-02T04:04:53Z"
        type: Sequi eum aspernatur nulla rerum aliquam.
      type: Esse dignissimos mollitia.
    properties:
      features:
        $ref: '#/definitions/GeoJSONFeatureCollection'
      type:
        example: Esse dignissimos mollitia.
        type: string
    required:
    - type
    - features
    title: 'Mediatype identifier: application/vnd.app.geojson+json; view=default'
    type: object
  GeoJSONFeature:
    description: GeoJSONFeature media type (default view)
    example:
      geometry:
        coordinates:
        - 0.7675897118809775
        - 0.7675897118809775
        - 0.7675897118809775
        type: Repudiandae eaque necessitatibus voluptatum odit.
      properties:
        Magnam minima cupiditate ullam impedit placeat consequatur.: "2008-09-02T04:04:53Z"
      type: Sequi eum aspernatur nulla rerum aliquam.
    properties:
      geometry:
        $ref: '#/definitions/GeoJSONGeometry'
      properties:
        additionalProperties: true
        example:
          Magnam minima cupiditate ullam impedit placeat consequatur.: "2008-09-02T04:04:53Z"
        type: object
      type:
        example: Sequi eum aspernatur nulla rerum aliquam.
        type: string
    required:
    - type
    - geometry
    - properties
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; view=default'
    type: object
  GeoJSONFeatureCollection:
    description: GeoJSONFeatureCollection is the media type for an array of GeoJSONFeature
      (default view)
    example:
    - geometry:
        coordinates:
        - 0.7675897118809775
        - 0.7675897118809775
        - 0.7675897118809775
        type: Repudiandae eaque necessitatibus voluptatum odit.
      properties:
        Magnam minima cupiditate ullam impedit placeat consequatur.: "2008-09-02T04:04:53Z"
      type: Sequi eum aspernatur nulla rerum aliquam.
    - geometry:
        coordinates:
        - 0.7675897118809775
        - 0.7675897118809775
        - 0.7675897118809775
        type: Repudiandae eaque necessitatibus voluptatum odit.
      properties:
        Magnam minima cupiditate ullam impedit placeat consequatur.: "2008-09-02T04:04:53Z"
      type: Sequi eum aspernatur nulla rerum aliquam.
    items:
      $ref: '#/definitions/GeoJSONFeature'
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; type=collection;
      view=default'
    type: array
  GeoJSONGeometry:
    description: GeoJSONGeometry media type (default view)
    example:
      coordinates:
      - 0.7675897118809775
      - 0.7675897118809775
      - 0.7675897118809775
      type: Repudiandae eaque necessitatibus voluptatum odit.
    properties:
      coordinates:
        example:
        - 0.7675897118809775
        - 0.7675897118809775
        - 0.7675897118809775
        items:
          example: 0.7675897118809775
          format: double
          type: number
        type: array
      type:
        example: Repudiandae eaque necessitatibus voluptatum odit.
        type: string
    required:
    - type
    - coordinates
    title: 'Mediatype identifier: application/vnd.app.geojson-geometry+json; view=default'
    type: object
  ImageRef:
    description: ImageRef media type (default view)
    example:
      url: Hic quibusdam est rem.
    properties:
      url:
        example: Hic quibusdam est rem.
        type: string
    required:
    - url
    title: 'Mediatype identifier: application/vnd.app.imageref+json; view=default'
    type: object
  ImageRefCollection:
    description: ImageRefCollection is the media type for an array of ImageRef (default
      view)
    example:
    - url: Hic quibusdam est rem.
    items:
      $ref: '#/definitions/ImageRef'
    title: 'Mediatype identifier: application/vnd.app.imageref+json; type=collection;
      view=default'
    type: array
  InviteUserPayload:
    example:
      email: Ullam iusto voluptatibus qui fugit iste quibusdam.
    properties:
      email:
        example: Ullam iusto voluptatibus qui fugit iste quibusdam.
        type: string
    required:
    - email
    title: InviteUserPayload
    type: object
  JSONDataMeta:
    example:
      id: 4.2667581563153295e+18
      station:
        firmware:
          build: Soluta minus consequatur.
          hash: Sed magni consequatur et.
          number: Debitis eos iure ea dolorem et magnam.
          timestamp: 5.169380996047036e+18
          version: Delectus ipsa et hic sunt ut fugit.
        id: Ea dolores sit qui perspiciatis adipisci aut.
        modules:
        - id: Et nisi sunt iste expedita.
          kind: 5.6952062682169e+18
          manufacturer: 4.0889983356661555e+18
          name: Praesentium ut cum iusto iusto quia officia.
          sensors:
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          version: 3.6664198543922755e+18
        name: Consectetur occaecati occaecati omnis sint excepturi rerum.
    properties:
      id:
        example: 4.2667581563153295e+18
        format: int64
        type: integer
      station:
        $ref: '#/definitions/JSONDataMetaStation'
    required:
    - id
    title: JSONDataMeta
    type: object
  JSONDataMetaModule:
    example:
      id: Et nisi sunt iste expedita.
      kind: 5.6952062682169e+18
      manufacturer: 4.0889983356661555e+18
      name: Praesentium ut cum iusto iusto quia officia.
      sensors:
      - key: Nobis omnis.
        name: Quia id.
        units: Aliquam error et asperiores qui quas.
      - key: Nobis omnis.
        name: Quia id.
        units: Aliquam error et asperiores qui quas.
      - key: Nobis omnis.
        name: Quia id.
        units: Aliquam error et asperiores qui quas.
      version: 3.6664198543922755e+18
    properties:
      id:
        example: Et nisi sunt iste expedita.
        type: string
      kind:
        example: 5.6952062682169e+18
        format: int64
        type: integer
      manufacturer:
        example: 4.0889983356661555e+18
        format: int64
        type: integer
      name:
        example: Praesentium ut cum iusto iusto quia officia.
        type: string
      sensors:
        example:
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        items:
          $ref: '#/definitions/JSONDataMetaSensor'
        type: array
      version:
        example: 3.6664198543922755e+18
        format: int64
        type: integer
    required:
    - id
    - name
    - kind
    - version
    - manufacturer
    title: JSONDataMetaModule
    type: object
  JSONDataMetaSensor:
    example:
      key: Nobis omnis.
      name: Quia id.
      units: Aliquam error et asperiores qui quas.
    properties:
      key:
        example: Nobis omnis.
        type: string
      name:
        example: Quia id.
        type: string
      units:
        example: Aliquam error et asperiores qui quas.
        type: string
    required:
    - name
    - key
    - units
    title: JSONDataMetaSensor
    type: object
  JSONDataMetaStation:
    example:
      firmware:
        build: Soluta minus consequatur.
        hash: Sed magni consequatur et.
        number: Debitis eos iure ea dolorem et magnam.
        timestamp: 5.169380996047036e+18
        version: Delectus ipsa et hic sunt ut fugit.
      id: Ea dolores sit qui perspiciatis adipisci aut.
      modules:
      - id: Et nisi sunt iste expedita.
        kind: 5.6952062682169e+18
        manufacturer: 4.0889983356661555e+18
        name: Praesentium ut cum iusto iusto quia officia.
        sensors:
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        version: 3.6664198543922755e+18
      name: Consectetur occaecati occaecati omnis sint excepturi rerum.
    properties:
      firmware:
        $ref: '#/definitions/JSONDataMetaStationFirmware'
      id:
        example: Ea dolores sit qui perspiciatis adipisci aut.
        type: string
      modules:
        example:
        - id: Et nisi sunt iste expedita.
          kind: 5.6952062682169e+18
          manufacturer: 4.0889983356661555e+18
          name: Praesentium ut cum iusto iusto quia officia.
          sensors:
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          version: 3.6664198543922755e+18
        items:
          $ref: '#/definitions/JSONDataMetaModule'
        type: array
      name:
        example: Consectetur occaecati occaecati omnis sint excepturi rerum.
        type: string
    required:
    - id
    - name
    - modules
    - firmware
    title: JSONDataMetaStation
    type: object
  JSONDataMetaStationFirmware:
    example:
      build: Soluta minus consequatur.
      hash: Sed magni consequatur et.
      number: Debitis eos iure ea dolorem et magnam.
      timestamp: 5.169380996047036e+18
      version: Delectus ipsa et hic sunt ut fugit.
    properties:
      build:
        example: Soluta minus consequatur.
        type: string
      hash:
        example: Sed magni consequatur et.
        type: string
      number:
        example: Debitis eos iure ea dolorem et magnam.
        type: string
      timestamp:
        example: 5.169380996047036e+18
        format: int64
        type: integer
      version:
        example: Delectus ipsa et hic sunt ut fugit.
        type: string
    required:
    - version
    - build
    - number
    - timestamp
    - hash
    title: JSONDataMetaStationFirmware
    type: object
  JSONDataResponse:
    description: JSONDataResponse media type (default view)
    example:
      versions:
      - data:
        - d:
            Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
          id: 3.7495146985014707e+18
          location:
          - 0.8794476882696538
          - 0.8794476882696538
          - 0.8794476882696538
          metas:
          - 1.576519638086125e+18
          time: 5.011953152089054e+18
        meta:
          id: 4.2667581563153295e+18
          station:
            firmware:
              build: Soluta minus consequatur.
              hash: Sed magni consequatur et.
              number: Debitis eos iure ea dolorem et magnam.
              timestamp: 5.169380996047036e+18
              version: Delectus ipsa et hic sunt ut fugit.
            id: Ea dolores sit qui perspiciatis adipisci aut.
            modules:
            - id: Et nisi sunt iste expedita.
              kind: 5.6952062682169e+18
              manufacturer: 4.0889983356661555e+18
              name: Praesentium ut cum iusto iusto quia officia.
              sensors:
              - key: Nobis omnis.
                name: Quia id.
                units: Aliquam error et asperiores qui quas.
              - key: Nobis omnis.
                name: Quia id.
                units: Aliquam error et asperiores qui quas.
              - key: Nobis omnis.
                name: Quia id.
                units: Aliquam error et asperiores qui quas.
              version: 3.6664198543922755e+18
            name: Consectetur occaecati occaecati omnis sint excepturi rerum.
    properties:
      versions:
        example:
        - data:
          - d:
              Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
            id: 3.7495146985014707e+18
            location:
            - 0.8794476882696538
            - 0.8794476882696538
            - 0.8794476882696538
            metas:
            - 1.576519638086125e+18
            time: 5.011953152089054e+18
          meta:
            id: 4.2667581563153295e+18
            station:
              firmware:
                build: Soluta minus consequatur.
                hash: Sed magni consequatur et.
                number: Debitis eos iure ea dolorem et magnam.
                timestamp: 5.169380996047036e+18
                version: Delectus ipsa et hic sunt ut fugit.
              id: Ea dolores sit qui perspiciatis adipisci aut.
              modules:
              - id: Et nisi sunt iste expedita.
                kind: 5.6952062682169e+18
                manufacturer: 4.0889983356661555e+18
                name: Praesentium ut cum iusto iusto quia officia.
                sensors:
                - key: Nobis omnis.
                  name: Quia id.
                  units: Aliquam error et asperiores qui quas.
                - key: Nobis omnis.
                  name: Quia id.
                  units: Aliquam error et asperiores qui quas.
                - key: Nobis omnis.
                  name: Quia id.
                  units: Aliquam error et asperiores qui quas.
                version: 3.6664198543922755e+18
              name: Consectetur occaecati occaecati omnis sint excepturi rerum.
        items:
          $ref: '#/definitions/JSONDataVersion'
        type: array
    required:
    - versions
    title: 'Mediatype identifier: application/vnd.app.device.json.data+json; view=default'
    type: object
  JSONDataRow:
    example:
      d:
        Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
      id: 3.7495146985014707e+18
      location:
      - 0.8794476882696538
      - 0.8794476882696538
      - 0.8794476882696538
      metas:
      - 1.576519638086125e+18
      time: 5.011953152089054e+18
    properties:
      d:
        additionalProperties: true
        example:
          Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
        type: object
      id:
        example: 3.7495146985014707e+18
        format: int64
        type: integer
      location:
        example:
        - 0.8794476882696538
        - 0.8794476882696538
        - 0.8794476882696538
        items:
          example: 0.8794476882696538
          format: double
          type: number
        type: array
      metas:
        example:
        - 1.576519638086125e+18
        items:
          example: 1.576519638086125e+18
          format: int64
          type: integer
        type: array
      time:
        example: 5.011953152089054e+18
        format: int64
        type: integer
    required:
    - id
    - time
    - location
    - d
    title: JSONDataRow
    type: object
  JSONDataStatistics:
    example:
      end: "1997-01-05T08:59:01Z"
      number_of_data_records: 4.791279341070292e+18
      number_of_meta_records: 6.939366097402898e+18
      start: "2003-03-21T08:39:07Z"
    properties:
      end:
        example: "1997-01-05T08:59:01Z"
        format: date-time
        type: string
      number_of_data_records:
        example: 4.791279341070292e+18
        format: int64
        type: integer
      number_of_meta_records:
        example: 6.939366097402898e+18
        format: int64
        type: integer
      start:
        example: "2003-03-21T08:39:07Z"
        format: date-time
        type: string
    required:
    - start
    - end
    - number_of_data_records
    - number_of_meta_records
    title: JSONDataStatistics
    type: object
  JSONDataSummaryResponse:
    description: JSONDataSummaryResponse media type (default view)
    example:
      data:
      - d:
          Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
        id: 3.7495146985014707e+18
        location:
        - 0.8794476882696538
        - 0.8794476882696538
        - 0.8794476882696538
        metas:
        - 1.576519638086125e+18
        time: 5.011953152089054e+18
      - d:
          Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
        id: 3.7495146985014707e+18
        location:
        - 0.8794476882696538
        - 0.8794476882696538
        - 0.8794476882696538
        metas:
        - 1.576519638086125e+18
        time: 5.011953152089054e+18
      - d:
          Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
        id: 3.7495146985014707e+18
        location:
        - 0.8794476882696538
        - 0.8794476882696538
        - 0.8794476882696538
        metas:
        - 1.576519638086125e+18
        time: 5.011953152089054e+18
      modules:
      - id: Et nisi sunt iste expedita.
        kind: 5.6952062682169e+18
        manufacturer: 4.0889983356661555e+18
        name: Praesentium ut cum iusto iusto quia officia.
        sensors:
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        version: 3.6664198543922755e+18
      - id: Et nisi sunt iste expedita.
        kind: 5.6952062682169e+18
        manufacturer: 4.0889983356661555e+18
        name: Praesentium ut cum iusto iusto quia officia.
        sensors:
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        version: 3.6664198543922755e+18
      - id: Et nisi sunt iste expedita.
        kind: 5.6952062682169e+18
        manufacturer: 4.0889983356661555e+18
        name: Praesentium ut cum iusto iusto quia officia.
        sensors:
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        - key: Nobis omnis.
          name: Quia id.
          units: Aliquam error et asperiores qui quas.
        version: 3.6664198543922755e+18
      statistics:
        end: "1997-01-05T08:59:01Z"
        number_of_data_records: 4.791279341070292e+18
        number_of_meta_records: 6.939366097402898e+18
        start: "2003-03-21T08:39:07Z"
    properties:
      data:
        example:
        - d:
            Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
          id: 3.7495146985014707e+18
          location:
          - 0.8794476882696538
          - 0.8794476882696538
          - 0.8794476882696538
          metas:
          - 1.576519638086125e+18
          time: 5.011953152089054e+18
        - d:
            Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
          id: 3.7495146985014707e+18
          location:
          - 0.8794476882696538
          - 0.8794476882696538
          - 0.8794476882696538
          metas:
          - 1.576519638086125e+18
          time: 5.011953152089054e+18
        - d:
            Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
          id: 3.7495146985014707e+18
          location:
          - 0.8794476882696538
          - 0.8794476882696538
          - 0.8794476882696538
          metas:
          - 1.576519638086125e+18
          time: 5.011953152089054e+18
        items:
          $ref: '#/definitions/JSONDataRow'
        type: array
      modules:
        example:
        - id: Et nisi sunt iste expedita.
          kind: 5.6952062682169e+18
          manufacturer: 4.0889983356661555e+18
          name: Praesentium ut cum iusto iusto quia officia.
          sensors:
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          version: 3.6664198543922755e+18
        - id: Et nisi sunt iste expedita.
          kind: 5.6952062682169e+18
          manufacturer: 4.0889983356661555e+18
          name: Praesentium ut cum iusto iusto quia officia.
          sensors:
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          version: 3.6664198543922755e+18
        - id: Et nisi sunt iste expedita.
          kind: 5.6952062682169e+18
          manufacturer: 4.0889983356661555e+18
          name: Praesentium ut cum iusto iusto quia officia.
          sensors:
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          - key: Nobis omnis.
            name: Quia id.
            units: Aliquam error et asperiores qui quas.
          version: 3.6664198543922755e+18
        items:
          $ref: '#/definitions/JSONDataMetaModule'
        type: array
      statistics:
        $ref: '#/definitions/JSONDataStatistics'
    required:
    - modules
    - data
    - statistics
    title: 'Mediatype identifier: application/vnd.app.device.json.data.summary+json;
      view=default'
    type: object
  JSONDataVersion:
    example:
      data:
      - d:
          Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
        id: 3.7495146985014707e+18
        location:
        - 0.8794476882696538
        - 0.8794476882696538
        - 0.8794476882696538
        metas:
        - 1.576519638086125e+18
        time: 5.011953152089054e+18
      meta:
        id: 4.2667581563153295e+18
        station:
          firmware:
            build: Soluta minus consequatur.
            hash: Sed magni consequatur et.
            number: Debitis eos iure ea dolorem et magnam.
            timestamp: 5.169380996047036e+18
            version: Delectus ipsa et hic sunt ut fugit.
          id: Ea dolores sit qui perspiciatis adipisci aut.
          modules:
          - id: Et nisi sunt iste expedita.
            kind: 5.6952062682169e+18
            manufacturer: 4.0889983356661555e+18
            name: Praesentium ut cum iusto iusto quia officia.
            sensors:
            - key: Nobis omnis.
              name: Quia id.
              units: Aliquam error et asperiores qui quas.
            - key: Nobis omnis.
              name: Quia id.
              units: Aliquam error et asperiores qui quas.
            - key: Nobis omnis.
              name: Quia id.
              units: Aliquam error et asperiores qui quas.
            version: 3.6664198543922755e+18
          name: Consectetur occaecati occaecati omnis sint excepturi rerum.
    properties:
      data:
        example:
        - d:
            Repudiandae dignissimos.: 8a8ce54f-fdd1-4749-b6d5-46300f815971
          id: 3.7495146985014707e+18
          location:
          - 0.8794476882696538
          - 0.8794476882696538
          - 0.8794476882696538
          metas:
          - 1.576519638086125e+18
          time: 5.011953152089054e+18
        items:
          $ref: '#/definitions/JSONDataRow'
        type: array
      meta:
        $ref: '#/definitions/JSONDataMeta'
    title: JSONDataVersion
    type: object
  LastUpload:
    description: LastUpload media type (default view)
    example:
      blocks:
      - 1.566805123913401e+18
      - 1.566805123913401e+18
      - 1.566805123913401e+18
      id: 6.474398459750394e+18
      size: 1.9460409358880453e+18
      time: "1986-03-10T00:22:10Z"
      type: Soluta aut consequuntur.
      upload_id: Tempore facere tempora ut eveniet alias fuga.
      url: Alias voluptates repellendus aut.
    properties:
      blocks:
        example:
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        items:
          example: 1.566805123913401e+18
          format: int64
          type: integer
        type: array
      id:
        example: 6.474398459750394e+18
        format: int64
        type: integer
      size:
        example: 1.9460409358880453e+18
        format: int64
        type: integer
      time:
        example: "1986-03-10T00:22:10Z"
        format: date-time
        type: string
      type:
        example: Soluta aut consequuntur.
        type: string
      upload_id:
        example: Tempore facere tempora ut eveniet alias fuga.
        type: string
      url:
        example: Alias voluptates repellendus aut.
        type: string
    required:
    - id
    - time
    - upload_id
    - size
    - url
    - type
    - blocks
    title: 'Mediatype identifier: application/vnd.app.upload+json; view=default'
    type: object
  LastUploadCollection:
    description: LastUploadCollection is the media type for an array of LastUpload
      (default view)
    example:
    - blocks:
      - 1.566805123913401e+18
      - 1.566805123913401e+18
      - 1.566805123913401e+18
      id: 6.474398459750394e+18
      size: 1.9460409358880453e+18
      time: "1986-03-10T00:22:10Z"
      type: Soluta aut consequuntur.
      upload_id: Tempore facere tempora ut eveniet alias fuga.
      url: Alias voluptates repellendus aut.
    - blocks:
      - 1.566805123913401e+18
      - 1.566805123913401e+18
      - 1.566805123913401e+18
      id: 6.474398459750394e+18
      size: 1.9460409358880453e+18
      time: "1986-03-10T00:22:10Z"
      type: Soluta aut consequuntur.
      upload_id: Tempore facere tempora ut eveniet alias fuga.
      url: Alias voluptates repellendus aut.
    items:
      $ref: '#/definitions/LastUpload'
    title: 'Mediatype identifier: application/vnd.app.upload+json; type=collection;
      view=default'
    type: array
  Location:
    description: Location media type (default view)
    example:
      location: http://bergnaum.net/kristopher
    properties:
      location:
        example: http://bergnaum.net/kristopher
        format: uri
        type: string
    required:
    - location
    title: 'Mediatype identifier: application/vnd.app.location+json; view=default'
    type: object
  LocationEntry:
    description: LocationEntry media type (default view)
    example:
      coordinates:
      - 0.9290439533835787
      - 0.9290439533835787
      places: Sit labore dolorem vel laboriosam aut.
      time: "1997-06-27T12:34:14Z"
    properties:
      coordinates:
        example:
        - 0.9290439533835787
        - 0.9290439533835787
        items:
          example: 0.9290439533835787
          format: double
          type: number
        type: array
      places:
        example: Sit labore dolorem vel laboriosam aut.
        type: string
      time:
        example: "1997-06-27T12:34:14Z"
        format: date-time
        type: string
    required:
    - time
    - coordinates
    title: 'Mediatype identifier: application/vnd.app.location.entry+json; view=default'
    type: object
  LocationEntryCollection:
    description: LocationEntryCollection is the media type for an array of LocationEntry
      (default view)
    example:
    - coordinates:
      - 0.9290439533835787
      - 0.9290439533835787
      places: Sit labore dolorem vel laboriosam aut.
      time: "1997-06-27T12:34:14Z"
    items:
      $ref: '#/definitions/LocationEntry'
    title: 'Mediatype identifier: application/vnd.app.location.entry+json; type=collection;
      view=default'
    type: array
  LocationHistory:
    description: LocationHistory media type (default view)
    example:
      entries:
      - coordinates:
        - 0.9290439533835787
        - 0.9290439533835787
        places: Sit labore dolorem vel laboriosam aut.
        time: "1997-06-27T12:34:14Z"
      - coordinates:
        - 0.9290439533835787
        - 0.9290439533835787
        places: Sit labore dolorem vel laboriosam aut.
        time: "1997-06-27T12:34:14Z"
    properties:
      entries:
        $ref: '#/definitions/LocationEntryCollection'
    required:
    - entries
    title: 'Mediatype identifier: application/vnd.app.location.history+json; view=default'
    type: object
  LoginPayload:
    example:
      email: mariane@naderroberts.org
      password: ijxdfc23z9
    properties:
      email:
        example: mariane@naderroberts.org
        format: email
        type: string
      password:
        example: ijxdfc23z9
        minLength: 10
        type: string
    required:
    - email
    - password
    title: LoginPayload
    type: object
  MapFeatures:
    description: MapFeatures media type (default view)
    example:
      geoJSON:
        geo:
          features:
          - geometry:
              coordinates:
              - 0.7675897118809775
              - 0.7675897118809775
              - 0.7675897118809775
              type: Repudiandae eaque necessitatibus voluptatum odit.
            properties:
              Magnam minima cupiditate ullam impedit placeat consequatur.: "2008-09-02T04:04:53Z"
            type: Sequi eum aspernatur nulla rerum aliquam.
          type: Esse dignissimos mollitia.
        hasMore: false
        nextUrl: Autem soluta error.
        previousUrl: Non aut rem.
      geometries:
      - geometry:
        - - 0.9682483955411658
        - - 0.9682483955411658
        - - 0.9682483955411658
        id: 5.41219004578842e+18
        sourceId: 1.6901081034442964e+18
      spatial:
      - centroid:
        - 0.5408775402802485
        endTime: "2005-01-11T03:51:21Z"
        envelope:
        - - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
        id: 8.282634339368904e+18
        numberOfFeatures: 8.252764702077084e+18
        radius: 0.729149602582465
        sourceId: 6.822439840585685e+18
        startTime: "2005-03-28T09:27:43Z"
      - centroid:
        - 0.5408775402802485
        endTime: "2005-01-11T03:51:21Z"
        envelope:
        - - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
        id: 8.282634339368904e+18
        numberOfFeatures: 8.252764702077084e+18
        radius: 0.729149602582465
        sourceId: 6.822439840585685e+18
        startTime: "2005-03-28T09:27:43Z"
      temporal:
      - centroid:
        - 0.5408775402802485
        endTime: "2005-01-11T03:51:21Z"
        envelope:
        - - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
        id: 8.282634339368904e+18
        numberOfFeatures: 8.252764702077084e+18
        radius: 0.729149602582465
        sourceId: 6.822439840585685e+18
        startTime: "2005-03-28T09:27:43Z"
      - centroid:
        - 0.5408775402802485
        endTime: "2005-01-11T03:51:21Z"
        envelope:
        - - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
        id: 8.282634339368904e+18
        numberOfFeatures: 8.252764702077084e+18
        radius: 0.729149602582465
        sourceId: 6.822439840585685e+18
        startTime: "2005-03-28T09:27:43Z"
    properties:
      geoJSON:
        $ref: '#/definitions/PagedGeoJSON'
      geometries:
        $ref: '#/definitions/ClusterGeometrySummaryCollection'
      spatial:
        $ref: '#/definitions/ClusterSummaryCollection'
      temporal:
        $ref: '#/definitions/ClusterSummaryCollection'
    required:
    - geoJSON
    - temporal
    - spatial
    - geometries
    title: 'Mediatype identifier: application/vnd.app.map_features+json; view=default'
    type: object
  MediaReferenceResponse:
    description: MediaReferenceResponse media type (default view)
    example:
      id: 8.930839534385578e+18
      url: Eos asperiores non nam.
    properties:
      id:
        example: 8.930839534385578e+18
        format: int64
        type: integer
      url:
        example: Eos asperiores non nam.
        type: string
    required:
    - id
    - url
    title: 'Mediatype identifier: application/vnd.app.media+json; view=default'
    type: object
  MyDataUrls:
    example:
      csv: Nobis quam maxime sunt exercitationem.
      fkpb: Dolores non minima.
    properties:
      csv:
        example: Nobis quam maxime sunt exercitationem.
        type: string
      fkpb:
        example: Dolores non minima.
        type: string
    required:
    - csv
    - fkpb
    title: MyDataUrls
    type: object
  MySimpleSummary:
    description: MySimpleSummary media type (default view)
    example:
      center:
      - 0.39175239153901265
      urls:
        csv: Nobis quam maxime sunt exercitationem.
        fkpb: Dolores non minima.
    properties:
      center:
        example:
        - 0.39175239153901265
        items:
          example: 0.39175239153901265
          format: double
          type: number
        type: array
      urls:
        $ref: '#/definitions/MyDataUrls'
    required:
    - urls
    - center
    title: 'Mediatype identifier: application/vnd.app.simple_summary+json; view=default'
    type: object
  PagedGeoJSON:
    description: PagedGeoJSON media type (default view)
    example:
      geo:
        features:
        - geometry:
            coordinates:
            - 0.7675897118809775
            - 0.7675897118809775
            - 0.7675897118809775
            type: Repudiandae eaque necessitatibus voluptatum odit.
          properties:
            Magnam minima cupiditate ullam impedit placeat consequatur.: "2008-09-02T04:04:53Z"
          type: Sequi eum aspernatur nulla rerum aliquam.
        type: Esse dignissimos mollitia.
      hasMore: false
      nextUrl: Autem soluta error.
      previousUrl: Non aut rem.
    properties:
      geo:
        $ref: '#/definitions/GeoJSON'
      hasMore:
        example: false
        type: boolean
      nextUrl:
        example: Autem soluta error.
        type: string
      previousUrl:
        example: Non aut rem.
        type: string
    required:
    - nextUrl
    - geo
    - hasMore
    title: 'Mediatype identifier: application/vnd.app.paged_geojson+json; view=default'
    type: object
  Project:
    description: Project media type (default view)
    example:
      description: Praesentium itaque.
      end_time: "2005-06-18T06:38:14Z"
      goal: Illum aut.
      id: 8.596446829886798e+18
      location: Ipsam magnam molestiae a sed.
      media_content_type: Rerum accusantium quia mollitia.
      media_url: Rerum dolor voluptas doloremque ea pariatur ut.
      name: Aut deleniti dolorem sunt.
      private: false
      slug: mrted8hycr
      start_time: "2014-10-04T07:38:15Z"
      tags: Doloribus et labore voluptatem.
    properties:
      description:
        example: Praesentium itaque.
        type: string
      end_time:
        example: "2005-06-18T06:38:14Z"
        format: date-time
        type: string
      goal:
        example: Illum aut.
        type: string
      id:
        example: 8.596446829886798e+18
        format: int64
        type: integer
      location:
        example: Ipsam magnam molestiae a sed.
        type: string
      media_content_type:
        example: Rerum accusantium quia mollitia.
        type: string
      media_url:
        example: Rerum dolor voluptas doloremque ea pariatur ut.
        type: string
      name:
        example: Aut deleniti dolorem sunt.
        type: string
      private:
        example: false
        type: boolean
      slug:
        example: mrted8hycr
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
      start_time:
        example: "2014-10-04T07:38:15Z"
        format: date-time
        type: string
      tags:
        example: Doloribus et labore voluptatem.
        type: string
    required:
    - id
    - name
    - slug
    - description
    - goal
    - location
    - private
    - tags
    title: 'Mediatype identifier: application/vnd.app.project+json; view=default'
    type: object
  ProjectAdministrator:
    description: ProjectAdministrator media type (default view)
    example:
      projectId: 1.2833427085391667e+18
      userId: 6.297057674710826e+18
    properties:
      projectId:
        example: 1.2833427085391667e+18
        format: int64
        type: integer
      userId:
        example: 6.297057674710826e+18
        format: int64
        type: integer
    required:
    - projectId
    - userId
    title: 'Mediatype identifier: application/vnd.app.administrator+json; view=default'
    type: object
  ProjectAdministratorCollection:
    description: ProjectAdministratorCollection is the media type for an array of
      ProjectAdministrator (default view)
    example:
    - projectId: 1.2833427085391667e+18
      userId: 6.297057674710826e+18
    - projectId: 1.2833427085391667e+18
      userId: 6.297057674710826e+18
    - projectId: 1.2833427085391667e+18
      userId: 6.297057674710826e+18
    items:
      $ref: '#/definitions/ProjectAdministrator'
    title: 'Mediatype identifier: application/vnd.app.administrator+json; type=collection;
      view=default'
    type: array
  ProjectAdministrators:
    description: ProjectAdministrators media type (default view)
    example:
      administrators:
      - projectId: 1.2833427085391667e+18
        userId: 6.297057674710826e+18
      - projectId: 1.2833427085391667e+18
        userId: 6.297057674710826e+18
    properties:
      administrators:
        $ref: '#/definitions/ProjectAdministratorCollection'
    required:
    - administrators
    title: 'Mediatype identifier: application/vnd.app.administrators+json; view=default'
    type: object
  ProjectCollection:
    description: ProjectCollection is the media type for an array of Project (default
      view)
    example:
    - description: Praesentium itaque.
      end_time: "2005-06-18T06:38:14Z"
      goal: Illum aut.
      id: 8.596446829886798e+18
      location: Ipsam magnam molestiae a sed.
      media_content_type: Rerum accusantium quia mollitia.
      media_url: Rerum dolor voluptas doloremque ea pariatur ut.
      name: Aut deleniti dolorem sunt.
      private: false
      slug: mrted8hycr
      start_time: "2014-10-04T07:38:15Z"
      tags: Doloribus et labore voluptatem.
    - description: Praesentium itaque.
      end_time: "2005-06-18T06:38:14Z"
      goal: Illum aut.
      id: 8.596446829886798e+18
      location: Ipsam magnam molestiae a sed.
      media_content_type: Rerum accusantium quia mollitia.
      media_url: Rerum dolor voluptas doloremque ea pariatur ut.
      name: Aut deleniti dolorem sunt.
      private: false
      slug: mrted8hycr
      start_time: "2014-10-04T07:38:15Z"
      tags: Doloribus et labore voluptatem.
    items:
      $ref: '#/definitions/Project'
    title: 'Mediatype identifier: application/vnd.app.project+json; type=collection;
      view=default'
    type: array
  Projects:
    description: Projects media type (default view)
    example:
      projects:
      - description: Praesentium itaque.
        end_time: "2005-06-18T06:38:14Z"
        goal: Illum aut.
        id: 8.596446829886798e+18
        location: Ipsam magnam molestiae a sed.
        media_content_type: Rerum accusantium quia mollitia.
        media_url: Rerum dolor voluptas doloremque ea pariatur ut.
        name: Aut deleniti dolorem sunt.
        private: false
        slug: mrted8hycr
        start_time: "2014-10-04T07:38:15Z"
        tags: Doloribus et labore voluptatem.
      - description: Praesentium itaque.
        end_time: "2005-06-18T06:38:14Z"
        goal: Illum aut.
        id: 8.596446829886798e+18
        location: Ipsam magnam molestiae a sed.
        media_content_type: Rerum accusantium quia mollitia.
        media_url: Rerum dolor voluptas doloremque ea pariatur ut.
        name: Aut deleniti dolorem sunt.
        private: false
        slug: mrted8hycr
        start_time: "2014-10-04T07:38:15Z"
        tags: Doloribus et labore voluptatem.
      - description: Praesentium itaque.
        end_time: "2005-06-18T06:38:14Z"
        goal: Illum aut.
        id: 8.596446829886798e+18
        location: Ipsam magnam molestiae a sed.
        media_content_type: Rerum accusantium quia mollitia.
        media_url: Rerum dolor voluptas doloremque ea pariatur ut.
        name: Aut deleniti dolorem sunt.
        private: false
        slug: mrted8hycr
        start_time: "2014-10-04T07:38:15Z"
        tags: Doloribus et labore voluptatem.
    properties:
      projects:
        $ref: '#/definitions/ProjectCollection'
    required:
    - projects
    title: 'Mediatype identifier: application/vnd.app.projects+json; view=default'
    type: object
  QueryData:
    description: QueryData media type (default view)
    example:
      series:
      - name: Inventore incidunt quia consequatur quibusdam.
        rows:
        - "2010-02-01T11:52:43Z"
        - "2010-02-01T11:52:43Z"
      - name: Inventore incidunt quia consequatur quibusdam.
        rows:
        - "2010-02-01T11:52:43Z"
        - "2010-02-01T11:52:43Z"
      - name: Inventore incidunt quia consequatur quibusdam.
        rows:
        - "2010-02-01T11:52:43Z"
        - "2010-02-01T11:52:43Z"
    properties:
      series:
        $ref: '#/definitions/SeriesDataCollection'
    required:
    - series
    title: 'Mediatype identifier: application/vnd.app.queried+json; view=default'
    type: object
  ReadingSummary:
    description: ReadingSummary media type (default view)
    example:
      name: Ut in quaerat et est ea.
    properties:
      name:
        example: Ut in quaerat et est ea.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; view=default'
    type: object
  ReadingSummaryCollection:
    description: ReadingSummaryCollection is the media type for an array of ReadingSummary
      (default view)
    example:
    - name: Ut in quaerat et est ea.
    - name: Ut in quaerat et est ea.
    - name: Ut in quaerat et est ea.
    items:
      $ref: '#/definitions/ReadingSummary'
    title: 'Mediatype identifier: application/vnd.app.reading_summary+json; type=collection;
      view=default'
    type: array
  RefreshUserPayload:
    example:
      refresh_token: Est sint totam distinctio.
    properties:
      refresh_token:
        example: Est sint totam distinctio.
        type: string
    required:
    - refresh_token
    title: RefreshUserPayload
    type: object
  RemoveUserPayload:
    example:
      email: Dolorem explicabo.
    properties:
      email:
        example: Dolorem explicabo.
        type: string
    required:
    - email
    title: RemoveUserPayload
    type: object
  SeriesData:
    description: SeriesData media type (default view)
    example:
      name: Inventore incidunt quia consequatur quibusdam.
      rows:
      - "2010-02-01T11:52:43Z"
      - "2010-02-01T11:52:43Z"
    properties:
      name:
        example: Inventore incidunt quia consequatur quibusdam.
        type: string
      rows:
        example:
        - "2010-02-01T11:52:43Z"
        - "2010-02-01T11:52:43Z"
        items:
          example: "2010-02-01T11:52:43Z"
        type: array
    required:
    - name
    - rows
    title: 'Mediatype identifier: application/vnd.app.series+json; view=default'
    type: object
  SeriesDataCollection:
    description: SeriesDataCollection is the media type for an array of SeriesData
      (default view)
    example:
    - name: Inventore incidunt quia consequatur quibusdam.
      rows:
      - "2010-02-01T11:52:43Z"
      - "2010-02-01T11:52:43Z"
    items:
      $ref: '#/definitions/SeriesData'
    title: 'Mediatype identifier: application/vnd.app.series+json; type=collection;
      view=default'
    type: array
  Source:
    description: Source media type (default view)
    example:
      active: true
      expeditionId: 1.7375997011652145e+18
      id: 6.873411627035379e+18
      name: Aut sunt aut qui asperiores.
      teamId: 8.587413556413005e+18
      userId: 8.058484566835429e+18
    properties:
      active:
        example: true
        type: boolean
      expeditionId:
        example: 1.7375997011652145e+18
        format: int64
        type: integer
      id:
        example: 6.873411627035379e+18
        format: int64
        type: integer
      name:
        example: Aut sunt aut qui asperiores.
        type: string
      teamId:
        example: 8.587413556413005e+18
        format: int64
        type: integer
      userId:
        example: 8.058484566835429e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    title: 'Mediatype identifier: application/vnd.app.source+json; view=default'
    type: object
  SourceSummary:
    description: SourceSummary media type (default view)
    example:
      id: 5.831818751101039e+18
      name: Laudantium nam commodi consectetur molestiae explicabo.
      readings:
      - name: Ut in quaerat et est ea.
      - name: Ut in quaerat et est ea.
      spatial:
      - centroid:
        - 0.5408775402802485
        endTime: "2005-01-11T03:51:21Z"
        envelope:
        - - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
        id: 8.282634339368904e+18
        numberOfFeatures: 8.252764702077084e+18
        radius: 0.729149602582465
        sourceId: 6.822439840585685e+18
        startTime: "2005-03-28T09:27:43Z"
      temporal:
      - centroid:
        - 0.5408775402802485
        endTime: "2005-01-11T03:51:21Z"
        envelope:
        - - 0.7520434281331757
          - 0.7520434281331757
          - 0.7520434281331757
        id: 8.282634339368904e+18
        numberOfFeatures: 8.252764702077084e+18
        radius: 0.729149602582465
        sourceId: 6.822439840585685e+18
        startTime: "2005-03-28T09:27:43Z"
    properties:
      id:
        example: 5.831818751101039e+18
        format: int64
        type: integer
      name:
        example: Laudantium nam commodi consectetur molestiae explicabo.
        type: string
      readings:
        $ref: '#/definitions/ReadingSummaryCollection'
      spatial:
        $ref: '#/definitions/ClusterSummaryCollection'
      temporal:
        $ref: '#/definitions/ClusterSummaryCollection'
    required:
    - id
    - name
    - temporal
    - spatial
    title: 'Mediatype identifier: application/vnd.app.source_summary+json; view=default'
    type: object
  SourceToken:
    description: SourceToken media type (default view)
    example:
      expeditionId: 2.703861609118365e+18
      id: 8.418426305881487e+18
      token: Voluptatibus omnis recusandae.
    properties:
      expeditionId:
        example: 2.703861609118365e+18
        format: int64
        type: integer
      id:
        example: 8.418426305881487e+18
        format: int64
        type: integer
      token:
        example: Voluptatibus omnis recusandae.
        type: string
    required:
    - id
    - token
    - expeditionId
    title: 'Mediatype identifier: application/vnd.app.source_token+json; view=default'
    type: object
  SourceTokenCollection:
    description: SourceTokenCollection is the media type for an array of SourceToken
      (default view)
    example:
    - expeditionId: 2.703861609118365e+18
      id: 8.418426305881487e+18
      token: Voluptatibus omnis recusandae.
    - expeditionId: 2.703861609118365e+18
      id: 8.418426305881487e+18
      token: Voluptatibus omnis recusandae.
    - expeditionId: 2.703861609118365e+18
      id: 8.418426305881487e+18
      token: Voluptatibus omnis recusandae.
    items:
      $ref: '#/definitions/SourceToken'
    title: 'Mediatype identifier: application/vnd.app.source_token+json; type=collection;
      view=default'
    type: array
  SourceTokens:
    description: SourceTokens media type (default view)
    example:
      sourceTokens:
      - expeditionId: 2.703861609118365e+18
        id: 8.418426305881487e+18
        token: Voluptatibus omnis recusandae.
    properties:
      sourceTokens:
        $ref: '#/definitions/SourceTokenCollection'
    required:
    - sourceTokens
    title: 'Mediatype identifier: application/vnd.app.source_tokens+json; view=default'
    type: object
  Sources:
    description: Sources media type (default view)
    example:
      deviceSources:
      - active: false
        expeditionId: 3.0020301235635297e+18
        id: 6.348447899341423e+17
        key: Inventore ratione nisi ea.
        name: Ducimus molestiae distinctio eum consequatur numquam.
        teamId: 3.387812945162109e+18
        token: Sed dolorem.
        userId: 8.176206767848327e+18
      twitterAccountSources:
      - expeditionId: 4.934842300299876e+18
        id: 1.2625324203172908e+18
        name: Veritatis quod voluptas non sit id.
        screenName: Ipsa quam consectetur rerum.
        teamId: 8.412734260017135e+18
        twitterAccountId: 1.35481960486938e+18
        userId: 7.255936802332494e+18
      - expeditionId: 4.934842300299876e+18
        id: 1.2625324203172908e+18
        name: Veritatis quod voluptas non sit id.
        screenName: Ipsa quam consectetur rerum.
        teamId: 8.412734260017135e+18
        twitterAccountId: 1.35481960486938e+18
        userId: 7.255936802332494e+18
      - expeditionId: 4.934842300299876e+18
        id: 1.2625324203172908e+18
        name: Veritatis quod voluptas non sit id.
        screenName: Ipsa quam consectetur rerum.
        teamId: 8.412734260017135e+18
        twitterAccountId: 1.35481960486938e+18
        userId: 7.255936802332494e+18
    properties:
      deviceSources:
        $ref: '#/definitions/DeviceSourceCollection'
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    title: 'Mediatype identifier: application/vnd.app.sources+json; view=default'
    type: object
  Station:
    description: Station media type (default view)
    example:
      device_id: Nesciunt similique omnis ut et esse.
      id: 4.3866891592095995e+18
      images:
      - url: Hic quibusdam est rem.
      - url: Hic quibusdam est rem.
      last_uploads:
      - blocks:
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        id: 6.474398459750394e+18
        size: 1.9460409358880453e+18
        time: "1986-03-10T00:22:10Z"
        type: Soluta aut consequuntur.
        upload_id: Tempore facere tempora ut eveniet alias fuga.
        url: Alias voluptates repellendus aut.
      - blocks:
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        id: 6.474398459750394e+18
        size: 1.9460409358880453e+18
        time: "1986-03-10T00:22:10Z"
        type: Soluta aut consequuntur.
        upload_id: Tempore facere tempora ut eveniet alias fuga.
        url: Alias voluptates repellendus aut.
      name: Id quia reprehenderit voluptates consequatur.
      owner_id: 3.5835518496883635e+18
      photos:
        small: Dignissimos suscipit voluptatem quae.
      status_json:
        Magnam non nobis.: true
    properties:
      device_id:
        example: Nesciunt similique omnis ut et esse.
        type: string
      id:
        example: 4.3866891592095995e+18
        format: int64
        type: integer
      images:
        $ref: '#/definitions/ImageRefCollection'
      last_uploads:
        $ref: '#/definitions/LastUploadCollection'
      name:
        example: Id quia reprehenderit voluptates consequatur.
        type: string
      owner_id:
        example: 3.5835518496883635e+18
        format: int64
        type: integer
      photos:
        $ref: '#/definitions/StationPhotos'
      status_json:
        additionalProperties: true
        example:
          Magnam non nobis.: true
        type: object
    required:
    - id
    - name
    - owner_id
    - device_id
    - status_json
    - images
    - photos
    title: 'Mediatype identifier: application/vnd.app.station+json; view=default'
    type: object
  StationCollection:
    description: StationCollection is the media type for an array of Station (default
      view)
    example:
    - device_id: Nesciunt similique omnis ut et esse.
      id: 4.3866891592095995e+18
      images:
      - url: Hic quibusdam est rem.
      - url: Hic quibusdam est rem.
      last_uploads:
      - blocks:
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        id: 6.474398459750394e+18
        size: 1.9460409358880453e+18
        time: "1986-03-10T00:22:10Z"
        type: Soluta aut consequuntur.
        upload_id: Tempore facere tempora ut eveniet alias fuga.
        url: Alias voluptates repellendus aut.
      - blocks:
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        id: 6.474398459750394e+18
        size: 1.9460409358880453e+18
        time: "1986-03-10T00:22:10Z"
        type: Soluta aut consequuntur.
        upload_id: Tempore facere tempora ut eveniet alias fuga.
        url: Alias voluptates repellendus aut.
      name: Id quia reprehenderit voluptates consequatur.
      owner_id: 3.5835518496883635e+18
      photos:
        small: Dignissimos suscipit voluptatem quae.
      status_json:
        Magnam non nobis.: true
    - device_id: Nesciunt similique omnis ut et esse.
      id: 4.3866891592095995e+18
      images:
      - url: Hic quibusdam est rem.
      - url: Hic quibusdam est rem.
      last_uploads:
      - blocks:
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        id: 6.474398459750394e+18
        size: 1.9460409358880453e+18
        time: "1986-03-10T00:22:10Z"
        type: Soluta aut consequuntur.
        upload_id: Tempore facere tempora ut eveniet alias fuga.
        url: Alias voluptates repellendus aut.
      - blocks:
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        - 1.566805123913401e+18
        id: 6.474398459750394e+18
        size: 1.9460409358880453e+18
        time: "1986-03-10T00:22:10Z"
        type: Soluta aut consequuntur.
        upload_id: Tempore facere tempora ut eveniet alias fuga.
        url: Alias voluptates repellendus aut.
      name: Id quia reprehenderit voluptates consequatur.
      owner_id: 3.5835518496883635e+18
      photos:
        small: Dignissimos suscipit voluptatem quae.
      status_json:
        Magnam non nobis.: true
    items:
      $ref: '#/definitions/Station'
    title: 'Mediatype identifier: application/vnd.app.station+json; type=collection;
      view=default'
    type: array
  StationLog:
    description: StationLog media type (default view)
    example:
      ID: 5.747025691015804e+18
      body: Quaerat dolor magnam.
      station_id: 4.5025760241262264e+18
      timestamp: Necessitatibus harum doloremque ullam asperiores.
    properties:
      ID:
        example: 5.747025691015804e+18
        format: int64
        type: integer
      body:
        example: Quaerat dolor magnam.
        type: string
      station_id:
        example: 4.5025760241262264e+18
        format: int64
        type: integer
      timestamp:
        example: Necessitatibus harum doloremque ullam asperiores.
        type: string
    required:
    - ID
    - station_id
    - body
    - timestamp
    title: 'Mediatype identifier: application/vnd.app.stationlog+json; view=default'
    type: object
  StationPhotos:
    description: StationPhotos media type (default view)
    example:
      small: Dignissimos suscipit voluptatem quae.
    properties:
      small:
        example: Dignissimos suscipit voluptatem quae.
        type: string
    required:
    - small
    title: 'Mediatype identifier: application/vnd.app.station.photos+json; view=default'
    type: object
  Stations:
    description: Stations media type (default view)
    example:
      stations:
      - device_id: Nesciunt similique omnis ut et esse.
        id: 4.3866891592095995e+18
        images:
        - url: Hic quibusdam est rem.
        - url: Hic quibusdam est rem.
        last_uploads:
        - blocks:
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          id: 6.474398459750394e+18
          size: 1.9460409358880453e+18
          time: "1986-03-10T00:22:10Z"
          type: Soluta aut consequuntur.
          upload_id: Tempore facere tempora ut eveniet alias fuga.
          url: Alias voluptates repellendus aut.
        - blocks:
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          id: 6.474398459750394e+18
          size: 1.9460409358880453e+18
          time: "1986-03-10T00:22:10Z"
          type: Soluta aut consequuntur.
          upload_id: Tempore facere tempora ut eveniet alias fuga.
          url: Alias voluptates repellendus aut.
        name: Id quia reprehenderit voluptates consequatur.
        owner_id: 3.5835518496883635e+18
        photos:
          small: Dignissimos suscipit voluptatem quae.
        status_json:
          Magnam non nobis.: true
      - device_id: Nesciunt similique omnis ut et esse.
        id: 4.3866891592095995e+18
        images:
        - url: Hic quibusdam est rem.
        - url: Hic quibusdam est rem.
        last_uploads:
        - blocks:
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          id: 6.474398459750394e+18
          size: 1.9460409358880453e+18
          time: "1986-03-10T00:22:10Z"
          type: Soluta aut consequuntur.
          upload_id: Tempore facere tempora ut eveniet alias fuga.
          url: Alias voluptates repellendus aut.
        - blocks:
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          id: 6.474398459750394e+18
          size: 1.9460409358880453e+18
          time: "1986-03-10T00:22:10Z"
          type: Soluta aut consequuntur.
          upload_id: Tempore facere tempora ut eveniet alias fuga.
          url: Alias voluptates repellendus aut.
        name: Id quia reprehenderit voluptates consequatur.
        owner_id: 3.5835518496883635e+18
        photos:
          small: Dignissimos suscipit voluptatem quae.
        status_json:
          Magnam non nobis.: true
      - device_id: Nesciunt similique omnis ut et esse.
        id: 4.3866891592095995e+18
        images:
        - url: Hic quibusdam est rem.
        - url: Hic quibusdam est rem.
        last_uploads:
        - blocks:
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          id: 6.474398459750394e+18
          size: 1.9460409358880453e+18
          time: "1986-03-10T00:22:10Z"
          type: Soluta aut consequuntur.
          upload_id: Tempore facere tempora ut eveniet alias fuga.
          url: Alias voluptates repellendus aut.
        - blocks:
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          - 1.566805123913401e+18
          id: 6.474398459750394e+18
          size: 1.9460409358880453e+18
          time: "1986-03-10T00:22:10Z"
          type: Soluta aut consequuntur.
          upload_id: Tempore facere tempora ut eveniet alias fuga.
          url: Alias voluptates repellendus aut.
        name: Id quia reprehenderit voluptates consequatur.
        owner_id: 3.5835518496883635e+18
        photos:
          small: Dignissimos suscipit voluptatem quae.
        status_json:
          Magnam non nobis.: true
    properties:
      stations:
        $ref: '#/definitions/StationCollection'
    required:
    - stations
    title: 'Mediatype identifier: application/vnd.app.stations+json; view=default'
    type: object
  Team:
    description: Team media type (default view)
    example:
      description: Vel ut quod ad quisquam nihil.
      id: 1.0196395399026842e+18
      name: lzzs51w67z
      slug: 615hd9i8qv
    properties:
      description:
        example: Vel ut quod ad quisquam nihil.
        type: string
      id:
        example: 1.0196395399026842e+18
        format: int64
        type: integer
      name:
        example: lzzs51w67z
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: 615hd9i8qv
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.team+json; view=default'
    type: object
  TeamCollection:
    description: TeamCollection is the media type for an array of Team (default view)
    example:
    - description: Vel ut quod ad quisquam nihil.
      id: 1.0196395399026842e+18
      name: lzzs51w67z
      slug: 615hd9i8qv
    items:
      $ref: '#/definitions/Team'
    title: 'Mediatype identifier: application/vnd.app.team+json; type=collection;
      view=default'
    type: array
  TeamMember:
    description: TeamMember media type (default view)
    example:
      role: Sunt commodi consequatur qui.
      teamId: 6.070880357414472e+18
      userId: 8.742818193707424e+18
    properties:
      role:
        example: Sunt commodi consequatur qui.
        type: string
      teamId:
        example: 6.070880357414472e+18
        format: int64
        type: integer
      userId:
        example: 8.742818193707424e+18
        format: int64
        type: integer
    required:
    - teamId
    - userId
    - role
    title: 'Mediatype identifier: application/vnd.app.member+json; view=default'
    type: object
  TeamMemberCollection:
    description: TeamMemberCollection is the media type for an array of TeamMember
      (default view)
    example:
    - role: Sunt commodi consequatur qui.
      teamId: 6.070880357414472e+18
      userId: 8.742818193707424e+18
    - role: Sunt commodi consequatur qui.
      teamId: 6.070880357414472e+18
      userId: 8.742818193707424e+18
    items:
      $ref: '#/definitions/TeamMember'
    title: 'Mediatype identifier: application/vnd.app.member+json; type=collection;
      view=default'
    type: array
  TeamMembers:
    description: TeamMembers media type (default view)
    example:
      members:
      - role: Sunt commodi consequatur qui.
        teamId: 6.070880357414472e+18
        userId: 8.742818193707424e+18
      - role: Sunt commodi consequatur qui.
        teamId: 6.070880357414472e+18
        userId: 8.742818193707424e+18
      - role: Sunt commodi consequatur qui.
        teamId: 6.070880357414472e+18
        userId: 8.742818193707424e+18
    properties:
      members:
        $ref: '#/definitions/TeamMemberCollection'
    required:
    - members
    title: 'Mediatype identifier: application/vnd.app.members+json; view=default'
    type: object
  Teams:
    description: Teams media type (default view)
    example:
      teams:
      - description: Vel ut quod ad quisquam nihil.
        id: 1.0196395399026842e+18
        name: lzzs51w67z
        slug: 615hd9i8qv
      - description: Vel ut quod ad quisquam nihil.
        id: 1.0196395399026842e+18
        name: lzzs51w67z
        slug: 615hd9i8qv
    properties:
      teams:
        $ref: '#/definitions/TeamCollection'
    required:
    - teams
    title: 'Mediatype identifier: application/vnd.app.teams+json; view=default'
    type: object
  TwitterAccountSource:
    description: TwitterAccountSource media type (default view)
    example:
      expeditionId: 4.934842300299876e+18
      id: 1.2625324203172908e+18
      name: Veritatis quod voluptas non sit id.
      screenName: Ipsa quam consectetur rerum.
      teamId: 8.412734260017135e+18
      twitterAccountId: 1.35481960486938e+18
      userId: 7.255936802332494e+18
    properties:
      expeditionId:
        example: 4.934842300299876e+18
        format: int64
        type: integer
      id:
        example: 1.2625324203172908e+18
        format: int64
        type: integer
      name:
        example: Veritatis quod voluptas non sit id.
        type: string
      screenName:
        example: Ipsa quam consectetur rerum.
        type: string
      teamId:
        example: 8.412734260017135e+18
        format: int64
        type: integer
      twitterAccountId:
        example: 1.35481960486938e+18
        format: int64
        type: integer
      userId:
        example: 7.255936802332494e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    - twitterAccountId
    - screenName
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      view=default'
    type: object
  TwitterAccountSourceCollection:
    description: TwitterAccountSourceCollection is the media type for an array of
      TwitterAccountSource (default view)
    example:
    - expeditionId: 4.934842300299876e+18
      id: 1.2625324203172908e+18
      name: Veritatis quod voluptas non sit id.
      screenName: Ipsa quam consectetur rerum.
      teamId: 8.412734260017135e+18
      twitterAccountId: 1.35481960486938e+18
      userId: 7.255936802332494e+18
    - expeditionId: 4.934842300299876e+18
      id: 1.2625324203172908e+18
      name: Veritatis quod voluptas non sit id.
      screenName: Ipsa quam consectetur rerum.
      teamId: 8.412734260017135e+18
      twitterAccountId: 1.35481960486938e+18
      userId: 7.255936802332494e+18
    - expeditionId: 4.934842300299876e+18
      id: 1.2625324203172908e+18
      name: Veritatis quod voluptas non sit id.
      screenName: Ipsa quam consectetur rerum.
      teamId: 8.412734260017135e+18
      twitterAccountId: 1.35481960486938e+18
      userId: 7.255936802332494e+18
    items:
      $ref: '#/definitions/TwitterAccountSource'
    title: 'Mediatype identifier: application/vnd.app.twitter_account_source+json;
      type=collection; view=default'
    type: array
  TwitterAccountSources:
    description: TwitterAccountSources media type (default view)
    example:
      twitterAccountSources:
      - expeditionId: 4.934842300299876e+18
        id: 1.2625324203172908e+18
        name: Veritatis quod voluptas non sit id.
        screenName: Ipsa quam consectetur rerum.
        teamId: 8.412734260017135e+18
        twitterAccountId: 1.35481960486938e+18
        userId: 7.255936802332494e+18
      - expeditionId: 4.934842300299876e+18
        id: 1.2625324203172908e+18
        name: Veritatis quod voluptas non sit id.
        screenName: Ipsa quam consectetur rerum.
        teamId: 8.412734260017135e+18
        twitterAccountId: 1.35481960486938e+18
        userId: 7.255936802332494e+18
      - expeditionId: 4.934842300299876e+18
        id: 1.2625324203172908e+18
        name: Veritatis quod voluptas non sit id.
        screenName: Ipsa quam consectetur rerum.
        teamId: 8.412734260017135e+18
        twitterAccountId: 1.35481960486938e+18
        userId: 7.255936802332494e+18
    properties:
      twitterAccountSources:
        $ref: '#/definitions/TwitterAccountSourceCollection'
    required:
    - twitterAccountSources
    title: 'Mediatype identifier: application/vnd.app.twitter_account_intputs+json;
      view=default'
    type: object
  UpdateDeviceFirmwarePayload:
    example:
      deviceId: 1.180945457636476e+18
      firmwareId: 2.5132772274207514e+18
    properties:
      deviceId:
        example: 1.180945457636476e+18
        format: int64
        type: integer
      firmwareId:
        example: 2.5132772274207514e+18
        format: int64
        type: integer
    required:
    - deviceId
    - firmwareId
    title: UpdateDeviceFirmwarePayload
    type: object
  'UpdateDeviceInfoPayload ':
    example:
      deviceId: Dolore non nam et eius.
      name: Quidem quos molestiae sapiente laboriosam.
      notes: Temporibus aut quas ut omnis cum.
    properties:
      deviceId:
        example: Dolore non nam et eius.
        type: string
      name:
        example: Quidem quos molestiae sapiente laboriosam.
        type: string
      notes:
        example: Temporibus aut quas ut omnis cum.
        type: string
    required:
    - deviceId
    title: 'UpdateDeviceInfoPayload '
    type: object
  UpdateDeviceSourceLocationPayload:
    example:
      key: Dignissimos possimus ut et tempore doloribus.
      latitude: 0.14303691672595645
      longitude: 0.4927549323913614
    properties:
      key:
        example: Dignissimos possimus ut et tempore doloribus.
        type: string
      latitude:
        example: 0.14303691672595645
        format: double
        type: number
      longitude:
        example: 0.4927549323913614
        format: double
        type: number
    required:
    - key
    - longitude
    - latitude
    title: UpdateDeviceSourceLocationPayload
    type: object
  UpdateDeviceSourcePayload:
    example:
      key: Dignissimos consequatur eius corrupti voluptates ullam.
      name: Aliquid hic soluta ab quia enim rem.
    properties:
      key:
        example: Dignissimos consequatur eius corrupti voluptates ullam.
        type: string
      name:
        example: Aliquid hic soluta ab quia enim rem.
        type: string
    required:
    - name
    - key
    title: UpdateDeviceSourcePayload
    type: object
  UpdateDeviceSourceSchemaPayload:
    example:
      active: true
      jsonSchema: Qui ut atque quisquam deleniti.
      key: Quia aperiam nostrum.
    properties:
      active:
        example: true
        type: boolean
      jsonSchema:
        example: Qui ut atque quisquam deleniti.
        type: string
      key:
        example: Quia aperiam nostrum.
        type: string
    required:
    - key
    - active
    - jsonSchema
    title: UpdateDeviceSourceSchemaPayload
    type: object
  UpdateMemberPayload:
    example:
      role: Reiciendis temporibus et maiores.
    properties:
      role:
        example: Reiciendis temporibus et maiores.
        type: string
    required:
    - role
    title: UpdateMemberPayload
    type: object
  UpdateSourcePayload:
    example:
      active: true
      name: Aut natus mollitia dolorem.
      teamId: 9.199975499822202e+18
      userId: 7.569142659126162e+18
    properties:
      active:
        example: true
        type: boolean
      name:
        example: Aut natus mollitia dolorem.
        type: string
      teamId:
        example: 9.199975499822202e+18
        format: int64
        type: integer
      userId:
        example: 7.569142659126162e+18
        format: int64
        type: integer
    required:
    - name
    title: UpdateSourcePayload
    type: object
  UpdateStationPayload:
    example:
      name: Expedita id sint.
      status_json:
        Illum vel voluptatem sunt.: 2.4121955331876137e+18
    properties:
      name:
        example: Expedita id sint.
        type: string
      status_json:
        additionalProperties: true
        example:
          Illum vel voluptatem sunt.: 2.4121955331876137e+18
        type: object
    required:
    - name
    - status_json
    title: UpdateStationPayload
    type: object
  UpdateUserPayload:
    example:
      bio: Sequi vero omnis voluptatum dolore.
      email: jules_hansen@hegmannbernier.info
      name: c1pxtkgez6
    properties:
      bio:
        example: Sequi vero omnis voluptatum dolore.
        type: string
      email:
        example: jules_hansen@hegmannbernier.info
        format: email
        type: string
      name:
        example: c1pxtkgez6
        maxLength: 256
        pattern: \S
        type: string
    required:
    - name
    - email
    - bio
    title: UpdateUserPayload
    type: object
  User:
    description: User media type (default view)
    example:
      bio: Facilis non sed nihil aut.
      email: napoleon_o'hara@ullrich.info
      id: 3.5231454776003343e+18
      media_content_type: Tempore non.
      media_url: Optio perspiciatis explicabo ullam ea amet aspernatur.
      name: n1f09iaiq9
    properties:
      bio:
        example: Facilis non sed nihil aut.
        type: string
      email:
        example: napoleon_o'hara@ullrich.info
        format: email
        type: string
      id:
        example: 3.5231454776003343e+18
        format: int64
        type: integer
      media_content_type:
        example: Tempore non.
        type: string
      media_url:
        example: Optio perspiciatis explicabo ullam ea amet aspernatur.
        type: string
      name:
        example: n1f09iaiq9
        maxLength: 256
        pattern: \S
        type: string
    required:
    - id
    - name
    - email
    - bio
    title: 'Mediatype identifier: application/vnd.app.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - bio: Facilis non sed nihil aut.
      email: napoleon_o'hara@ullrich.info
      id: 3.5231454776003343e+18
      media_content_type: Tempore non.
      media_url: Optio perspiciatis explicabo ullam ea amet aspernatur.
      name: n1f09iaiq9
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.app.user+json; type=collection;
      view=default'
    type: array
  Users:
    description: Users media type (default view)
    example:
      users:
      - bio: Facilis non sed nihil aut.
        email: napoleon_o'hara@ullrich.info
        id: 3.5231454776003343e+18
        media_content_type: Tempore non.
        media_url: Optio perspiciatis explicabo ullam ea amet aspernatur.
        name: n1f09iaiq9
      - bio: Facilis non sed nihil aut.
        email: napoleon_o'hara@ullrich.info
        id: 3.5231454776003343e+18
        media_content_type: Tempore non.
        media_url: Optio perspiciatis explicabo ullam ea amet aspernatur.
        name: n1f09iaiq9
      - bio: Facilis non sed nihil aut.
        email: napoleon_o'hara@ullrich.info
        id: 3.5231454776003343e+18
        media_content_type: Tempore non.
        media_url: Optio perspiciatis explicabo ullam ea amet aspernatur.
        name: n1f09iaiq9
    properties:
      users:
        $ref: '#/definitions/UserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.app.users+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609066e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609066e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: api.fieldkit.org
info:
  description: A one-click open platform for field researchers and explorers.
  title: Fieldkit API
  version: ""
paths:
  /data/devices/{deviceId}/data:
    get:
      description: |-
        Retrieve data

        Required security scopes:
          * `api:access`
      operationId: data#device data
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: firstBlock
        required: false
        type: integer
      - in: query
        name: lastBlock
        required: false
        type: integer
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      produces:
      - application/vnd.app.device.data+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceDataRecordsResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: device data data
      tags:
      - data
  /data/devices/{deviceId}/data/json:
    get:
      description: |-
        Retrieve data

        Required security scopes:
          * `api:access`
      operationId: jsonData#get
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: end
        required: false
        type: integer
      - in: query
        name: internal
        required: false
        type: boolean
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: start
        required: false
        type: integer
      produces:
      - application/vnd.app.device.json.data+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONDataResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get jsonData
      tags:
      - jsonData
  /data/devices/{deviceId}/data/lines:
    get:
      description: |-
        Retrieve data

        Required security scopes:
          * `api:access`
      operationId: jsonData#get lines
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: end
        required: false
        type: integer
      - in: query
        name: internal
        required: false
        type: boolean
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: start
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get lines jsonData
      tags:
      - jsonData
  /data/devices/{deviceId}/summary:
    get:
      description: |-
        Retrieve summary

        Required security scopes:
          * `api:access`
      operationId: data#device summary
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/vnd.app.device.summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceDataSummaryResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: device summary data
      tags:
      - data
  /data/devices/{deviceId}/summary/json:
    get:
      description: |-
        Retrieve summarized data

        Required security scopes:
          * `api:access`
      operationId: jsonData#summary
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: end
        required: false
        type: integer
      - in: query
        name: internal
        required: false
        type: boolean
      - in: query
        name: interval
        required: false
        type: integer
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: resolution
        required: false
        type: integer
      - in: query
        name: start
        required: false
        type: integer
      produces:
      - application/vnd.app.device.json.data.summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONDataSummaryResponse'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: summary jsonData
      tags:
      - jsonData
  /data/ingestions/{ingestionId}:
    delete:
      description: |-
        Delete data

        Required security scopes:
          * `api:access`
      operationId: data#delete
      parameters:
      - in: path
        name: ingestionId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete data
      tags:
      - data
  /data/ingestions/{ingestionId}/process:
    post:
      description: |-
        Process ingestion

        Required security scopes:
          * `api:access`
      operationId: data#process ingestion
      parameters:
      - in: path
        name: ingestionId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: process ingestion data
      tags:
      - data
  /data/process:
    post:
      description: |-
        Process data

        Required security scopes:
          * `api:access`
      operationId: data#process
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "503": {}
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: process data
      tags:
      - data
  /devices/{deviceId}:
    get:
      description: Device info
      operationId: files#device info
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/vnd.app.device.details+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceDetails'
        "404":
          description: Not Found
      schemes:
      - https
      summary: device info files
      tags:
      - files
    post:
      description: Device info
      operationId: files#update device info
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceInfoPayload '
      produces:
      - application/vnd.app.device.details+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceDetails'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      schemes:
      - https
      summary: update device info files
      tags:
      - files
  /devices/{deviceId}/{module}/firmware:
    get:
      description: Return firmware for a device
      operationId: Firmware#check
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: path
        name: module
        required: true
        type: string
      - in: header
        name: Fk-Compiled
        required: false
        type: string
      - in: header
        name: If-None-Match
        required: false
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          headers:
            ETag:
              type: string
        "304":
          description: Not Modified
        "404":
          description: Not Found
      schemes:
      - https
      summary: check Firmware
      tags:
      - Firmware
  /devices/{deviceId}/data:
    get:
      description: Get all device data
      operationId: device_data#all
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "302":
          description: Found
          headers:
            Location:
              type: string
        "404":
          description: Not Found
        "503": {}
      schemes:
      - https
      summary: all device_data
      tags:
      - device_data
  /devices/{deviceId}/files/data:
    get:
      description: List device files
      operationId: files#list device data files
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: page
        required: false
        type: integer
      produces:
      - application/vnd.app.device.files+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceFiles'
      schemes:
      - https
      summary: list device data files files
      tags:
      - files
  /devices/{deviceId}/files/logs:
    get:
      description: List device files
      operationId: files#list device log files
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: page
        required: false
        type: integer
      produces:
      - application/vnd.app.device.files+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceFiles'
      schemes:
      - https
      summary: list device log files files
      tags:
      - files
  /devices/{deviceId}/firmware:
    get:
      description: List device firmware
      operationId: Firmware#list device
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/vnd.app.firmwares+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Firmwares'
      schemes:
      - https
      summary: list device Firmware
      tags:
      - Firmware
  /devices/{deviceId}/locations:
    get:
      description: device location history
      operationId: files#get device location history
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: page
        required: false
        type: integer
      produces:
      - application/vnd.app.location.history+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LocationHistory'
      schemes:
      - https
      summary: get device location history files
      tags:
      - files
  /devices/{deviceId}/logs:
    get:
      description: Get all device logs
      operationId: device_logs#all
      parameters:
      - in: path
        name: deviceId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "302":
          description: Found
          headers:
            Location:
              type: string
        "404":
          description: Not Found
        "503": {}
      schemes:
      - https
      summary: all device_logs
      tags:
      - device_logs
  /devices/firmware:
    patch:
      description: |-
        Update an Device firmware

        Required security scopes:
          * `api:admin`
      operationId: Firmware#update
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceFirmwarePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:admin
      summary: update Firmware
      tags:
      - Firmware
  /expeditions/{expeditionId}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id expedition
      tags:
      - expedition
    patch:
      description: |-
        Update an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#update
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update expedition
      tags:
      - expedition
  /expeditions/{expeditionId}/picture:
    get:
      description: Get a expedition's picture
      operationId: picture#expedition get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: expedition get id picture
      tags:
      - picture
  /expeditions/{expeditionId}/source-tokens:
    get:
      description: |-
        Update an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id source_token
      tags:
      - source_token
    post:
      description: |-
        Add an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceToken'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add source_token
      tags:
      - source_token
  /expeditions/{expeditionId}/sources:
    get:
      description: |-
        List an expedition's sources

        Required security scopes:
          * `api:access`
      operationId: source#list expedition id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list expedition id source
      tags:
      - source
  /expeditions/{expeditionId}/sources/devices:
    post:
      description: |-
        Add a Device source

        Required security scopes:
          * `api:access`
      operationId: device#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
        "500": {}
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add device
      tags:
      - device
  /expeditions/{expeditionId}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id twitter
      tags:
      - twitter
    post:
      description: |-
        Add a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTwitterAccountSourcePayload'
      produces:
      - application/vnd.app.location+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add twitter
      tags:
      - twitter
  /expeditions/{expeditionId}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id team
      tags:
      - team
    post:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add team
      tags:
      - team
  /features:
    get:
      description: List features in a geographical area.
      operationId: GeoJSON#geographical query
      produces:
      - application/vnd.app.map_features+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MapFeatures'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: geographical query GeoJSON
      tags:
      - GeoJSON
  /features/{featureId}/geojson:
    get:
      description: List a feature's GeoJSON by id.
      operationId: GeoJSON#list by id
      parameters:
      - in: path
        name: featureId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged_geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by id GeoJSON
      tags:
      - GeoJSON
  /files/{fileId}:
    get:
      description: File info
      operationId: files#file
      parameters:
      - in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/vnd.app.device.file+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceFile'
        "404":
          description: Not Found
      schemes:
      - https
      summary: file files
      tags:
      - files
  /files/{fileId}/data.csv:
    get:
      description: Export file
      operationId: files#csv
      parameters:
      - default: true
        in: query
        name: dl
        required: false
        type: boolean
      - in: path
        name: fileId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: csv files
      tags:
      - files
  /files/{fileId}/data.fkpb:
    get:
      description: Export file
      operationId: files#raw
      parameters:
      - default: true
        in: query
        name: dl
        required: false
        type: boolean
      - in: path
        name: fileId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: raw files
      tags:
      - files
  /files/devices:
    get:
      description: List devices
      operationId: files#list devices
      produces:
      - application/vnd.app.devices+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Devices'
        "404":
          description: Not Found
      schemes:
      - https
      summary: list devices files
      tags:
      - files
  /files/status:
    get:
      description: File backend status
      operationId: files#status
      produces:
      - application/vnd.app.files.status+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FilesStatus'
      schemes:
      - https
      summary: status files
      tags:
      - files
  /firmware:
    get:
      description: List firmware
      operationId: Firmware#list
      parameters:
      - in: query
        name: module
        required: false
        type: string
      - in: query
        name: page
        required: false
        type: integer
      - in: query
        name: pageSize
        required: false
        type: integer
      - in: query
        name: profile
        required: false
        type: string
      produces:
      - application/vnd.app.firmwares+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Firmwares'
      schemes:
      - https
      summary: list Firmware
      tags:
      - Firmware
    patch:
      description: |-
        Add firmware

        Required security scopes:
          * `api:admin`
      operationId: Firmware#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddFirmwarePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:admin
      summary: add Firmware
      tags:
      - Firmware
  /firmware/{firmwareId}:
    delete:
      description: |-
        Delete firmware

        Required security scopes:
          * `api:admin`
      operationId: Firmware#delete
      parameters:
      - in: path
        name: firmwareId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:admin
      summary: delete Firmware
      tags:
      - Firmware
  /firmware/{firmwareId}/download:
    get:
      operationId: Firmware#download
      parameters:
      - in: path
        name: firmwareId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          headers:
            ETag:
              type: string
        "404":
          description: Not Found
      schemes:
      - https
      summary: download Firmware
      tags:
      - Firmware
  /login:
    post:
      description: Creates a valid JWT given login credentials.
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: login user
      tags:
      - user
  /logout:
    post:
      description: |-
        Creates a valid JWT given login credentials.

        Required security scopes:
          * `api:access`
      operationId: user#logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: logout user
      tags:
      - user
  /my/simple:
    get:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: simple#my simple summary
      produces:
      - application/vnd.app.simple_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MySimpleSummary'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: my simple summary simple
      tags:
      - simple
  /my/simple/download:
    get:
      operationId: simple#download
      parameters:
      - in: query
        name: token
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: download simple
      tags:
      - simple
  /my/simple/features:
    get:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: simple#my features
      produces:
      - application/vnd.app.map_features+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MapFeatures'
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: my features simple
      tags:
      - simple
  /projects:
    get:
      description: |-
        List projects

        Required security scopes:
          * `api:access`
      operationId: project#list
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project
      tags:
      - project
    post:
      description: |-
        Add a project

        Required security scopes:
          * `api:access`
      operationId: project#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add project
      tags:
      - project
  /projects/@/{project}:
    get:
      description: Get a project
      operationId: project#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get project
      tags:
      - project
  /projects/@/{project}/administrators:
    get:
      description: |-
        List an project's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list administrator
      tags:
      - administrator
  /projects/@/{project}/administrators/@/{email}:
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get
      parameters:
      - in: path
        name: email
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get administrator
      tags:
      - administrator
  /projects/@/{project}/expeditions:
    get:
      description: List a project's expeditions
      operationId: expedition#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}:
    get:
      description: Add an expedition
      operationId: expedition#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}/source-tokens:
    get:
      description: |-
        List an expedition's source tokens

        Required security scopes:
          * `api:access`
      operationId: source_token#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.source_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list source_token
      tags:
      - source_token
  /projects/@/{project}/expeditions/@/{expedition}/sources:
    get:
      description: List a project's sources
      operationId: source#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Sources'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list source
      tags:
      - source
  /projects/@/{project}/expeditions/@/{expedition}/sources/devices:
    get:
      description: |-
        List an expedition's Device sources

        Required security scopes:
          * `api:access`
      operationId: device#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.device_sources+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list device
      tags:
      - device
  /projects/@/{project}/expeditions/@/{expedition}/sources/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account sources

        Required security scopes:
          * `api:access`
      operationId: twitter#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSources'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list twitter
      tags:
      - twitter
  /projects/@/{project}/expeditions/@/{expedition}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members:
    get:
      description: |-
        List an team's members

        Required security scopes:
          * `api:access`
      operationId: member#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list member
      tags:
      - member
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members/@/{email}:
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get
      parameters:
      - in: path
        name: email
        required: true
        type: string
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get member
      tags:
      - member
  /projects/{projectId}:
    delete:
      description: |-
        Delete project

        Required security scopes:
          * `api:access`
      operationId: project#delete
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete project
      tags:
      - project
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id project
      tags:
      - project
    patch:
      description: |-
        Update a project

        Required security scopes:
          * `api:access`
      operationId: project#update
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update project
      tags:
      - project
  /projects/{projectId}/administrators:
    get:
      description: |-
        List an projects's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id administrator
      tags:
      - administrator
    post:
      description: |-
        Add an administrator to a project

        Required security scopes:
          * `api:access`
      operationId: administrator#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddAdministratorPayload'
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add administrator
      tags:
      - administrator
  /projects/{projectId}/administrators/{userId}:
    delete:
      description: |-
        Remove an administrator from a project

        Required security scopes:
          * `api:access`
      operationId: administrator#delete
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete administrator
      tags:
      - administrator
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id administrator
      tags:
      - administrator
  /projects/{projectId}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id expedition
      tags:
      - expedition
    post:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add expedition
      tags:
      - expedition
  /projects/{projectId}/invite:
    post:
      description: |-
        Invite a user to project

        Required security scopes:
          * `api:access`
      operationId: project#invite user
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/InviteUserPayload'
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: invite user project
      tags:
      - project
  /projects/{projectId}/media:
    get:
      description: Get a project image
      operationId: project#get image
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: get image project
      tags:
      - project
    post:
      description: |-
        Save a project image

        Required security scopes:
          * `api:access`
      operationId: project#save image
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: save image project
      tags:
      - project
  /projects/{projectId}/members/{userId}:
    delete:
      description: |-
        Remove a user from project

        Required security scopes:
          * `api:access`
      operationId: project#remove user
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RemoveUserPayload'
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: remove user project
      tags:
      - project
  /projects/{projectId}/picture:
    get:
      description: Get a project's picture
      operationId: picture#project get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: project get id picture
      tags:
      - picture
  /projects/{projectId}/stations:
    get:
      description: |-
        List project stations

        Required security scopes:
          * `api:access`
      operationId: station#list project
      parameters:
      - in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/vnd.app.stations+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stations'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project station
      tags:
      - station
  /projects/{projectId}/stations/{stationId}:
    delete:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: project#remove station
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: remove station project
      tags:
      - project
    post:
      description: |-
        Add a station to project

        Required security scopes:
          * `api:access`
      operationId: project#add station
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add station project
      tags:
      - project
  /records/data/{recordId}:
    get:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: records#data
      parameters:
      - in: path
        name: recordId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: data records
      tags:
      - records
  /records/meta/{recordId}:
    get:
      description: |-
        Required security scopes:
          * `api:access`
      operationId: records#meta
      parameters:
      - in: path
        name: recordId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: meta records
      tags:
      - records
  /refresh:
    post:
      description: Creates a valid JWT given a refresh token.
      operationId: user#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshUserPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: refresh user
      tags:
      - user
  /source-tokens/{sourceTokenId}:
    delete:
      description: |-
        Delete an source token

        Required security scopes:
          * `api:access`
      operationId: source_token#delete
      parameters:
      - in: path
        name: sourceTokenId
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete source_token
      tags:
      - source_token
  /sources/{sourceId}:
    get:
      description: List an source
      operationId: source#list id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list id source
      tags:
      - source
    patch:
      description: |-
        Update an source

        Required security scopes:
          * `api:access`
      operationId: source#update
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateSourcePayload'
      produces:
      - application/vnd.app.source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Source'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update source
      tags:
      - source
  /sources/{sourceId}/csv:
    get:
      description: Export data for an source.
      operationId: Export#list by source
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source Export
      tags:
      - Export
  /sources/{sourceId}/geojson:
    get:
      description: List an source's features in a GeoJSON.
      operationId: GeoJSON#list by source
      parameters:
      - in: query
        name: descending
        required: false
        type: boolean
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged_geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source GeoJSON
      tags:
      - GeoJSON
  /sources/{sourceId}/query:
    get:
      description: Query data for an source.
      operationId: Query#list by source
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.queried+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QueryData'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by source Query
      tags:
      - Query
  /sources/{sourceId}/summary:
    get:
      description: List an source
      operationId: source#summary by id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.source_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SourceSummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: summary by id source
      tags:
      - source
  /sources/{sourceId}/temporal/{clusterId}/geometry:
    get:
      description: Retrieve temporal cluster geometry
      operationId: source#temporal cluster geometry by id
      parameters:
      - in: path
        name: clusterId
        required: true
        type: integer
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.cluster_geometry_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ClusterGeometrySummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: temporal cluster geometry by id source
      tags:
      - source
  /sources/devices/{id}:
    get:
      description: |-
        Get a Device source

        Required security scopes:
          * `api:access`
      operationId: device#get id
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id device
      tags:
      - device
    patch:
      description: |-
        Update an Device source

        Required security scopes:
          * `api:access`
      operationId: device#update
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourcePayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update device
      tags:
      - device
  /sources/devices/{id}/location:
    patch:
      description: |-
        Update an Device source location

        Required security scopes:
          * `api:access`
      operationId: device#update location
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceLocationPayload'
      produces:
      - application/vnd.app.device_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update location device
      tags:
      - device
  /sources/devices/{id}/schemas:
    patch:
      description: |-
        Update an Device source schema

        Required security scopes:
          * `api:access`
      operationId: device#update schema
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceSourceSchemaPayload'
      produces:
      - application/vnd.app.device_schemas+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSchemas'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update schema device
      tags:
      - device
  /sources/twitter-accounts/{sourceId}:
    get:
      description: |-
        Get a Twitter account source

        Required security scopes:
          * `api:access`
      operationId: twitter#get id
      parameters:
      - in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_source+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountSource'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id twitter
      tags:
      - twitter
  /stationLog:
    post:
      description: |-
        Add a station log

        Required security scopes:
          * `api:access`
      operationId: stationLog#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationLogPayload'
      produces:
      - application/vnd.app.stationlog+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationLog'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add stationLog
      tags:
      - stationLog
  /stationLogs:
    post:
      description: |-
        Add multiple station logs

        Required security scopes:
          * `api:access`
      operationId: stationLog#addMultiple
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationLogsPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: addMultiple stationLog
      tags:
      - stationLog
  /stationlogs/@/{stationLog}:
    get:
      description: Get a station log
      operationId: stationLog#get
      parameters:
      - in: path
        name: stationLog
        required: true
        type: string
      produces:
      - application/vnd.app.stationlog+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationLog'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get stationLog
      tags:
      - stationLog
  /stationlogs/{stationLogId}:
    patch:
      description: |-
        Update a station log

        Required security scopes:
          * `api:access`
      operationId: stationLog#update
      parameters:
      - in: path
        name: stationLogId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationLogPayload'
      produces:
      - application/vnd.app.stationlog+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationLog'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update stationLog
      tags:
      - stationLog
  /stations:
    get:
      description: |-
        List stations

        Required security scopes:
          * `api:access`
      operationId: station#list
      produces:
      - application/vnd.app.stations+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stations'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list station
      tags:
      - station
    post:
      description: |-
        Add a station

        Required security scopes:
          * `api:access`
      operationId: station#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddStationPayload'
      produces:
      - application/vnd.app.station+json
      - application/vnd.brr+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add station
      tags:
      - station
  /stations/@/{stationId}:
    get:
      description: |-
        Get a station

        Required security scopes:
          * `api:access`
      operationId: station#get
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - application/vnd.app.station+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get station
      tags:
      - station
  /stations/{stationId}:
    delete:
      description: |-
        Delete station

        Required security scopes:
          * `api:access`
      operationId: station#delete
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete station
      tags:
      - station
    patch:
      description: |-
        Update a station

        Required security scopes:
          * `api:access`
      operationId: station#update
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateStationPayload'
      produces:
      - application/vnd.app.station+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update station
      tags:
      - station
  /stations/{stationId}/field-note-media:
    post:
      description: |-
        Save a field note image

        Required security scopes:
          * `api:access`
      operationId: field_note#save media
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - application/vnd.app.field_note_media+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNoteMedia'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: save media field_note
      tags:
      - field_note
  /stations/{stationId}/field-note-media/{mediaId}:
    get:
      description: Get a field note image
      operationId: field_note#get media
      parameters:
      - in: path
        name: mediaId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: get media field_note
      tags:
      - field_note
  /stations/{stationId}/field-notes:
    get:
      description: |-
        Get all field notes for a station

        Required security scopes:
          * `api:access`
      operationId: field_note#get
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - application/vnd.app.field_notes+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNotes'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get field_note
      tags:
      - field_note
    post:
      description: |-
        Add a field note

        Required security scopes:
          * `api:access`
      operationId: field_note#add
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddFieldNotePayload'
      produces:
      - application/vnd.app.field_note_result+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNoteQueryResult'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add field_note
      tags:
      - field_note
  /stations/{stationId}/field-notes/{fieldNoteId}:
    delete:
      description: |-
        Remove a field note

        Required security scopes:
          * `api:access`
      operationId: field_note#delete
      parameters:
      - in: path
        name: fieldNoteId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete field_note
      tags:
      - field_note
    patch:
      description: |-
        Update a field note

        Required security scopes:
          * `api:access`
      operationId: field_note#update
      parameters:
      - in: path
        name: fieldNoteId
        required: true
        type: integer
      - in: path
        name: stationId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddFieldNotePayload'
      produces:
      - application/vnd.app.field_note_result+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FieldNoteQueryResult'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update field_note
      tags:
      - field_note
  /stations/{stationId}/photo:
    get:
      operationId: station#photo
      parameters:
      - in: path
        name: stationId
        required: true
        type: integer
      produces:
      - image/jpeg
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: photo station
      tags:
      - station
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.yaml
  /teams/{teamId}:
    delete:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete team
      tags:
      - team
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id team
      tags:
      - team
    patch:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update team
      tags:
      - team
  /teams/{teamId}/members:
    get:
      description: |-
        List an teams's members

        Required security scopes:
          * `api:access`
      operationId: member#list id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id member
      tags:
      - member
    post:
      description: |-
        Add a member to a team

        Required security scopes:
          * `api:access`
      operationId: member#add
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add member
      tags:
      - member
  /teams/{teamId}/members/{userId}:
    delete:
      description: |-
        Remove a member from a team

        Required security scopes:
          * `api:access`
      operationId: member#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete member
      tags:
      - member
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id member
      tags:
      - member
    patch:
      description: |-
        Update a member

        Required security scopes:
          * `api:access`
      operationId: member#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update member
      tags:
      - member
  /twitter/callback:
    get:
      description: OAuth callback endpoint for Twitter
      operationId: twitter#callback
      parameters:
      - in: query
        name: oauthToken
        required: true
        type: string
      - in: query
        name: oauthVerifier
        required: false
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "400":
          description: Bad Request
      schemes:
      - https
      summary: callback twitter
      tags:
      - twitter
  /user:
    get:
      description: |-
        Get the authenticated user

        Required security scopes:
          * `api:access`
      operationId: user#get current
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user
      tags:
      - user
  /user/{userId}/media:
    get:
      description: Get a user image
      operationId: user#get user image
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: get user image user
      tags:
      - user
  /user/media:
    get:
      description: |-
        Get the authenticated user's image

        Required security scopes:
          * `api:access`
      operationId: user#get current user image
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user image user
      tags:
      - user
    post:
      description: |-
        Save the authenticated user's image

        Required security scopes:
          * `api:access`
      operationId: user#save current user image
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: save current user image user
      tags:
      - user
  /user/projects:
    get:
      description: |-
        List the authenticated user's projects

        Required security scopes:
          * `api:access`
      operationId: project#list current
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list current project
      tags:
      - project
  /users:
    get:
      description: |-
        List users

        Required security scopes:
          * `api:access`
      operationId: user#list
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
    post:
      description: Add a user
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: add user
      tags:
      - user
  /users/{userId}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id user
      tags:
      - user
    patch:
      description: |-
        Update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /users/{userId}/picture:
    get:
      description: Get a user's picture
      operationId: picture#user get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user get id picture
      tags:
      - picture
    post:
      description: Save a user's picture
      operationId: picture#user save id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.media+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MediaReferenceResponse'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user save id picture
      tags:
      - picture
  /users/project/{projectId}:
    get:
      description: |-
        List users by project

        Required security scopes:
          * `api:access`
      operationId: user#list by project
      parameters:
      - in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list by project user
      tags:
      - user
  /validate:
    get:
      description: Validate a user's email address.
      operationId: user#validate
      parameters:
      - in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: validate user
      tags:
      - user
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  NotModified:
    description: Not Modified
  OK:
    description: OK
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
        * `api:admin`: API admin access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
