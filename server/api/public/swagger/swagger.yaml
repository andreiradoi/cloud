consumes:
- application/json
definitions:
  AddAdministratorPayload:
    example:
      user_id: 7.695198e+17
    properties:
      user_id:
        example: 7.695198e+17
        format: int64
        type: integer
    required:
    - user_id
    title: AddAdministratorPayload
    type: object
  AddExpeditionPayload:
    example:
      description: Dolorem et magnam alias.
      name: Delectus ipsa et hic sunt ut fugit.
      slug: msmhgbrltf
    properties:
      description:
        example: Dolorem et magnam alias.
        type: string
      name:
        example: Delectus ipsa et hic sunt ut fugit.
        type: string
      slug:
        example: msmhgbrltf
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddExpeditionPayload
    type: object
  AddMemberPayload:
    example:
      role: Sunt iste expedita.
      user_id: 5.6952063e+18
    properties:
      role:
        example: Sunt iste expedita.
        type: string
      user_id:
        example: 5.6952063e+18
        format: int64
        type: integer
    required:
    - user_id
    - role
    title: AddMemberPayload
    type: object
  AddProjectPayload:
    example:
      description: Cum iusto iusto quia.
      name: Fuga architecto nobis omnis.
      slug: 11056gahfd
    properties:
      description:
        example: Cum iusto iusto quia.
        type: string
      name:
        example: Fuga architecto nobis omnis.
        type: string
      slug:
        example: 11056gahfd
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddProjectPayload
    type: object
  AddTeamPayload:
    example:
      description: Consectetur occaecati occaecati omnis sint excepturi rerum.
      name: Rem sint velit ad laboriosam voluptatem explicabo.
      slug: ngd200jauc
    properties:
      description:
        example: Consectetur occaecati occaecati omnis sint excepturi rerum.
        type: string
      name:
        example: Rem sint velit ad laboriosam voluptatem explicabo.
        type: string
      slug:
        example: ngd200jauc
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddTeamPayload
    type: object
  AddUserPayload:
    example:
      bio: Vitae itaque consequatur non nisi dolor.
      email: bella@wilderman.biz
      invite_token: Sed ducimus molestiae distinctio eum consequatur.
      name: 1e5q3b6z6j
      password: q26y98iweo
      username: ufpoe7n4jt
    properties:
      bio:
        example: Vitae itaque consequatur non nisi dolor.
        type: string
      email:
        example: bella@wilderman.biz
        format: email
        type: string
      invite_token:
        example: Sed ducimus molestiae distinctio eum consequatur.
        type: string
      name:
        example: 1e5q3b6z6j
        maxLength: 256
        pattern: \S
        type: string
      password:
        example: q26y98iweo
        minLength: 10
        type: string
      username:
        example: ufpoe7n4jt
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - email
    - username
    - password
    - bio
    - invite_token
    title: AddUserPayload
    type: object
  Expedition:
    description: Expedition media type (default view)
    example:
      description: Qui possimus porro quaerat.
      id: 1.2402411e+18
      name: Saepe facilis quis blanditiis recusandae est.
      slug: ap0fuesxsv
    properties:
      description:
        example: Qui possimus porro quaerat.
        type: string
      id:
        example: 1.2402411e+18
        format: int64
        type: integer
      name:
        example: Saepe facilis quis blanditiis recusandae est.
        type: string
      slug:
        example: ap0fuesxsv
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.expedition+json; view=default'
    type: object
  ExpeditionCollection:
    description: ExpeditionCollection is the media type for an array of Expedition
      (default view)
    example:
    - description: Qui possimus porro quaerat.
      id: 1.2402411e+18
      name: Saepe facilis quis blanditiis recusandae est.
      slug: ap0fuesxsv
    - description: Qui possimus porro quaerat.
      id: 1.2402411e+18
      name: Saepe facilis quis blanditiis recusandae est.
      slug: ap0fuesxsv
    - description: Qui possimus porro quaerat.
      id: 1.2402411e+18
      name: Saepe facilis quis blanditiis recusandae est.
      slug: ap0fuesxsv
    items:
      $ref: '#/definitions/Expedition'
    title: 'Mediatype identifier: application/vnd.app.expedition+json; type=collection;
      view=default'
    type: array
  Expeditions:
    description: Expeditions media type (default view)
    example:
      expeditions:
      - description: Qui possimus porro quaerat.
        id: 1.2402411e+18
        name: Saepe facilis quis blanditiis recusandae est.
        slug: ap0fuesxsv
      - description: Qui possimus porro quaerat.
        id: 1.2402411e+18
        name: Saepe facilis quis blanditiis recusandae est.
        slug: ap0fuesxsv
    properties:
      expeditions:
        $ref: '#/definitions/ExpeditionCollection'
    required:
    - expeditions
    title: 'Mediatype identifier: application/vnd.app.expeditions+json; view=default'
    type: object
  Inputs:
    description: Inputs media type (default view)
    example:
      twitter_accounts:
      - expedition_id: 4.464267e+18
        id: 3.6825135e+17
        screen_name: Laboriosam aut voluptatum.
        twitter_account_id: 2.2726114e+18
      - expedition_id: 4.464267e+18
        id: 3.6825135e+17
        screen_name: Laboriosam aut voluptatum.
        twitter_account_id: 2.2726114e+18
    properties:
      twitter_accounts:
        $ref: '#/definitions/TwitterAccountCollection'
    title: 'Mediatype identifier: application/vnd.app.inputs+json; view=default'
    type: object
  Location:
    description: Location media type (default view)
    example:
      location: http://stehr.net/lura
    properties:
      location:
        example: http://stehr.net/lura
        format: uri
        type: string
    required:
    - location
    title: 'Mediatype identifier: application/vnd.app.location+json; view=default'
    type: object
  LoginPayload:
    example:
      password: 77aketl8qk
      username: eb63hu9e7a
    properties:
      password:
        example: 77aketl8qk
        minLength: 10
        type: string
      username:
        example: eb63hu9e7a
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - username
    - password
    title: LoginPayload
    type: object
  Project:
    description: Project media type (default view)
    example:
      description: Eum enim deleniti sint velit qui.
      id: 1.3454926e+17
      name: Quidem quis fugit commodi ut.
      slug: 7z8os8qw8b
    properties:
      description:
        example: Eum enim deleniti sint velit qui.
        type: string
      id:
        example: 1.3454926e+17
        format: int64
        type: integer
      name:
        example: Quidem quis fugit commodi ut.
        type: string
      slug:
        example: 7z8os8qw8b
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.project+json; view=default'
    type: object
  ProjectAdministrator:
    description: ProjectAdministrator media type (default view)
    example:
      project_id: 1.2833427e+18
      user_id: 6.2970576e+18
    properties:
      project_id:
        example: 1.2833427e+18
        format: int64
        type: integer
      user_id:
        example: 6.2970576e+18
        format: int64
        type: integer
    required:
    - project_id
    - user_id
    title: 'Mediatype identifier: application/vnd.app.administrator+json; view=default'
    type: object
  ProjectAdministratorCollection:
    description: ProjectAdministratorCollection is the media type for an array of
      ProjectAdministrator (default view)
    example:
    - project_id: 1.2833427e+18
      user_id: 6.2970576e+18
    - project_id: 1.2833427e+18
      user_id: 6.2970576e+18
    - project_id: 1.2833427e+18
      user_id: 6.2970576e+18
    items:
      $ref: '#/definitions/ProjectAdministrator'
    title: 'Mediatype identifier: application/vnd.app.administrator+json; type=collection;
      view=default'
    type: array
  ProjectAdministrators:
    description: ProjectAdministrators media type (default view)
    example:
      administrators:
      - project_id: 1.2833427e+18
        user_id: 6.2970576e+18
      - project_id: 1.2833427e+18
        user_id: 6.2970576e+18
      - project_id: 1.2833427e+18
        user_id: 6.2970576e+18
    properties:
      administrators:
        $ref: '#/definitions/ProjectAdministratorCollection'
    required:
    - administrators
    title: 'Mediatype identifier: application/vnd.app.administrators+json; view=default'
    type: object
  ProjectCollection:
    description: ProjectCollection is the media type for an array of Project (default
      view)
    example:
    - description: Eum enim deleniti sint velit qui.
      id: 1.3454926e+17
      name: Quidem quis fugit commodi ut.
      slug: 7z8os8qw8b
    - description: Eum enim deleniti sint velit qui.
      id: 1.3454926e+17
      name: Quidem quis fugit commodi ut.
      slug: 7z8os8qw8b
    items:
      $ref: '#/definitions/Project'
    title: 'Mediatype identifier: application/vnd.app.project+json; type=collection;
      view=default'
    type: array
  Projects:
    description: Projects media type (default view)
    example:
      projects:
      - description: Eum enim deleniti sint velit qui.
        id: 1.3454926e+17
        name: Quidem quis fugit commodi ut.
        slug: 7z8os8qw8b
      - description: Eum enim deleniti sint velit qui.
        id: 1.3454926e+17
        name: Quidem quis fugit commodi ut.
        slug: 7z8os8qw8b
    properties:
      projects:
        $ref: '#/definitions/ProjectCollection'
    required:
    - projects
    title: 'Mediatype identifier: application/vnd.app.projects+json; view=default'
    type: object
  RefreshUserPayload:
    example:
      refresh_token: Sed id vitae est nobis odit necessitatibus.
    properties:
      refresh_token:
        example: Sed id vitae est nobis odit necessitatibus.
        type: string
    required:
    - refresh_token
    title: RefreshUserPayload
    type: object
  Team:
    description: Team media type (default view)
    example:
      description: Ipsam reprehenderit totam dolorem impedit hic.
      id: 6.0403337e+18
      name: Repellendus cupiditate nemo doloribus.
      slug: bux7jxef7u
    properties:
      description:
        example: Ipsam reprehenderit totam dolorem impedit hic.
        type: string
      id:
        example: 6.0403337e+18
        format: int64
        type: integer
      name:
        example: Repellendus cupiditate nemo doloribus.
        type: string
      slug:
        example: bux7jxef7u
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.team+json; view=default'
    type: object
  TeamCollection:
    description: TeamCollection is the media type for an array of Team (default view)
    example:
    - description: Ipsam reprehenderit totam dolorem impedit hic.
      id: 6.0403337e+18
      name: Repellendus cupiditate nemo doloribus.
      slug: bux7jxef7u
    - description: Ipsam reprehenderit totam dolorem impedit hic.
      id: 6.0403337e+18
      name: Repellendus cupiditate nemo doloribus.
      slug: bux7jxef7u
    - description: Ipsam reprehenderit totam dolorem impedit hic.
      id: 6.0403337e+18
      name: Repellendus cupiditate nemo doloribus.
      slug: bux7jxef7u
    items:
      $ref: '#/definitions/Team'
    title: 'Mediatype identifier: application/vnd.app.team+json; type=collection;
      view=default'
    type: array
  TeamMember:
    description: TeamMember media type (default view)
    example:
      role: Et amet amet reiciendis.
      team_id: 5.857079e+18
      user_id: 5.3071106e+18
    properties:
      role:
        example: Et amet amet reiciendis.
        type: string
      team_id:
        example: 5.857079e+18
        format: int64
        type: integer
      user_id:
        example: 5.3071106e+18
        format: int64
        type: integer
    required:
    - team_id
    - user_id
    - role
    title: 'Mediatype identifier: application/vnd.app.member+json; view=default'
    type: object
  TeamMemberCollection:
    description: TeamMemberCollection is the media type for an array of TeamMember
      (default view)
    example:
    - role: Et amet amet reiciendis.
      team_id: 5.857079e+18
      user_id: 5.3071106e+18
    - role: Et amet amet reiciendis.
      team_id: 5.857079e+18
      user_id: 5.3071106e+18
    - role: Et amet amet reiciendis.
      team_id: 5.857079e+18
      user_id: 5.3071106e+18
    items:
      $ref: '#/definitions/TeamMember'
    title: 'Mediatype identifier: application/vnd.app.member+json; type=collection;
      view=default'
    type: array
  TeamMembers:
    description: TeamMembers media type (default view)
    example:
      members:
      - role: Et amet amet reiciendis.
        team_id: 5.857079e+18
        user_id: 5.3071106e+18
      - role: Et amet amet reiciendis.
        team_id: 5.857079e+18
        user_id: 5.3071106e+18
    properties:
      members:
        $ref: '#/definitions/TeamMemberCollection'
    required:
    - members
    title: 'Mediatype identifier: application/vnd.app.members+json; view=default'
    type: object
  Teams:
    description: Teams media type (default view)
    example:
      teams:
      - description: Ipsam reprehenderit totam dolorem impedit hic.
        id: 6.0403337e+18
        name: Repellendus cupiditate nemo doloribus.
        slug: bux7jxef7u
      - description: Ipsam reprehenderit totam dolorem impedit hic.
        id: 6.0403337e+18
        name: Repellendus cupiditate nemo doloribus.
        slug: bux7jxef7u
      - description: Ipsam reprehenderit totam dolorem impedit hic.
        id: 6.0403337e+18
        name: Repellendus cupiditate nemo doloribus.
        slug: bux7jxef7u
    properties:
      teams:
        $ref: '#/definitions/TeamCollection'
    required:
    - teams
    title: 'Mediatype identifier: application/vnd.app.teams+json; view=default'
    type: object
  TwitterAccount:
    description: TwitterAccount media type (default view)
    example:
      expedition_id: 4.464267e+18
      id: 3.6825135e+17
      screen_name: Laboriosam aut voluptatum.
      twitter_account_id: 2.2726114e+18
    properties:
      expedition_id:
        example: 4.464267e+18
        format: int64
        type: integer
      id:
        example: 3.6825135e+17
        format: int64
        type: integer
      screen_name:
        example: Laboriosam aut voluptatum.
        type: string
      twitter_account_id:
        example: 2.2726114e+18
        format: int64
        type: integer
    required:
    - id
    - expedition_id
    - twitter_account_id
    - screen_name
    title: 'Mediatype identifier: application/vnd.app.twitter_account+json; view=default'
    type: object
  TwitterAccountCollection:
    description: TwitterAccountCollection is the media type for an array of TwitterAccount
      (default view)
    example:
    - expedition_id: 4.464267e+18
      id: 3.6825135e+17
      screen_name: Laboriosam aut voluptatum.
      twitter_account_id: 2.2726114e+18
    - expedition_id: 4.464267e+18
      id: 3.6825135e+17
      screen_name: Laboriosam aut voluptatum.
      twitter_account_id: 2.2726114e+18
    items:
      $ref: '#/definitions/TwitterAccount'
    title: 'Mediatype identifier: application/vnd.app.twitter_account+json; type=collection;
      view=default'
    type: array
  TwitterAccounts:
    description: TwitterAccounts media type (default view)
    example:
      twitter_accounts:
      - expedition_id: 4.464267e+18
        id: 3.6825135e+17
        screen_name: Laboriosam aut voluptatum.
        twitter_account_id: 2.2726114e+18
      - expedition_id: 4.464267e+18
        id: 3.6825135e+17
        screen_name: Laboriosam aut voluptatum.
        twitter_account_id: 2.2726114e+18
      - expedition_id: 4.464267e+18
        id: 3.6825135e+17
        screen_name: Laboriosam aut voluptatum.
        twitter_account_id: 2.2726114e+18
    properties:
      twitter_accounts:
        $ref: '#/definitions/TwitterAccountCollection'
    required:
    - twitter_accounts
    title: 'Mediatype identifier: application/vnd.app.twitter_accounts+json; view=default'
    type: object
  UpdateMemberPayload:
    example:
      role: Est praesentium.
    properties:
      role:
        example: Est praesentium.
        type: string
    required:
    - role
    title: UpdateMemberPayload
    type: object
  UpdateUserPayload:
    example:
      bio: Veritatis velit.
      email: iva@halvorson.com
      name: v0uepd168s
      username: lx8rzq05j6
    properties:
      bio:
        example: Veritatis velit.
        type: string
      email:
        example: iva@halvorson.com
        format: email
        type: string
      name:
        example: v0uepd168s
        maxLength: 256
        pattern: \S
        type: string
      username:
        example: lx8rzq05j6
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - email
    - username
    - bio
    title: UpdateUserPayload
    type: object
  User:
    description: User media type (default view)
    example:
      bio: Quibusdam optio autem et.
      email: maxime@shieldsfritsch.info
      id: 3.241645e+18
      name: eo4ic2d6hc
      username: 00voebzeo5
    properties:
      bio:
        example: Quibusdam optio autem et.
        type: string
      email:
        example: maxime@shieldsfritsch.info
        format: email
        type: string
      id:
        example: 3.241645e+18
        format: int64
        type: integer
      name:
        example: eo4ic2d6hc
        maxLength: 256
        pattern: \S
        type: string
      username:
        example: 00voebzeo5
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - username
    - email
    - bio
    title: 'Mediatype identifier: application/vnd.app.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - bio: Quibusdam optio autem et.
      email: maxime@shieldsfritsch.info
      id: 3.241645e+18
      name: eo4ic2d6hc
      username: 00voebzeo5
    - bio: Quibusdam optio autem et.
      email: maxime@shieldsfritsch.info
      id: 3.241645e+18
      name: eo4ic2d6hc
      username: 00voebzeo5
    - bio: Quibusdam optio autem et.
      email: maxime@shieldsfritsch.info
      id: 3.241645e+18
      name: eo4ic2d6hc
      username: 00voebzeo5
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.app.user+json; type=collection;
      view=default'
    type: array
  Users:
    description: Users media type (default view)
    example:
      users:
      - bio: Quibusdam optio autem et.
        email: maxime@shieldsfritsch.info
        id: 3.241645e+18
        name: eo4ic2d6hc
        username: 00voebzeo5
      - bio: Quibusdam optio autem et.
        email: maxime@shieldsfritsch.info
        id: 3.241645e+18
        name: eo4ic2d6hc
        username: 00voebzeo5
    properties:
      users:
        $ref: '#/definitions/UserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.app.users+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: api.fieldkit.org
info:
  description: A one-click open platform for field researchers and explorers.
  title: Fieldkit API
  version: ""
paths:
  /expeditions/{expedition_id}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id expedition
      tags:
      - expedition
    patch:
      description: |-
        Update an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#update
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update expedition
      tags:
      - expedition
  /expeditions/{expedition_id}/inputs:
    get:
      description: |-
        List a project's inputs

        Required security scopes:
          * `api:access`
      operationId: input#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Inputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id input
      tags:
      - input
  /expeditions/{expedition_id}/inputs/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account inputs

        Required security scopes:
          * `api:access`
      operationId: twitter#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_accounts+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccounts'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id twitter
      tags:
      - twitter
    post:
      description: |-
        Add a Twitter account input

        Required security scopes:
          * `api:access`
      operationId: twitter#add
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.location+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add twitter
      tags:
      - twitter
  /expeditions/{expedition_id}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list id
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id team
      tags:
      - team
    post:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#add
      parameters:
      - in: path
        name: expedition_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add team
      tags:
      - team
  /inputs/twitter-accounts/{input_id}:
    get:
      description: |-
        Get a Twitter account input

        Required security scopes:
          * `api:access`
      operationId: twitter#get id
      parameters:
      - in: path
        name: input_id
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccount'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id twitter
      tags:
      - twitter
  /login:
    post:
      description: Creates a valid JWT given login credentials.
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: login user
      tags:
      - user
  /logout:
    post:
      description: |-
        Creates a valid JWT given login credentials.

        Required security scopes:
          * `api:access`
      operationId: user#logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: logout user
      tags:
      - user
  /projects:
    get:
      description: |-
        List projects

        Required security scopes:
          * `api:access`
      operationId: project#list
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project
      tags:
      - project
    post:
      description: |-
        Add a project

        Required security scopes:
          * `api:access`
      operationId: project#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add project
      tags:
      - project
  /projects/@/{project}:
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get
      parameters:
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get project
      tags:
      - project
  /projects/@/{project}/administrators:
    get:
      description: |-
        List an project's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list
      parameters:
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list administrator
      tags:
      - administrator
  /projects/@/{project}/administrators/@/{username}:
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get
      parameters:
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Username
        in: path
        name: username
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get administrator
      tags:
      - administrator
  /projects/@/{project}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list
      parameters:
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get
      parameters:
      - description: Expedition slug
        in: path
        name: expedition
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}/inputs:
    get:
      description: |-
        List a project's inputs

        Required security scopes:
          * `api:access`
      operationId: input#list
      parameters:
      - description: Expedition slug
        in: path
        name: expedition
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Inputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list input
      tags:
      - input
  /projects/@/{project}/expeditions/@/{expedition}/inputs/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account inputs

        Required security scopes:
          * `api:access`
      operationId: twitter#list
      parameters:
      - description: Expedition slug
        in: path
        name: expedition
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.twitter_accounts+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccounts'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list twitter
      tags:
      - twitter
  /projects/@/{project}/expeditions/@/{expedition}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list
      parameters:
      - description: Expedition slug
        in: path
        name: expedition
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get
      parameters:
      - description: Expedition slug
        in: path
        name: expedition
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: team
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members:
    get:
      description: |-
        List an team's members

        Required security scopes:
          * `api:access`
      operationId: member#list
      parameters:
      - description: Expedition slug
        in: path
        name: expedition
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        name: team
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list member
      tags:
      - member
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members/@/{username}:
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get
      parameters:
      - description: Expedition slug
        in: path
        name: expedition
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        name: project
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        name: team
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        name: username
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get member
      tags:
      - member
  /projects/{project_id}:
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id project
      tags:
      - project
    patch:
      description: |-
        Update a project

        Required security scopes:
          * `api:access`
      operationId: project#update
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update project
      tags:
      - project
  /projects/{project_id}/administrators:
    get:
      description: |-
        List an projects's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id administrator
      tags:
      - administrator
    post:
      description: |-
        Add an administrator to a project

        Required security scopes:
          * `api:access`
      operationId: administrator#add
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddAdministratorPayload'
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add administrator
      tags:
      - administrator
  /projects/{project_id}/administrators/{user_id}:
    delete:
      description: |-
        Remove an administrator from a project

        Required security scopes:
          * `api:access`
      operationId: administrator#delete
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete administrator
      tags:
      - administrator
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id administrator
      tags:
      - administrator
  /projects/{project_id}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list id
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id expedition
      tags:
      - expedition
    post:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#add
      parameters:
      - in: path
        name: project_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add expedition
      tags:
      - expedition
  /refresh:
    post:
      description: Creates a valid JWT given a refresh token.
      operationId: user#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshUserPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: refresh user
      tags:
      - user
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.yaml
  /teams/{team_id}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get id
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id team
      tags:
      - team
    patch:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#update
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update team
      tags:
      - team
  /teams/{team_id}/members:
    get:
      description: |-
        List an teams's members

        Required security scopes:
          * `api:access`
      operationId: member#list id
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id member
      tags:
      - member
    post:
      description: |-
        Add a member to a team

        Required security scopes:
          * `api:access`
      operationId: member#add
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add member
      tags:
      - member
  /teams/{team_id}/members/{user_id}:
    delete:
      description: |-
        Remove a member from a team

        Required security scopes:
          * `api:access`
      operationId: member#delete
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete member
      tags:
      - member
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get id
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id member
      tags:
      - member
    patch:
      description: |-
        Update a member

        Required security scopes:
          * `api:access`
      operationId: member#update
      parameters:
      - in: path
        name: team_id
        required: true
        type: integer
      - in: path
        name: user_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update member
      tags:
      - member
  /twitter/callback:
    get:
      description: OAuth callback endpoint for Twitter
      operationId: twitter#callback
      parameters:
      - in: query
        name: oauth_token
        required: true
        type: string
      - in: query
        name: oauth_verifier
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "400":
          description: Bad Request
      schemes:
      - https
      summary: callback twitter
      tags:
      - twitter
  /user:
    get:
      description: |-
        Get the authenticated user

        Required security scopes:
          * `api:access`
      operationId: user#get current
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user
      tags:
      - user
  /user/projects:
    get:
      description: |-
        List the authenticated user's projects

        Required security scopes:
          * `api:access`
      operationId: project#list current
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list current project
      tags:
      - project
  /users:
    get:
      description: |-
        List users

        Required security scopes:
          * `api:access`
      operationId: user#list
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
    post:
      description: Add a user
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: add user
      tags:
      - user
  /users/@/{username}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get
      parameters:
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get user
      tags:
      - user
  /users/{user_id}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get id
      parameters:
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id user
      tags:
      - user
    patch:
      description: |-
        Update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - in: path
        name: user_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /users/{user_id}/picture:
    get:
      description: List a project's inputs
      operationId: picture#get id
      parameters:
      - in: path
        name: user_id
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get id picture
      tags:
      - picture
  /validate:
    get:
      description: Validate a user's email address.
      operationId: user#validate
      parameters:
      - in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: validate user
      tags:
      - user
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  NoContent:
    description: No Content
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
