consumes:
- application/json
definitions:
  AddAdministratorPayload:
    example:
      userId: 7.3244094e+18
    properties:
      userId:
        example: 7.3244094e+18
        format: int64
        type: integer
    required:
    - userId
    title: AddAdministratorPayload
    type: object
  AddDeviceInputPayload:
    example:
      key: Odit sed id vitae est.
      name: Odit necessitatibus non veritatis velit unde reiciendis.
    properties:
      key:
        example: Odit sed id vitae est.
        type: string
      name:
        example: Odit necessitatibus non veritatis velit unde reiciendis.
        type: string
    required:
    - name
    - key
    title: AddDeviceInputPayload
    type: object
  AddExpeditionPayload:
    example:
      description: Non vero ut aliquid in doloribus.
      name: Aut dolor hic.
      slug: 9zqliv0uep
    properties:
      description:
        example: Non vero ut aliquid in doloribus.
        type: string
      name:
        example: Aut dolor hic.
        type: string
      slug:
        example: 9zqliv0uep
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddExpeditionPayload
    type: object
  AddMemberPayload:
    example:
      role: Odit eum qui magnam minima cupiditate.
      userId: 9.11618e+18
    properties:
      role:
        example: Odit eum qui magnam minima cupiditate.
        type: string
      userId:
        example: 9.11618e+18
        format: int64
        type: integer
    required:
    - userId
    - role
    title: AddMemberPayload
    type: object
  AddProjectPayload:
    example:
      description: Sequi eum aspernatur nulla rerum aliquam.
      name: Esse dignissimos mollitia.
      slug: lepy9p8qr0
    properties:
      description:
        example: Sequi eum aspernatur nulla rerum aliquam.
        type: string
      name:
        example: Esse dignissimos mollitia.
        type: string
      slug:
        example: lepy9p8qr0
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddProjectPayload
    type: object
  AddTeamPayload:
    example:
      description: Quia aut est rem atque in.
      name: 7uq48jsn3l
      slug: zlnik2mv00
    properties:
      description:
        example: Quia aut est rem atque in.
        type: string
      name:
        example: 7uq48jsn3l
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: zlnik2mv00
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - name
    - slug
    - description
    title: AddTeamPayload
    type: object
  AddTwitterAccountInputPayload:
    example:
      name: Veritatis delectus sit veritatis.
    properties:
      name:
        example: Veritatis delectus sit veritatis.
        type: string
    required:
    - name
    title: AddTwitterAccountInputPayload
    type: object
  AddUserPayload:
    example:
      bio: Ad et corporis et quasi laborum.
      email: tianna@king.net
      invite_token: Asperiores non nam autem sunt commodi.
      name: cr94vjic5n
      password: na5rcbqhs3
      username: aow4svy8w3
    properties:
      bio:
        example: Ad et corporis et quasi laborum.
        type: string
      email:
        example: tianna@king.net
        format: email
        type: string
      invite_token:
        example: Asperiores non nam autem sunt commodi.
        type: string
      name:
        example: cr94vjic5n
        maxLength: 256
        pattern: \S
        type: string
      password:
        example: na5rcbqhs3
        minLength: 10
        type: string
      username:
        description: Username
        example: aow4svy8w3
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - password
    - bio
    - invite_token
    title: AddUserPayload
    type: object
  DeviceInput:
    description: DeviceInput media type (default view)
    example:
      active: false
      expeditionId: 1.6901081e+18
      id: 1.2402411e+18
      key: Saepe facilis quis blanditiis recusandae est.
      name: Vel est.
      teamId: 8.415377e+17
      token: Voluptas rerum cumque nihil sit labore dolorem.
      userId: 1.06074567e+18
    properties:
      active:
        example: false
        type: boolean
      expeditionId:
        example: 1.6901081e+18
        format: int64
        type: integer
      id:
        example: 1.2402411e+18
        format: int64
        type: integer
      key:
        example: Saepe facilis quis blanditiis recusandae est.
        type: string
      name:
        example: Vel est.
        type: string
      teamId:
        example: 8.415377e+17
        format: int64
        type: integer
      token:
        example: Voluptas rerum cumque nihil sit labore dolorem.
        type: string
      userId:
        example: 1.06074567e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - active
    - name
    - token
    - key
    title: 'Mediatype identifier: application/vnd.app.device_input+json; view=default'
    type: object
  DeviceInputCollection:
    description: DeviceInputCollection is the media type for an array of DeviceInput
      (default view)
    example:
    - active: false
      expeditionId: 1.6901081e+18
      id: 1.2402411e+18
      key: Saepe facilis quis blanditiis recusandae est.
      name: Vel est.
      teamId: 8.415377e+17
      token: Voluptas rerum cumque nihil sit labore dolorem.
      userId: 1.06074567e+18
    items:
      $ref: '#/definitions/DeviceInput'
    title: 'Mediatype identifier: application/vnd.app.device_input+json; type=collection;
      view=default'
    type: array
  DeviceInputs:
    description: DeviceInputs media type (default view)
    example:
      deviceInputs:
      - active: false
        expeditionId: 1.6901081e+18
        id: 1.2402411e+18
        key: Saepe facilis quis blanditiis recusandae est.
        name: Vel est.
        teamId: 8.415377e+17
        token: Voluptas rerum cumque nihil sit labore dolorem.
        userId: 1.06074567e+18
      - active: false
        expeditionId: 1.6901081e+18
        id: 1.2402411e+18
        key: Saepe facilis quis blanditiis recusandae est.
        name: Vel est.
        teamId: 8.415377e+17
        token: Voluptas rerum cumque nihil sit labore dolorem.
        userId: 1.06074567e+18
    properties:
      deviceInputs:
        $ref: '#/definitions/DeviceInputCollection'
    required:
    - deviceInputs
    title: 'Mediatype identifier: application/vnd.app.device_inputs+json; view=default'
    type: object
  DeviceSchema:
    description: DeviceSchema media type (default view)
    example:
      active: true
      deviceId: 2.2726114e+18
      jsonSchema: Dignissimos earum incidunt consequuntur fugit non ut.
      key: Ducimus perspiciatis quasi error voluptatem et.
      projectId: 6.684198e+18
      schemaId: 5.521901e+17
    properties:
      active:
        example: true
        type: boolean
      deviceId:
        example: 2.2726114e+18
        format: int64
        type: integer
      jsonSchema:
        example: Dignissimos earum incidunt consequuntur fugit non ut.
        type: string
      key:
        example: Ducimus perspiciatis quasi error voluptatem et.
        type: string
      projectId:
        example: 6.684198e+18
        format: int64
        type: integer
      schemaId:
        example: 5.521901e+17
        format: int64
        type: integer
    required:
    - deviceId
    - schemaId
    - projectId
    - active
    - jsonSchema
    - key
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; view=default'
    type: object
  DeviceSchemaCollection:
    description: DeviceSchemaCollection is the media type for an array of DeviceSchema
      (default view)
    example:
    - active: true
      deviceId: 2.2726114e+18
      jsonSchema: Dignissimos earum incidunt consequuntur fugit non ut.
      key: Ducimus perspiciatis quasi error voluptatem et.
      projectId: 6.684198e+18
      schemaId: 5.521901e+17
    items:
      $ref: '#/definitions/DeviceSchema'
    title: 'Mediatype identifier: application/vnd.app.device_schema+json; type=collection;
      view=default'
    type: array
  DeviceSchemas:
    description: DeviceSchemas media type (default view)
    example:
      schemas:
      - active: true
        deviceId: 2.2726114e+18
        jsonSchema: Dignissimos earum incidunt consequuntur fugit non ut.
        key: Ducimus perspiciatis quasi error voluptatem et.
        projectId: 6.684198e+18
        schemaId: 5.521901e+17
      - active: true
        deviceId: 2.2726114e+18
        jsonSchema: Dignissimos earum incidunt consequuntur fugit non ut.
        key: Ducimus perspiciatis quasi error voluptatem et.
        projectId: 6.684198e+18
        schemaId: 5.521901e+17
    properties:
      schemas:
        $ref: '#/definitions/DeviceSchemaCollection'
    required:
    - schemas
    title: 'Mediatype identifier: application/vnd.app.device_schemas+json; view=default'
    type: object
  Expedition:
    description: Expedition media type (default view)
    example:
      description: Earum sit.
      id: 7.0972024e+18
      name: Dolores dolores et.
      slug: k5y3b7yon4
    properties:
      description:
        example: Earum sit.
        type: string
      id:
        example: 7.0972024e+18
        format: int64
        type: integer
      name:
        example: Dolores dolores et.
        type: string
      slug:
        example: k5y3b7yon4
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.expedition+json; view=default'
    type: object
  ExpeditionCollection:
    description: ExpeditionCollection is the media type for an array of Expedition
      (default view)
    example:
    - description: Earum sit.
      id: 7.0972024e+18
      name: Dolores dolores et.
      slug: k5y3b7yon4
    items:
      $ref: '#/definitions/Expedition'
    title: 'Mediatype identifier: application/vnd.app.expedition+json; type=collection;
      view=default'
    type: array
  Expeditions:
    description: Expeditions media type (default view)
    example:
      expeditions:
      - description: Earum sit.
        id: 7.0972024e+18
        name: Dolores dolores et.
        slug: k5y3b7yon4
      - description: Earum sit.
        id: 7.0972024e+18
        name: Dolores dolores et.
        slug: k5y3b7yon4
    properties:
      expeditions:
        $ref: '#/definitions/ExpeditionCollection'
    required:
    - expeditions
    title: 'Mediatype identifier: application/vnd.app.expeditions+json; view=default'
    type: object
  GeoJSON:
    description: GeoJSON media type (default view)
    example:
      features:
      - geometry:
          coordinates:
          - 0.11635985
          - 0.11635985
          - 0.11635985
          type: Eum enim deleniti sint velit qui.
        properties:
          Quidem quis fugit commodi ut.: 0.8188737
        type: Amet nulla dolore laboriosam soluta quia molestias.
      type: Quam est amet ipsam reprehenderit totam.
    properties:
      features:
        $ref: '#/definitions/GeoJSONFeatureCollection'
      type:
        example: Quam est amet ipsam reprehenderit totam.
        type: string
    required:
    - type
    - features
    title: 'Mediatype identifier: application/vnd.app.geojson+json; view=default'
    type: object
  GeoJSONFeature:
    description: GeoJSONFeature media type (default view)
    example:
      geometry:
        coordinates:
        - 0.11635985
        - 0.11635985
        - 0.11635985
        type: Eum enim deleniti sint velit qui.
      properties:
        Quidem quis fugit commodi ut.: 0.8188737
      type: Amet nulla dolore laboriosam soluta quia molestias.
    properties:
      geometry:
        $ref: '#/definitions/GeoJSONGeometry'
      properties:
        additionalProperties: true
        example:
          Quidem quis fugit commodi ut.: 0.8188737
        type: object
      type:
        example: Amet nulla dolore laboriosam soluta quia molestias.
        type: string
    required:
    - type
    - geometry
    - properties
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; view=default'
    type: object
  GeoJSONFeatureCollection:
    description: GeoJSONFeatureCollection is the media type for an array of GeoJSONFeature
      (default view)
    example:
    - geometry:
        coordinates:
        - 0.11635985
        - 0.11635985
        - 0.11635985
        type: Eum enim deleniti sint velit qui.
      properties:
        Quidem quis fugit commodi ut.: 0.8188737
      type: Amet nulla dolore laboriosam soluta quia molestias.
    items:
      $ref: '#/definitions/GeoJSONFeature'
    title: 'Mediatype identifier: application/vnd.app.geojson-feature+json; type=collection;
      view=default'
    type: array
  GeoJSONGeometry:
    description: GeoJSONGeometry media type (default view)
    example:
      coordinates:
      - 0.11635985
      - 0.11635985
      - 0.11635985
      type: Eum enim deleniti sint velit qui.
    properties:
      coordinates:
        example:
        - 0.11635985
        - 0.11635985
        - 0.11635985
        items:
          example: 0.11635985
          format: double
          type: number
        type: array
      type:
        example: Eum enim deleniti sint velit qui.
        type: string
    required:
    - type
    - coordinates
    title: 'Mediatype identifier: application/vnd.app.geojson-geometry+json; view=default'
    type: object
  GeometryClusterSummary:
    description: GeometryClusterSummary media type (default view)
    example:
      centroid:
      - 0.90857327
      - 0.90857327
      - 0.90857327
      endTime: 1996-09-08T18:00:07Z
      geometry:
      - - 0.39312464
        - 0.39312464
        - 0.39312464
      id: 1.5355434e+18
      numberOfFeatures: 1.5655853e+18
      radius: 0.75279874
      startTime: 2011-05-05T21:57:47Z
    properties:
      centroid:
        example:
        - 0.90857327
        - 0.90857327
        - 0.90857327
        items:
          example: 0.90857327
          format: double
          type: number
        type: array
      endTime:
        example: 1996-09-08T18:00:07Z
        format: date-time
        type: string
      geometry:
        example:
        - - 0.39312464
          - 0.39312464
          - 0.39312464
        items:
          example:
          - 0.39312464
          - 0.39312464
          - 0.39312464
          items:
            example: 0.39312464
            format: double
            type: number
          type: array
        type: array
      id:
        example: 1.5355434e+18
        format: int64
        type: integer
      numberOfFeatures:
        example: 1.5655853e+18
        format: int64
        type: integer
      radius:
        example: 0.75279874
        format: double
        type: number
      startTime:
        example: 2011-05-05T21:57:47Z
        format: date-time
        type: string
    required:
    - id
    - startTime
    - endTime
    - numberOfFeatures
    - centroid
    - radius
    - geometry
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      view=default'
    type: object
  GeometryClusterSummaryCollection:
    description: GeometryClusterSummaryCollection is the media type for an array of
      GeometryClusterSummary (default view)
    example:
    - centroid:
      - 0.90857327
      - 0.90857327
      - 0.90857327
      endTime: 1996-09-08T18:00:07Z
      geometry:
      - - 0.39312464
        - 0.39312464
        - 0.39312464
      id: 1.5355434e+18
      numberOfFeatures: 1.5655853e+18
      radius: 0.75279874
      startTime: 2011-05-05T21:57:47Z
    - centroid:
      - 0.90857327
      - 0.90857327
      - 0.90857327
      endTime: 1996-09-08T18:00:07Z
      geometry:
      - - 0.39312464
        - 0.39312464
        - 0.39312464
      id: 1.5355434e+18
      numberOfFeatures: 1.5655853e+18
      radius: 0.75279874
      startTime: 2011-05-05T21:57:47Z
    - centroid:
      - 0.90857327
      - 0.90857327
      - 0.90857327
      endTime: 1996-09-08T18:00:07Z
      geometry:
      - - 0.39312464
        - 0.39312464
        - 0.39312464
      id: 1.5355434e+18
      numberOfFeatures: 1.5655853e+18
      radius: 0.75279874
      startTime: 2011-05-05T21:57:47Z
    items:
      $ref: '#/definitions/GeometryClusterSummary'
    title: 'Mediatype identifier: application/vnd.app.geometry_cluster_summary+json;
      type=collection; view=default'
    type: array
  Input:
    description: Input media type (default view)
    example:
      active: true
      expeditionId: 4.5246624e+18
      id: 1.1058285e+18
      name: Iusto quaerat ea quibusdam optio autem.
      teamId: 6.3026013e+18
      userId: 7.3631287e+18
    properties:
      active:
        example: true
        type: boolean
      expeditionId:
        example: 4.5246624e+18
        format: int64
        type: integer
      id:
        example: 1.1058285e+18
        format: int64
        type: integer
      name:
        example: Iusto quaerat ea quibusdam optio autem.
        type: string
      teamId:
        example: 6.3026013e+18
        format: int64
        type: integer
      userId:
        example: 7.3631287e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    title: 'Mediatype identifier: application/vnd.app.input+json; view=default'
    type: object
  InputSummary:
    description: InputSummary media type (default view)
    example:
      id: 7.3944103e+18
      name: Natus dolores quo suscipit voluptatem magni in.
      spatial:
      - centroid:
        - 0.90857327
        - 0.90857327
        - 0.90857327
        endTime: 1996-09-08T18:00:07Z
        geometry:
        - - 0.39312464
          - 0.39312464
          - 0.39312464
        id: 1.5355434e+18
        numberOfFeatures: 1.5655853e+18
        radius: 0.75279874
        startTime: 2011-05-05T21:57:47Z
      - centroid:
        - 0.90857327
        - 0.90857327
        - 0.90857327
        endTime: 1996-09-08T18:00:07Z
        geometry:
        - - 0.39312464
          - 0.39312464
          - 0.39312464
        id: 1.5355434e+18
        numberOfFeatures: 1.5655853e+18
        radius: 0.75279874
        startTime: 2011-05-05T21:57:47Z
      - centroid:
        - 0.90857327
        - 0.90857327
        - 0.90857327
        endTime: 1996-09-08T18:00:07Z
        geometry:
        - - 0.39312464
          - 0.39312464
          - 0.39312464
        id: 1.5355434e+18
        numberOfFeatures: 1.5655853e+18
        radius: 0.75279874
        startTime: 2011-05-05T21:57:47Z
      temporal:
      - centroid:
        - 0.90857327
        - 0.90857327
        - 0.90857327
        endTime: 1996-09-08T18:00:07Z
        geometry:
        - - 0.39312464
          - 0.39312464
          - 0.39312464
        id: 1.5355434e+18
        numberOfFeatures: 1.5655853e+18
        radius: 0.75279874
        startTime: 2011-05-05T21:57:47Z
    properties:
      id:
        example: 7.3944103e+18
        format: int64
        type: integer
      name:
        example: Natus dolores quo suscipit voluptatem magni in.
        type: string
      spatial:
        $ref: '#/definitions/GeometryClusterSummaryCollection'
      temporal:
        $ref: '#/definitions/GeometryClusterSummaryCollection'
    required:
    - id
    - name
    - temporal
    - spatial
    title: 'Mediatype identifier: application/vnd.app.input_summary+json; view=default'
    type: object
  InputToken:
    description: InputToken media type (default view)
    example:
      expeditionId: 4.500917e+18
      id: 7.939712e+18
      token: Aut repellendus quam soluta.
    properties:
      expeditionId:
        example: 4.500917e+18
        format: int64
        type: integer
      id:
        example: 7.939712e+18
        format: int64
        type: integer
      token:
        example: Aut repellendus quam soluta.
        type: string
    required:
    - id
    - token
    - expeditionId
    title: 'Mediatype identifier: application/vnd.app.input_token+json; view=default'
    type: object
  InputTokenCollection:
    description: InputTokenCollection is the media type for an array of InputToken
      (default view)
    example:
    - expeditionId: 4.500917e+18
      id: 7.939712e+18
      token: Aut repellendus quam soluta.
    items:
      $ref: '#/definitions/InputToken'
    title: 'Mediatype identifier: application/vnd.app.input_token+json; type=collection;
      view=default'
    type: array
  InputTokens:
    description: InputTokens media type (default view)
    example:
      inputTokens:
      - expeditionId: 4.500917e+18
        id: 7.939712e+18
        token: Aut repellendus quam soluta.
    properties:
      inputTokens:
        $ref: '#/definitions/InputTokenCollection'
    required:
    - inputTokens
    title: 'Mediatype identifier: application/vnd.app.input_tokens+json; view=default'
    type: object
  Inputs:
    description: Inputs media type (default view)
    example:
      deviceInputs:
      - active: false
        expeditionId: 1.6901081e+18
        id: 1.2402411e+18
        key: Saepe facilis quis blanditiis recusandae est.
        name: Vel est.
        teamId: 8.415377e+17
        token: Voluptas rerum cumque nihil sit labore dolorem.
        userId: 1.06074567e+18
      - active: false
        expeditionId: 1.6901081e+18
        id: 1.2402411e+18
        key: Saepe facilis quis blanditiis recusandae est.
        name: Vel est.
        teamId: 8.415377e+17
        token: Voluptas rerum cumque nihil sit labore dolorem.
        userId: 1.06074567e+18
      twitterAccountInputs:
      - expeditionId: 8.0106646e+18
        id: 5.1997835e+18
        name: Dolores rerum praesentium ratione et dolores.
        screenName: Voluptas sed dolorum itaque qui sequi.
        teamId: 3.9228076e+18
        twitterAccountId: 4.8803786e+18
        userId: 2.0414701e+18
    properties:
      deviceInputs:
        $ref: '#/definitions/DeviceInputCollection'
      twitterAccountInputs:
        $ref: '#/definitions/TwitterAccountInputCollection'
    title: 'Mediatype identifier: application/vnd.app.inputs+json; view=default'
    type: object
  Location:
    description: Location media type (default view)
    example:
      location: http://reynolds.biz/alexandra
    properties:
      location:
        example: http://reynolds.biz/alexandra
        format: uri
        type: string
    required:
    - location
    title: 'Mediatype identifier: application/vnd.app.location+json; view=default'
    type: object
  LoginPayload:
    example:
      password: jezymno95g
      username: vcbmmrted8
    properties:
      password:
        example: jezymno95g
        minLength: 10
        type: string
      username:
        description: Username
        example: vcbmmrted8
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - username
    - password
    title: LoginPayload
    type: object
  PagedGeoJSON:
    description: PagedGeoJSON media type (default view)
    example:
      geo:
        features:
        - geometry:
            coordinates:
            - 0.11635985
            - 0.11635985
            - 0.11635985
            type: Eum enim deleniti sint velit qui.
          properties:
            Quidem quis fugit commodi ut.: 0.8188737
          type: Amet nulla dolore laboriosam soluta quia molestias.
        type: Quam est amet ipsam reprehenderit totam.
      hasMore: false
      nextUrl: Praesentium ut cum iusto iusto quia officia.
      previousUrl: Architecto nobis omnis dolores quia id exercitationem.
    properties:
      geo:
        $ref: '#/definitions/GeoJSON'
      hasMore:
        example: false
        type: boolean
      nextUrl:
        example: Praesentium ut cum iusto iusto quia officia.
        type: string
      previousUrl:
        example: Architecto nobis omnis dolores quia id exercitationem.
        type: string
    required:
    - nextUrl
    - geo
    - hasMore
    title: 'Mediatype identifier: application/vnd.app.paged-geojson+json; view=default'
    type: object
  Project:
    description: Project media type (default view)
    example:
      description: Error et.
      id: 3.1106553e+18
      name: Quas voluptates ad consectetur occaecati occaecati.
      slug: uoy52dmi76
    properties:
      description:
        example: Error et.
        type: string
      id:
        example: 3.1106553e+18
        format: int64
        type: integer
      name:
        example: Quas voluptates ad consectetur occaecati occaecati.
        type: string
      slug:
        example: uoy52dmi76
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.project+json; view=default'
    type: object
  ProjectAdministrator:
    description: ProjectAdministrator media type (default view)
    example:
      projectId: 1.2833427e+18
      userId: 6.2970576e+18
    properties:
      projectId:
        example: 1.2833427e+18
        format: int64
        type: integer
      userId:
        example: 6.2970576e+18
        format: int64
        type: integer
    required:
    - projectId
    - userId
    title: 'Mediatype identifier: application/vnd.app.administrator+json; view=default'
    type: object
  ProjectAdministratorCollection:
    description: ProjectAdministratorCollection is the media type for an array of
      ProjectAdministrator (default view)
    example:
    - projectId: 1.2833427e+18
      userId: 6.2970576e+18
    - projectId: 1.2833427e+18
      userId: 6.2970576e+18
    items:
      $ref: '#/definitions/ProjectAdministrator'
    title: 'Mediatype identifier: application/vnd.app.administrator+json; type=collection;
      view=default'
    type: array
  ProjectAdministrators:
    description: ProjectAdministrators media type (default view)
    example:
      administrators:
      - projectId: 1.2833427e+18
        userId: 6.2970576e+18
    properties:
      administrators:
        $ref: '#/definitions/ProjectAdministratorCollection'
    required:
    - administrators
    title: 'Mediatype identifier: application/vnd.app.administrators+json; view=default'
    type: object
  ProjectCollection:
    description: ProjectCollection is the media type for an array of Project (default
      view)
    example:
    - description: Error et.
      id: 3.1106553e+18
      name: Quas voluptates ad consectetur occaecati occaecati.
      slug: uoy52dmi76
    items:
      $ref: '#/definitions/Project'
    title: 'Mediatype identifier: application/vnd.app.project+json; type=collection;
      view=default'
    type: array
  Projects:
    description: Projects media type (default view)
    example:
      projects:
      - description: Error et.
        id: 3.1106553e+18
        name: Quas voluptates ad consectetur occaecati occaecati.
        slug: uoy52dmi76
    properties:
      projects:
        $ref: '#/definitions/ProjectCollection'
    required:
    - projects
    title: 'Mediatype identifier: application/vnd.app.projects+json; view=default'
    type: object
  RefreshUserPayload:
    example:
      refresh_token: Aut reiciendis doloremque autem necessitatibus doloribus et.
    properties:
      refresh_token:
        example: Aut reiciendis doloremque autem necessitatibus doloribus et.
        type: string
    required:
    - refresh_token
    title: RefreshUserPayload
    type: object
  Team:
    description: Team media type (default view)
    example:
      description: Debitis rerum rerum.
      id: 6.3898915e+18
      name: jauckup4mr
      slug: luru5prgjk
    properties:
      description:
        example: Debitis rerum rerum.
        type: string
      id:
        example: 6.3898915e+18
        format: int64
        type: integer
      name:
        example: jauckup4mr
        maxLength: 256
        pattern: \S
        type: string
      slug:
        example: luru5prgjk
        maxLength: 40
        pattern: ^[[:alnum:]]+(-[[:alnum:]]+)*$
        type: string
    required:
    - id
    - name
    - slug
    - description
    title: 'Mediatype identifier: application/vnd.app.team+json; view=default'
    type: object
  TeamCollection:
    description: TeamCollection is the media type for an array of Team (default view)
    example:
    - description: Debitis rerum rerum.
      id: 6.3898915e+18
      name: jauckup4mr
      slug: luru5prgjk
    - description: Debitis rerum rerum.
      id: 6.3898915e+18
      name: jauckup4mr
      slug: luru5prgjk
    items:
      $ref: '#/definitions/Team'
    title: 'Mediatype identifier: application/vnd.app.team+json; type=collection;
      view=default'
    type: array
  TeamMember:
    description: TeamMember media type (default view)
    example:
      role: Perspiciatis adipisci aut ducimus autem et.
      teamId: 5.239963e+18
      userId: 4.153799e+18
    properties:
      role:
        example: Perspiciatis adipisci aut ducimus autem et.
        type: string
      teamId:
        example: 5.239963e+18
        format: int64
        type: integer
      userId:
        example: 4.153799e+18
        format: int64
        type: integer
    required:
    - teamId
    - userId
    - role
    title: 'Mediatype identifier: application/vnd.app.member+json; view=default'
    type: object
  TeamMemberCollection:
    description: TeamMemberCollection is the media type for an array of TeamMember
      (default view)
    example:
    - role: Perspiciatis adipisci aut ducimus autem et.
      teamId: 5.239963e+18
      userId: 4.153799e+18
    items:
      $ref: '#/definitions/TeamMember'
    title: 'Mediatype identifier: application/vnd.app.member+json; type=collection;
      view=default'
    type: array
  TeamMembers:
    description: TeamMembers media type (default view)
    example:
      members:
      - role: Perspiciatis adipisci aut ducimus autem et.
        teamId: 5.239963e+18
        userId: 4.153799e+18
      - role: Perspiciatis adipisci aut ducimus autem et.
        teamId: 5.239963e+18
        userId: 4.153799e+18
      - role: Perspiciatis adipisci aut ducimus autem et.
        teamId: 5.239963e+18
        userId: 4.153799e+18
    properties:
      members:
        $ref: '#/definitions/TeamMemberCollection'
    required:
    - members
    title: 'Mediatype identifier: application/vnd.app.members+json; view=default'
    type: object
  Teams:
    description: Teams media type (default view)
    example:
      teams:
      - description: Debitis rerum rerum.
        id: 6.3898915e+18
        name: jauckup4mr
        slug: luru5prgjk
    properties:
      teams:
        $ref: '#/definitions/TeamCollection'
    required:
    - teams
    title: 'Mediatype identifier: application/vnd.app.teams+json; view=default'
    type: object
  TwitterAccountInput:
    description: TwitterAccountInput media type (default view)
    example:
      expeditionId: 8.0106646e+18
      id: 5.1997835e+18
      name: Dolores rerum praesentium ratione et dolores.
      screenName: Voluptas sed dolorum itaque qui sequi.
      teamId: 3.9228076e+18
      twitterAccountId: 4.8803786e+18
      userId: 2.0414701e+18
    properties:
      expeditionId:
        example: 8.0106646e+18
        format: int64
        type: integer
      id:
        example: 5.1997835e+18
        format: int64
        type: integer
      name:
        example: Dolores rerum praesentium ratione et dolores.
        type: string
      screenName:
        example: Voluptas sed dolorum itaque qui sequi.
        type: string
      teamId:
        example: 3.9228076e+18
        format: int64
        type: integer
      twitterAccountId:
        example: 4.8803786e+18
        format: int64
        type: integer
      userId:
        example: 2.0414701e+18
        format: int64
        type: integer
    required:
    - id
    - expeditionId
    - name
    - twitterAccountId
    - screenName
    title: 'Mediatype identifier: application/vnd.app.twitter_account_input+json;
      view=default'
    type: object
  TwitterAccountInputCollection:
    description: TwitterAccountInputCollection is the media type for an array of TwitterAccountInput
      (default view)
    example:
    - expeditionId: 8.0106646e+18
      id: 5.1997835e+18
      name: Dolores rerum praesentium ratione et dolores.
      screenName: Voluptas sed dolorum itaque qui sequi.
      teamId: 3.9228076e+18
      twitterAccountId: 4.8803786e+18
      userId: 2.0414701e+18
    - expeditionId: 8.0106646e+18
      id: 5.1997835e+18
      name: Dolores rerum praesentium ratione et dolores.
      screenName: Voluptas sed dolorum itaque qui sequi.
      teamId: 3.9228076e+18
      twitterAccountId: 4.8803786e+18
      userId: 2.0414701e+18
    - expeditionId: 8.0106646e+18
      id: 5.1997835e+18
      name: Dolores rerum praesentium ratione et dolores.
      screenName: Voluptas sed dolorum itaque qui sequi.
      teamId: 3.9228076e+18
      twitterAccountId: 4.8803786e+18
      userId: 2.0414701e+18
    items:
      $ref: '#/definitions/TwitterAccountInput'
    title: 'Mediatype identifier: application/vnd.app.twitter_account_input+json;
      type=collection; view=default'
    type: array
  TwitterAccountInputs:
    description: TwitterAccountInputs media type (default view)
    example:
      twitterAccountInputs:
      - expeditionId: 8.0106646e+18
        id: 5.1997835e+18
        name: Dolores rerum praesentium ratione et dolores.
        screenName: Voluptas sed dolorum itaque qui sequi.
        teamId: 3.9228076e+18
        twitterAccountId: 4.8803786e+18
        userId: 2.0414701e+18
    properties:
      twitterAccountInputs:
        $ref: '#/definitions/TwitterAccountInputCollection'
    required:
    - twitterAccountInputs
    title: 'Mediatype identifier: application/vnd.app.twitter_account_intputs+json;
      view=default'
    type: object
  UpdateDeviceInputLocationPayload:
    example:
      key: Et praesentium.
      latitude: 0.4413019
      longitude: 0.22301453
    properties:
      key:
        example: Et praesentium.
        type: string
      latitude:
        example: 0.4413019
        format: double
        type: number
      longitude:
        example: 0.22301453
        format: double
        type: number
    required:
    - key
    - longitude
    - latitude
    title: UpdateDeviceInputLocationPayload
    type: object
  UpdateDeviceInputPayload:
    example:
      key: Ut est tempora.
      name: Sed voluptatem.
    properties:
      key:
        example: Ut est tempora.
        type: string
      name:
        example: Sed voluptatem.
        type: string
    required:
    - name
    - key
    title: UpdateDeviceInputPayload
    type: object
  UpdateDeviceInputSchemaPayload:
    example:
      active: false
      jsonSchema: Quaerat voluptates dicta consectetur nostrum.
      key: Et et eos animi quisquam.
    properties:
      active:
        example: false
        type: boolean
      jsonSchema:
        example: Quaerat voluptates dicta consectetur nostrum.
        type: string
      key:
        example: Et et eos animi quisquam.
        type: string
    required:
    - key
    - active
    - jsonSchema
    title: UpdateDeviceInputSchemaPayload
    type: object
  UpdateInputPayload:
    example:
      active: false
      name: Modi quis occaecati iure repudiandae.
      teamId: 1.7483596e+18
      userId: 1.3522481e+18
    properties:
      active:
        example: false
        type: boolean
      name:
        example: Modi quis occaecati iure repudiandae.
        type: string
      teamId:
        example: 1.7483596e+18
        format: int64
        type: integer
      userId:
        example: 1.3522481e+18
        format: int64
        type: integer
    required:
    - name
    title: UpdateInputPayload
    type: object
  UpdateMemberPayload:
    example:
      role: Placeat consequatur quod eum.
    properties:
      role:
        example: Placeat consequatur quod eum.
        type: string
    required:
    - role
    title: UpdateMemberPayload
    type: object
  UpdateUserPayload:
    example:
      bio: Voluptatem rerum numquam voluptatem veritatis inventore incidunt.
      email: grover_kutch@schimmelmitchell.com
      name: xc40imp6g6
      username: g0z6y1io27
    properties:
      bio:
        example: Voluptatem rerum numquam voluptatem veritatis inventore incidunt.
        type: string
      email:
        example: grover_kutch@schimmelmitchell.com
        format: email
        type: string
      name:
        example: xc40imp6g6
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: g0z6y1io27
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - name
    - email
    - username
    - bio
    title: UpdateUserPayload
    type: object
  User:
    description: User media type (default view)
    example:
      bio: Illo officiis dignissimos.
      email: theo@jenkins.net
      id: 2.1992862e+18
      name: 4jt477aket
      username: 8qkueb63hu
    properties:
      bio:
        example: Illo officiis dignissimos.
        type: string
      email:
        example: theo@jenkins.net
        format: email
        type: string
      id:
        example: 2.1992862e+18
        format: int64
        type: integer
      name:
        example: 4jt477aket
        maxLength: 256
        pattern: \S
        type: string
      username:
        description: Username
        example: 8qkueb63hu
        maxLength: 40
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        type: string
    required:
    - id
    - name
    - username
    - email
    - bio
    title: 'Mediatype identifier: application/vnd.app.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - bio: Illo officiis dignissimos.
      email: theo@jenkins.net
      id: 2.1992862e+18
      name: 4jt477aket
      username: 8qkueb63hu
    - bio: Illo officiis dignissimos.
      email: theo@jenkins.net
      id: 2.1992862e+18
      name: 4jt477aket
      username: 8qkueb63hu
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.app.user+json; type=collection;
      view=default'
    type: array
  Users:
    description: Users media type (default view)
    example:
      users:
      - bio: Illo officiis dignissimos.
        email: theo@jenkins.net
        id: 2.1992862e+18
        name: 4jt477aket
        username: 8qkueb63hu
      - bio: Illo officiis dignissimos.
        email: theo@jenkins.net
        id: 2.1992862e+18
        name: 4jt477aket
        username: 8qkueb63hu
    properties:
      users:
        $ref: '#/definitions/UserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.app.users+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: api.fieldkit.org:8080
info:
  description: A one-click open platform for field researchers and explorers.
  title: Fieldkit API
  version: ""
paths:
  /expeditions/{expeditionId}:
    get:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id expedition
      tags:
      - expedition
    patch:
      description: |-
        Update an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#update
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update expedition
      tags:
      - expedition
  /expeditions/{expeditionId}/input-tokens:
    get:
      description: |-
        Update an expedition's input tokens

        Required security scopes:
          * `api:access`
      operationId: input_token#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.input_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InputTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id input_token
      tags:
      - input_token
    post:
      description: |-
        Add an input token

        Required security scopes:
          * `api:access`
      operationId: input_token#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.input_token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InputToken'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add input_token
      tags:
      - input_token
  /expeditions/{expeditionId}/inputs:
    get:
      description: |-
        List an expedition's inputs

        Required security scopes:
          * `api:access`
      operationId: input#list expedition id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Inputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list expedition id input
      tags:
      - input
  /expeditions/{expeditionId}/inputs/devices:
    post:
      description: |-
        Add a Device input

        Required security scopes:
          * `api:access`
      operationId: device#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddDeviceInputPayload'
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add device
      tags:
      - device
  /expeditions/{expeditionId}/inputs/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account inputs

        Required security scopes:
          * `api:access`
      operationId: twitter#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountInputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id twitter
      tags:
      - twitter
    post:
      description: |-
        Add a Twitter account input

        Required security scopes:
          * `api:access`
      operationId: twitter#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTwitterAccountInputPayload'
      produces:
      - application/vnd.app.location+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add twitter
      tags:
      - twitter
  /expeditions/{expeditionId}/picture:
    get:
      description: Get a expedition's picture
      operationId: picture#expedition get id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: expedition get id picture
      tags:
      - picture
  /expeditions/{expeditionId}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list id
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id team
      tags:
      - team
    post:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#add
      parameters:
      - in: path
        name: expeditionId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add team
      tags:
      - team
  /features/{featureId}/geojson:
    get:
      description: List a feature's GeoJSON by id.
      operationId: GeoJSON#list by id
      parameters:
      - in: path
        name: featureId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged-geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by id GeoJSON
      tags:
      - GeoJSON
  /input-tokens/{inputTokenId}:
    delete:
      description: |-
        Delete an input token

        Required security scopes:
          * `api:access`
      operationId: input_token#delete
      parameters:
      - in: path
        name: inputTokenId
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete input_token
      tags:
      - input_token
  /inputs/{inputId}:
    get:
      description: List an input
      operationId: input#list id
      parameters:
      - in: path
        name: inputId
        required: true
        type: integer
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list id input
      tags:
      - input
    patch:
      description: |-
        Update an input

        Required security scopes:
          * `api:access`
      operationId: input#update
      parameters:
      - in: path
        name: inputId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateInputPayload'
      produces:
      - application/vnd.app.input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Input'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update input
      tags:
      - input
  /inputs/{inputId}/geojson:
    get:
      description: List an input's features in a GeoJSON.
      operationId: GeoJSON#list by input
      parameters:
      - in: query
        name: descending
        required: false
        type: boolean
      - in: path
        name: inputId
        required: true
        type: integer
      produces:
      - application/vnd.app.paged-geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list by input GeoJSON
      tags:
      - GeoJSON
  /inputs/{inputId}/summary:
    get:
      description: List an input
      operationId: input#summary by id
      parameters:
      - in: path
        name: inputId
        required: true
        type: integer
      produces:
      - application/vnd.app.input_summary+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InputSummary'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: summary by id input
      tags:
      - input
  /inputs/devices/{id}:
    get:
      description: |-
        Get a Device input

        Required security scopes:
          * `api:access`
      operationId: device#get id
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id device
      tags:
      - device
    patch:
      description: |-
        Update an Device input

        Required security scopes:
          * `api:access`
      operationId: device#update
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceInputPayload'
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update device
      tags:
      - device
  /inputs/devices/{id}/location:
    patch:
      description: |-
        Update an Device input location

        Required security scopes:
          * `api:access`
      operationId: device#update location
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceInputLocationPayload'
      produces:
      - application/vnd.app.device_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update location device
      tags:
      - device
  /inputs/devices/{id}/schemas:
    patch:
      description: |-
        Update an Device input schema

        Required security scopes:
          * `api:access`
      operationId: device#update schema
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceInputSchemaPayload'
      produces:
      - application/vnd.app.device_schemas+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceSchemas'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update schema device
      tags:
      - device
  /inputs/twitter-accounts/{inputId}:
    get:
      description: |-
        Get a Twitter account input

        Required security scopes:
          * `api:access`
      operationId: twitter#get id
      parameters:
      - in: path
        name: inputId
        required: true
        type: integer
      produces:
      - application/vnd.app.twitter_account_input+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountInput'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id twitter
      tags:
      - twitter
  /login:
    post:
      description: Creates a valid JWT given login credentials.
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: login user
      tags:
      - user
  /logout:
    post:
      description: |-
        Creates a valid JWT given login credentials.

        Required security scopes:
          * `api:access`
      operationId: user#logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: logout user
      tags:
      - user
  /projects:
    get:
      description: |-
        List projects

        Required security scopes:
          * `api:access`
      operationId: project#list
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list project
      tags:
      - project
    post:
      description: |-
        Add a project

        Required security scopes:
          * `api:access`
      operationId: project#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add project
      tags:
      - project
  /projects/@/{project}:
    get:
      description: Get a project
      operationId: project#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get project
      tags:
      - project
  /projects/@/{project}/administrators:
    get:
      description: |-
        List an project's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list administrator
      tags:
      - administrator
  /projects/@/{project}/administrators/@/{username}:
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get administrator
      tags:
      - administrator
  /projects/@/{project}/expeditions:
    get:
      description: List a project's expeditions
      operationId: expedition#list
      parameters:
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}:
    get:
      description: Add an expedition
      operationId: expedition#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: get expedition
      tags:
      - expedition
  /projects/@/{project}/expeditions/@/{expedition}/geojson:
    get:
      description: List a expedition's features in a GeoJSON.
      operationId: GeoJSON#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.paged-geojson+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedGeoJSON'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list GeoJSON
      tags:
      - GeoJSON
  /projects/@/{project}/expeditions/@/{expedition}/input-tokens:
    get:
      description: |-
        List an expedition's input tokens

        Required security scopes:
          * `api:access`
      operationId: input_token#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.input_tokens+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InputTokens'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list input_token
      tags:
      - input_token
  /projects/@/{project}/expeditions/@/{expedition}/inputs:
    get:
      description: List a project's inputs
      operationId: input#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Inputs'
        "400":
          description: Bad Request
      schemes:
      - https
      summary: list input
      tags:
      - input
  /projects/@/{project}/expeditions/@/{expedition}/inputs/devices:
    get:
      description: |-
        List an expedition's Device inputs

        Required security scopes:
          * `api:access`
      operationId: device#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.device_inputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceInputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list device
      tags:
      - device
  /projects/@/{project}/expeditions/@/{expedition}/inputs/twitter-accounts:
    get:
      description: |-
        List an expedition's Twitter account inputs

        Required security scopes:
          * `api:access`
      operationId: twitter#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.twitter_account_intputs+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TwitterAccountInputs'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list twitter
      tags:
      - twitter
  /projects/@/{project}/expeditions/@/{expedition}/teams:
    get:
      description: |-
        List an expedition's teams

        Required security scopes:
          * `api:access`
      operationId: team#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.teams+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Teams'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}:
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get team
      tags:
      - team
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members:
    get:
      description: |-
        List an team's members

        Required security scopes:
          * `api:access`
      operationId: member#list
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list member
      tags:
      - member
  /projects/@/{project}/expeditions/@/{expedition}/teams/@/{team}/members/@/{username}:
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get
      parameters:
      - description: Expedition slug
        in: path
        maxLength: 40
        name: expedition
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Project slug
        in: path
        maxLength: 40
        name: project
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Team slug
        in: path
        maxLength: 40
        name: team
        pattern: ^[\da-z]+(?:-[\da-z]+)*$
        required: true
        type: string
      - description: Username
        in: path
        maxLength: 40
        name: username
        pattern: ^[\dA-Za-z]+(?:-[\dA-Za-z]+)*$
        required: true
        type: string
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get member
      tags:
      - member
  /projects/{projectId}:
    get:
      description: |-
        Get a project

        Required security scopes:
          * `api:access`
      operationId: project#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id project
      tags:
      - project
    patch:
      description: |-
        Update a project

        Required security scopes:
          * `api:access`
      operationId: project#update
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddProjectPayload'
      produces:
      - application/vnd.app.project+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update project
      tags:
      - project
  /projects/{projectId}/administrators:
    get:
      description: |-
        List an projects's administrators

        Required security scopes:
          * `api:access`
      operationId: administrator#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrators+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrators'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id administrator
      tags:
      - administrator
    post:
      description: |-
        Add an administrator to a project

        Required security scopes:
          * `api:access`
      operationId: administrator#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddAdministratorPayload'
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add administrator
      tags:
      - administrator
  /projects/{projectId}/administrators/{userId}:
    delete:
      description: |-
        Remove an administrator from a project

        Required security scopes:
          * `api:access`
      operationId: administrator#delete
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete administrator
      tags:
      - administrator
    get:
      description: |-
        Get an administrator

        Required security scopes:
          * `api:access`
      operationId: administrator#get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.administrator+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectAdministrator'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id administrator
      tags:
      - administrator
  /projects/{projectId}/expeditions:
    get:
      description: |-
        List a project's expeditions

        Required security scopes:
          * `api:access`
      operationId: expedition#list id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/vnd.app.expeditions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expeditions'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id expedition
      tags:
      - expedition
    post:
      description: |-
        Add an expedition

        Required security scopes:
          * `api:access`
      operationId: expedition#add
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddExpeditionPayload'
      produces:
      - application/vnd.app.expedition+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Expedition'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add expedition
      tags:
      - expedition
  /projects/{projectId}/picture:
    get:
      description: Get a project's picture
      operationId: picture#project get id
      parameters:
      - in: path
        name: projectId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: project get id picture
      tags:
      - picture
  /refresh:
    post:
      description: Creates a valid JWT given a refresh token.
      operationId: user#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshUserPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: refresh user
      tags:
      - user
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download api/public/swagger/swagger.yaml
  /teams/{teamId}:
    delete:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete team
      tags:
      - team
    get:
      description: |-
        Add a team

        Required security scopes:
          * `api:access`
      operationId: team#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id team
      tags:
      - team
    patch:
      description: |-
        Update a team

        Required security scopes:
          * `api:access`
      operationId: team#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddTeamPayload'
      produces:
      - application/vnd.app.team+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update team
      tags:
      - team
  /teams/{teamId}/members:
    get:
      description: |-
        List an teams's members

        Required security scopes:
          * `api:access`
      operationId: member#list id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/vnd.app.members+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMembers'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list id member
      tags:
      - member
    post:
      description: |-
        Add a member to a team

        Required security scopes:
          * `api:access`
      operationId: member#add
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: add member
      tags:
      - member
  /teams/{teamId}/members/{userId}:
    delete:
      description: |-
        Remove a member from a team

        Required security scopes:
          * `api:access`
      operationId: member#delete
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: delete member
      tags:
      - member
    get:
      description: |-
        Get a member

        Required security scopes:
          * `api:access`
      operationId: member#get id
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id member
      tags:
      - member
    patch:
      description: |-
        Update a member

        Required security scopes:
          * `api:access`
      operationId: member#update
      parameters:
      - in: path
        name: teamId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateMemberPayload'
      produces:
      - application/vnd.app.member+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMember'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update member
      tags:
      - member
  /twitter/callback:
    get:
      description: OAuth callback endpoint for Twitter
      operationId: twitter#callback
      parameters:
      - in: query
        name: oauthToken
        required: true
        type: string
      - in: query
        name: oauthVerifier
        required: false
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "400":
          description: Bad Request
      schemes:
      - https
      summary: callback twitter
      tags:
      - twitter
  /user:
    get:
      description: |-
        Get the authenticated user

        Required security scopes:
          * `api:access`
      operationId: user#get current
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get current user
      tags:
      - user
  /user/projects:
    get:
      description: |-
        List the authenticated user's projects

        Required security scopes:
          * `api:access`
      operationId: project#list current
      produces:
      - application/vnd.app.projects+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Projects'
        "400":
          description: Bad Request
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list current project
      tags:
      - project
  /users:
    get:
      description: |-
        List users

        Required security scopes:
          * `api:access`
      operationId: user#list
      produces:
      - application/vnd.app.users+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Users'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
    post:
      description: Add a user
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: add user
      tags:
      - user
  /users/@/{username}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get
      parameters:
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get user
      tags:
      - user
  /users/{userId}:
    get:
      description: |-
        Get a user

        Required security scopes:
          * `api:access`
      operationId: user#get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: get id user
      tags:
      - user
    patch:
      description: |-
        Update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      produces:
      - application/vnd.app.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      schemes:
      - https
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /users/{userId}/picture:
    get:
      description: Get a user's picture
      operationId: picture#user get id
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - https
      summary: user get id picture
      tags:
      - picture
  /validate:
    get:
      description: Validate a user's email address.
      operationId: user#validate
      parameters:
      - in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: validate user
      tags:
      - user
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  NoContent:
    description: No Content
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
